{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _inherits = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmac = exports.HMAC = void 0;\nvar _assert_js_1 = require(\"./_assert.js\");\nvar utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nvar HMAC = /*#__PURE__*/function (_utils_js_1$Hash) {\n  _inherits(HMAC, _utils_js_1$Hash);\n  var _super = _createSuper(HMAC);\n  function HMAC(hash, _key) {\n    var _this;\n    _classCallCheck(this, HMAC);\n    _this = _super.call(this);\n    _this.finished = false;\n    _this.destroyed = false;\n    _assert_js_1.default.hash(hash);\n    var key = (0, utils_js_1.toBytes)(_key);\n    _this.iHash = hash.create();\n    if (typeof _this.iHash.update !== 'function') throw new Error('Expected instance of class which extends utils.Hash');\n    _this.blockLen = _this.iHash.blockLen;\n    _this.outputLen = _this.iHash.outputLen;\n    var blockLen = _this.blockLen;\n    var pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (var i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    _this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    _this.oHash = hash.create();\n    // Undo internal XOR && apply outer XOR\n    for (var _i = 0; _i < pad.length; _i++) pad[_i] ^= 0x36 ^ 0x5c;\n    _this.oHash.update(pad);\n    pad.fill(0);\n    return _this;\n  }\n  _createClass(HMAC, [{\n    key: \"update\",\n    value: function update(buf) {\n      _assert_js_1.default.exists(this);\n      this.iHash.update(buf);\n      return this;\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      _assert_js_1.default.exists(this);\n      _assert_js_1.default.bytes(out, this.outputLen);\n      this.finished = true;\n      this.iHash.digestInto(out);\n      this.oHash.update(out);\n      this.oHash.digestInto(out);\n      this.destroy();\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      var out = new Uint8Array(this.oHash.outputLen);\n      this.digestInto(out);\n      return out;\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      // Create new instance without calling constructor since key already in state and we don't know it.\n      to || (to = Object.create(Object.getPrototypeOf(this), {}));\n      var oHash = this.oHash,\n        iHash = this.iHash,\n        finished = this.finished,\n        destroyed = this.destroyed,\n        blockLen = this.blockLen,\n        outputLen = this.outputLen;\n      to = to;\n      to.finished = finished;\n      to.destroyed = destroyed;\n      to.blockLen = blockLen;\n      to.outputLen = outputLen;\n      to.oHash = oHash._cloneInto(to.oHash);\n      to.iHash = iHash._cloneInto(to.iHash);\n      return to;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.oHash.destroy();\n      this.iHash.destroy();\n    }\n  }]);\n  return HMAC;\n}(utils_js_1.Hash);\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nvar hmac = function hmac(hash, key, message) {\n  return new HMAC(hash, key).update(message).digest();\n};\nexports.hmac = hmac;\nexports.hmac.create = function (hash, key) {\n  return new HMAC(hash, key);\n};","map":{"version":3,"names":["_assert_js_1","require","utils_js_1","HMAC","_utils_js_1$Hash","_inherits","_super","_createSuper","hash","_key","_this","_classCallCheck","call","finished","destroyed","default","key","toBytes","iHash","create","update","Error","blockLen","outputLen","pad","Uint8Array","set","length","digest","i","oHash","fill","_createClass","value","buf","exists","digestInto","out","bytes","destroy","_cloneInto","to","Object","getPrototypeOf","Hash","exports","hmac","message"],"sources":["src/hmac.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}