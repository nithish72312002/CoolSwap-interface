{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Withdrawal = void 0;\nvar address_1 = require(\"./address\");\nvar bytes_1 = require(\"./bytes\");\nvar types_1 = require(\"./types\");\n/**\n * Representation of EIP-4895 withdrawal data\n */\nvar Withdrawal = /*#__PURE__*/function () {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  function Withdrawal(index, validatorIndex, address,\n  /**\n   * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n   */\n  amount) {\n    _classCallCheck(this, Withdrawal);\n    this.index = index;\n    this.validatorIndex = validatorIndex;\n    this.address = address;\n    this.amount = amount;\n  }\n  _createClass(Withdrawal, [{\n    key: \"raw\",\n    value: function raw() {\n      return Withdrawal.toBufferArray(this);\n    }\n  }, {\n    key: \"toValue\",\n    value: function toValue() {\n      return {\n        index: this.index,\n        validatorIndex: this.validatorIndex,\n        address: this.address.buf,\n        amount: this.amount\n      };\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        index: (0, bytes_1.bigIntToHex)(this.index),\n        validatorIndex: (0, bytes_1.bigIntToHex)(this.validatorIndex),\n        address: '0x' + this.address.buf.toString('hex'),\n        amount: (0, bytes_1.bigIntToHex)(this.amount)\n      };\n    }\n  }], [{\n    key: \"fromWithdrawalData\",\n    value: function fromWithdrawalData(withdrawalData) {\n      var indexData = withdrawalData.index,\n        validatorIndexData = withdrawalData.validatorIndex,\n        addressData = withdrawalData.address,\n        amountData = withdrawalData.amount;\n      var index = (0, types_1.toType)(indexData, types_1.TypeOutput.BigInt);\n      var validatorIndex = (0, types_1.toType)(validatorIndexData, types_1.TypeOutput.BigInt);\n      var address = new address_1.Address((0, types_1.toType)(addressData, types_1.TypeOutput.Buffer));\n      var amount = (0, types_1.toType)(amountData, types_1.TypeOutput.BigInt);\n      return new Withdrawal(index, validatorIndex, address, amount);\n    }\n  }, {\n    key: \"fromValuesArray\",\n    value: function fromValuesArray(withdrawalArray) {\n      if (withdrawalArray.length !== 4) {\n        throw Error(\"Invalid withdrawalArray length expected=4 actual=\".concat(withdrawalArray.length));\n      }\n      var _withdrawalArray = _slicedToArray(withdrawalArray, 4),\n        index = _withdrawalArray[0],\n        validatorIndex = _withdrawalArray[1],\n        address = _withdrawalArray[2],\n        amount = _withdrawalArray[3];\n      return Withdrawal.fromWithdrawalData({\n        index: index,\n        validatorIndex: validatorIndex,\n        address: address,\n        amount: amount\n      });\n    }\n    /**\n     * Convert a withdrawal to a buffer array\n     * @param withdrawal the withdrawal to convert\n     * @returns buffer array of the withdrawal\n     */\n  }, {\n    key: \"toBufferArray\",\n    value: function toBufferArray(withdrawal) {\n      var index = withdrawal.index,\n        validatorIndex = withdrawal.validatorIndex,\n        address = withdrawal.address,\n        amount = withdrawal.amount;\n      var indexBuffer = (0, types_1.toType)(index, types_1.TypeOutput.BigInt) === BigInt(0) ? Buffer.alloc(0) : (0, types_1.toType)(index, types_1.TypeOutput.Buffer);\n      var validatorIndexBuffer = (0, types_1.toType)(validatorIndex, types_1.TypeOutput.BigInt) === BigInt(0) ? Buffer.alloc(0) : (0, types_1.toType)(validatorIndex, types_1.TypeOutput.Buffer);\n      var addressBuffer;\n      if (address instanceof address_1.Address) {\n        addressBuffer = address.buf;\n      } else {\n        addressBuffer = (0, types_1.toType)(address, types_1.TypeOutput.Buffer);\n      }\n      var amountBuffer = (0, types_1.toType)(amount, types_1.TypeOutput.BigInt) === BigInt(0) ? Buffer.alloc(0) : (0, types_1.toType)(amount, types_1.TypeOutput.Buffer);\n      return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer];\n    }\n  }]);\n  return Withdrawal;\n}();\nexports.Withdrawal = Withdrawal;","map":{"version":3,"names":["address_1","require","bytes_1","types_1","Withdrawal","index","validatorIndex","address","amount","_classCallCheck","_createClass","key","value","raw","toBufferArray","toValue","buf","toJSON","bigIntToHex","toString","fromWithdrawalData","withdrawalData","indexData","validatorIndexData","addressData","amountData","toType","TypeOutput","BigInt","Address","Buffer","fromValuesArray","withdrawalArray","length","Error","concat","_withdrawalArray","_slicedToArray","withdrawal","indexBuffer","alloc","validatorIndexBuffer","addressBuffer","amountBuffer","exports"],"sources":["../src/withdrawal.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}