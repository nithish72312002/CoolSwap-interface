{"ast":null,"code":"var _asyncToGenerator = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar Mutex = require('async-mutex').Mutex;\nvar _require = require('json-rpc-engine'),\n  createAsyncMiddleware = _require.createAsyncMiddleware;\nvar createJsonRpcMiddleware = require('eth-json-rpc-middleware/scaffold');\nvar LogFilter = require('./log-filter.js');\nvar BlockFilter = require('./block-filter.js');\nvar TxFilter = require('./tx-filter.js');\nvar _require2 = require('./hexUtils'),\n  intToHex = _require2.intToHex,\n  hexToInt = _require2.hexToInt;\nmodule.exports = createEthFilterMiddleware;\nfunction createEthFilterMiddleware(_ref) {\n  var blockTracker = _ref.blockTracker,\n    provider = _ref.provider;\n  // create filter collection\n  var filterIndex = 0;\n  var filters = {};\n  // create update mutex\n  var mutex = new Mutex();\n  var waitForFree = mutexMiddlewareWrapper({\n    mutex: mutex\n  });\n  var middleware = createJsonRpcMiddleware({\n    // install filters\n    eth_newFilter: waitForFree(toFilterCreationMiddleware(newLogFilter)),\n    eth_newBlockFilter: waitForFree(toFilterCreationMiddleware(newBlockFilter)),\n    eth_newPendingTransactionFilter: waitForFree(toFilterCreationMiddleware(newPendingTransactionFilter)),\n    // uninstall filters\n    eth_uninstallFilter: waitForFree(toAsyncRpcMiddleware(uninstallFilterHandler)),\n    // checking filter changes\n    eth_getFilterChanges: waitForFree(toAsyncRpcMiddleware(getFilterChanges)),\n    eth_getFilterLogs: waitForFree(toAsyncRpcMiddleware(getFilterLogs))\n  });\n\n  // setup filter updating and destroy handler\n  var filterUpdater = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n      var oldBlock, newBlock, releaseLock;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            oldBlock = _ref2.oldBlock, newBlock = _ref2.newBlock;\n            if (!(filters.length === 0)) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 3:\n            _context2.next = 5;\n            return mutex.acquire();\n          case 5:\n            releaseLock = _context2.sent;\n            _context2.prev = 6;\n            _context2.next = 9;\n            return Promise.all(objValues(filters).map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(filter) {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return filter.update({\n                        oldBlock: oldBlock,\n                        newBlock: newBlock\n                      });\n                    case 3:\n                      _context.next = 8;\n                      break;\n                    case 5:\n                      _context.prev = 5;\n                      _context.t0 = _context[\"catch\"](0);\n                      // handle each error individually so filter update errors don't affect other filters\n                      console.error(_context.t0);\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee, null, [[0, 5]]);\n              }));\n              return function (_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n          case 9:\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](6);\n            // log error so we don't skip the releaseLock\n            console.error(_context2.t0);\n          case 14:\n            // unlock update reads\n            releaseLock();\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[6, 11]]);\n    }));\n    return function filterUpdater(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  // expose filter methods directly\n  middleware.newLogFilter = newLogFilter;\n  middleware.newBlockFilter = newBlockFilter;\n  middleware.newPendingTransactionFilter = newPendingTransactionFilter;\n  middleware.uninstallFilter = uninstallFilterHandler;\n  middleware.getFilterChanges = getFilterChanges;\n  middleware.getFilterLogs = getFilterLogs;\n\n  // expose destroy method for cleanup\n  middleware.destroy = function () {\n    uninstallAllFilters();\n  };\n  return middleware;\n\n  //\n  // new filters\n  //\n  function newLogFilter(_x3) {\n    return _newLogFilter.apply(this, arguments);\n  }\n  function _newLogFilter() {\n    _newLogFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n      var filter, filterIndex;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            filter = new LogFilter({\n              provider: provider,\n              params: params\n            });\n            _context3.next = 3;\n            return installFilter(filter);\n          case 3:\n            filterIndex = _context3.sent;\n            return _context3.abrupt(\"return\", filter);\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return _newLogFilter.apply(this, arguments);\n  }\n  function newBlockFilter() {\n    return _newBlockFilter.apply(this, arguments);\n  }\n  function _newBlockFilter() {\n    _newBlockFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var filter, filterIndex;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            filter = new BlockFilter({\n              provider: provider\n            });\n            _context4.next = 3;\n            return installFilter(filter);\n          case 3:\n            filterIndex = _context4.sent;\n            return _context4.abrupt(\"return\", filter);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _newBlockFilter.apply(this, arguments);\n  }\n  function newPendingTransactionFilter() {\n    return _newPendingTransactionFilter.apply(this, arguments);\n  } //\n  // get filter changes\n  //\n  function _newPendingTransactionFilter() {\n    _newPendingTransactionFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var filter, filterIndex;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            filter = new TxFilter({\n              provider: provider\n            });\n            _context5.next = 3;\n            return installFilter(filter);\n          case 3:\n            filterIndex = _context5.sent;\n            return _context5.abrupt(\"return\", filter);\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return _newPendingTransactionFilter.apply(this, arguments);\n  }\n  function getFilterChanges(_x4) {\n    return _getFilterChanges.apply(this, arguments);\n  }\n  function _getFilterChanges() {\n    _getFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(filterIndexHex) {\n      var filterIndex, filter, results;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            filterIndex = hexToInt(filterIndexHex);\n            filter = filters[filterIndex];\n            if (filter) {\n              _context6.next = 4;\n              break;\n            }\n            throw new Error(\"No filter for index \\\"\".concat(filterIndex, \"\\\"\"));\n          case 4:\n            results = filter.getChangesAndClear();\n            return _context6.abrupt(\"return\", results);\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return _getFilterChanges.apply(this, arguments);\n  }\n  function getFilterLogs(_x5) {\n    return _getFilterLogs.apply(this, arguments);\n  } //\n  // remove filters\n  //\n  function _getFilterLogs() {\n    _getFilterLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(filterIndexHex) {\n      var filterIndex, filter;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            filterIndex = hexToInt(filterIndexHex);\n            filter = filters[filterIndex];\n            if (filter) {\n              _context7.next = 4;\n              break;\n            }\n            throw new Error(\"No filter for index \\\"\".concat(filterIndex, \"\\\"\"));\n          case 4:\n            // only return results for log filters\n            if (filter.type === 'log') {\n              results = filter.getAllResults();\n            } else {\n              results = [];\n            }\n            return _context7.abrupt(\"return\", results);\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    return _getFilterLogs.apply(this, arguments);\n  }\n  function uninstallFilterHandler(_x6) {\n    return _uninstallFilterHandler.apply(this, arguments);\n  } //\n  // utils\n  //\n  function _uninstallFilterHandler() {\n    _uninstallFilterHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(filterIndexHex) {\n      var filterIndex, filter, result;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            // check filter exists\n            filterIndex = hexToInt(filterIndexHex);\n            filter = filters[filterIndex];\n            result = Boolean(filter); // uninstall filter\n            if (!result) {\n              _context8.next = 6;\n              break;\n            }\n            _context8.next = 6;\n            return uninstallFilter(filterIndex);\n          case 6:\n            return _context8.abrupt(\"return\", result);\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return _uninstallFilterHandler.apply(this, arguments);\n  }\n  function installFilter(_x7) {\n    return _installFilter.apply(this, arguments);\n  }\n  function _installFilter() {\n    _installFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(filter) {\n      var prevFilterCount, currentBlock, newFilterCount;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            prevFilterCount = objValues(filters).length; // install filter\n            _context9.next = 3;\n            return blockTracker.getLatestBlock();\n          case 3:\n            currentBlock = _context9.sent;\n            _context9.next = 6;\n            return filter.initialize({\n              currentBlock: currentBlock\n            });\n          case 6:\n            filterIndex++;\n            filters[filterIndex] = filter;\n            filter.id = filterIndex;\n            filter.idHex = intToHex(filterIndex);\n            // update block tracker subs\n            newFilterCount = objValues(filters).length;\n            updateBlockTrackerSubs({\n              prevFilterCount: prevFilterCount,\n              newFilterCount: newFilterCount\n            });\n            return _context9.abrupt(\"return\", filterIndex);\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    return _installFilter.apply(this, arguments);\n  }\n  function uninstallFilter(_x8) {\n    return _uninstallFilter.apply(this, arguments);\n  }\n  function _uninstallFilter() {\n    _uninstallFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(filterIndex) {\n      var prevFilterCount, newFilterCount;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            prevFilterCount = objValues(filters).length;\n            delete filters[filterIndex];\n            // update block tracker subs\n            newFilterCount = objValues(filters).length;\n            updateBlockTrackerSubs({\n              prevFilterCount: prevFilterCount,\n              newFilterCount: newFilterCount\n            });\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    }));\n    return _uninstallFilter.apply(this, arguments);\n  }\n  function uninstallAllFilters() {\n    return _uninstallAllFilters.apply(this, arguments);\n  }\n  function _uninstallAllFilters() {\n    _uninstallAllFilters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var prevFilterCount;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            prevFilterCount = objValues(filters).length;\n            filters = {};\n            // update block tracker subs\n            updateBlockTrackerSubs({\n              prevFilterCount: prevFilterCount,\n              newFilterCount: 0\n            });\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11);\n    }));\n    return _uninstallAllFilters.apply(this, arguments);\n  }\n  function updateBlockTrackerSubs(_ref5) {\n    var prevFilterCount = _ref5.prevFilterCount,\n      newFilterCount = _ref5.newFilterCount;\n    // subscribe\n    if (prevFilterCount === 0 && newFilterCount > 0) {\n      blockTracker.on('sync', filterUpdater);\n      return;\n    }\n    // unsubscribe\n    if (prevFilterCount > 0 && newFilterCount === 0) {\n      blockTracker.removeListener('sync', filterUpdater);\n      return;\n    }\n  }\n}\n\n// helper for turning filter constructors into rpc middleware\nfunction toFilterCreationMiddleware(createFilterFn) {\n  return toAsyncRpcMiddleware( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n    var filter,\n      result,\n      _args12 = arguments;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return createFilterFn.apply(void 0, _args12);\n        case 2:\n          filter = _context12.sent;\n          result = intToHex(filter.id);\n          return _context12.abrupt(\"return\", result);\n        case 5:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  })));\n}\n\n// helper for pulling out req.params and setting res.result\nfunction toAsyncRpcMiddleware(asyncFn) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n      var result;\n      return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return asyncFn.apply(null, req.params);\n          case 2:\n            result = _context13.sent;\n            res.result = result;\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13);\n    }));\n    return function (_x9, _x10) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n}\nfunction mutexMiddlewareWrapper(_ref8) {\n  var mutex = _ref8.mutex;\n  return function (middleware) {\n    return /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res, next, end) {\n        var releaseLock;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return mutex.acquire();\n            case 2:\n              releaseLock = _context14.sent;\n              releaseLock();\n              middleware(req, res, next, end);\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14);\n      }));\n      return function (_x11, _x12, _x13, _x14) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n  };\n}\nfunction objValues(obj, fn) {\n  var values = [];\n  for (var key in obj) {\n    values.push(obj[key]);\n  }\n  return values;\n}","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","Mutex","require","_require","createAsyncMiddleware","createJsonRpcMiddleware","LogFilter","BlockFilter","TxFilter","_require2","intToHex","hexToInt","module","exports","createEthFilterMiddleware","_ref","blockTracker","provider","filterIndex","filters","mutex","waitForFree","mutexMiddlewareWrapper","middleware","eth_newFilter","toFilterCreationMiddleware","newLogFilter","eth_newBlockFilter","newBlockFilter","eth_newPendingTransactionFilter","newPendingTransactionFilter","eth_uninstallFilter","toAsyncRpcMiddleware","uninstallFilterHandler","eth_getFilterChanges","getFilterChanges","eth_getFilterLogs","getFilterLogs","filterUpdater","_ref3","_asyncToGenerator","_callee2","_ref2","oldBlock","newBlock","releaseLock","_callee2$","_context2","acquire","all","objValues","map","_ref4","_callee","filter","_callee$","_context","update","t0","console","error","_x2","apply","arguments","_x","uninstallFilter","destroy","uninstallAllFilters","_x3","_newLogFilter","_callee3","params","_callee3$","_context3","installFilter","_newBlockFilter","_callee4","_callee4$","_context4","_newPendingTransactionFilter","_callee5","_callee5$","_context5","_x4","_getFilterChanges","_callee6","filterIndexHex","results","_callee6$","_context6","concat","getChangesAndClear","_x5","_getFilterLogs","_callee7","_callee7$","_context7","getAllResults","_x6","_uninstallFilterHandler","_callee8","result","_callee8$","_context8","Boolean","_x7","_installFilter","_callee9","prevFilterCount","currentBlock","newFilterCount","_callee9$","_context9","getLatestBlock","initialize","id","idHex","updateBlockTrackerSubs","_x8","_uninstallFilter","_callee10","_callee10$","_context10","_uninstallAllFilters","_callee11","_callee11$","_context11","_ref5","on","removeListener","createFilterFn","_callee12","_args12","_callee12$","_context12","asyncFn","_ref7","_callee13","req","res","_callee13$","_context13","_x9","_x10","_ref8","_ref9","_callee14","end","_callee14$","_context14","_x11","_x12","_x13","_x14","obj","fn","key"],"sources":["E:/testprojects/CoolSwap-interface/node_modules/eth-json-rpc-filters/index.js"],"sourcesContent":["const Mutex = require('async-mutex').Mutex\nconst { createAsyncMiddleware } = require('json-rpc-engine')\nconst createJsonRpcMiddleware = require('eth-json-rpc-middleware/scaffold')\nconst LogFilter = require('./log-filter.js')\nconst BlockFilter = require('./block-filter.js')\nconst TxFilter = require('./tx-filter.js')\nconst { intToHex, hexToInt } = require('./hexUtils')\n\nmodule.exports = createEthFilterMiddleware\n\nfunction createEthFilterMiddleware({ blockTracker, provider }) {\n\n  // create filter collection\n  let filterIndex = 0\n  let filters = {}\n  // create update mutex\n  const mutex = new Mutex()\n  const waitForFree = mutexMiddlewareWrapper({ mutex })\n\n  const middleware = createJsonRpcMiddleware({\n    // install filters\n    eth_newFilter:                   waitForFree(toFilterCreationMiddleware(newLogFilter)),\n    eth_newBlockFilter:              waitForFree(toFilterCreationMiddleware(newBlockFilter)),\n    eth_newPendingTransactionFilter: waitForFree(toFilterCreationMiddleware(newPendingTransactionFilter)),\n    // uninstall filters\n    eth_uninstallFilter:             waitForFree(toAsyncRpcMiddleware(uninstallFilterHandler)),\n    // checking filter changes\n    eth_getFilterChanges:            waitForFree(toAsyncRpcMiddleware(getFilterChanges)),\n    eth_getFilterLogs:               waitForFree(toAsyncRpcMiddleware(getFilterLogs)),\n  })\n\n  // setup filter updating and destroy handler\n  const filterUpdater = async ({ oldBlock, newBlock }) => {\n    if (filters.length === 0) return\n    // lock update reads\n    const releaseLock = await mutex.acquire()\n    try {\n      // process all filters in parallel\n      await Promise.all(objValues(filters).map(async (filter) => {\n        try {\n         await filter.update({ oldBlock, newBlock })\n        } catch (err) {\n          // handle each error individually so filter update errors don't affect other filters\n          console.error(err)\n        }\n      }))\n    } catch (err) {\n      // log error so we don't skip the releaseLock\n      console.error(err)\n    }\n    // unlock update reads\n    releaseLock()\n  }\n\n  // expose filter methods directly\n  middleware.newLogFilter = newLogFilter\n  middleware.newBlockFilter = newBlockFilter\n  middleware.newPendingTransactionFilter = newPendingTransactionFilter\n  middleware.uninstallFilter = uninstallFilterHandler\n  middleware.getFilterChanges = getFilterChanges\n  middleware.getFilterLogs = getFilterLogs\n\n  // expose destroy method for cleanup\n  middleware.destroy = () => {\n    uninstallAllFilters()\n  }\n\n  return middleware\n\n  //\n  // new filters\n  //\n\n  async function newLogFilter(params) {\n    const filter = new LogFilter({ provider, params })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newBlockFilter() {\n    const filter = new BlockFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newPendingTransactionFilter() {\n    const filter = new TxFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  //\n  // get filter changes\n  //\n\n  async function getFilterChanges(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    const results = filter.getChangesAndClear()\n    return results\n  }\n\n  async function getFilterLogs(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    // only return results for log filters\n    if (filter.type === 'log') {\n      results = filter.getAllResults()\n    } else {\n      results = []\n    }\n    return results\n  }\n\n\n  //\n  // remove filters\n  //\n\n\n  async function uninstallFilterHandler(filterIndexHex) {\n    // check filter exists\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    const result = Boolean(filter)\n    // uninstall filter\n    if (result) {\n      await uninstallFilter(filterIndex)\n    }\n    return result\n  }\n\n  //\n  // utils\n  //\n\n  async function installFilter(filter) {\n    const prevFilterCount = objValues(filters).length\n    // install filter\n    const currentBlock = await blockTracker.getLatestBlock()\n    await filter.initialize({ currentBlock })\n    filterIndex++\n    filters[filterIndex] = filter\n    filter.id = filterIndex\n    filter.idHex = intToHex(filterIndex)\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n    return filterIndex\n  }\n\n  async function uninstallFilter(filterIndex) {\n    const prevFilterCount = objValues(filters).length\n    delete filters[filterIndex]\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n  }\n\n  async function uninstallAllFilters() {\n    const prevFilterCount = objValues(filters).length\n    filters = {}\n    // update block tracker subs\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount: 0 })\n  }\n\n  function updateBlockTrackerSubs({ prevFilterCount, newFilterCount }) {\n    // subscribe\n    if (prevFilterCount === 0 && newFilterCount > 0) {\n      blockTracker.on('sync', filterUpdater)\n      return\n    }\n    // unsubscribe\n    if (prevFilterCount > 0 && newFilterCount === 0) {\n      blockTracker.removeListener('sync', filterUpdater)\n      return\n    }\n  }\n\n}\n\n// helper for turning filter constructors into rpc middleware\nfunction toFilterCreationMiddleware(createFilterFn) {\n  return toAsyncRpcMiddleware(async (...args) => {\n    const filter = await createFilterFn(...args)\n    const result = intToHex(filter.id)\n    return result\n  })\n}\n\n// helper for pulling out req.params and setting res.result\nfunction toAsyncRpcMiddleware(asyncFn) {\n  return createAsyncMiddleware(async (req, res) => {\n    const result = await asyncFn.apply(null, req.params)\n    res.result = result\n  })\n}\n\nfunction mutexMiddlewareWrapper({ mutex }) {\n  return (middleware) => {\n    return async (req, res, next, end) => {\n      // wait for mutex available\n      // we can release immediately because\n      // we just need to make sure updates aren't active\n      const releaseLock = await mutex.acquire()\n      releaseLock()\n      middleware(req, res, next, end)\n    }\n  }\n}\n\nfunction objValues(obj, fn){\n  const values = []\n  for (let key in obj) {\n    values.push(obj[key])\n  }\n  return values\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}