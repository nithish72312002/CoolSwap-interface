{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n  var scheduler = async;\n  var windowCreationInterval = null;\n  var maxWindowSize = Number.POSITIVE_INFINITY;\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n  return function windowTimeOperatorFunction(source) {\n    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\nvar WindowTimeOperator = /*@__PURE__*/function () {\n  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    this.windowTimeSpan = windowTimeSpan;\n    this.windowCreationInterval = windowCreationInterval;\n    this.maxWindowSize = maxWindowSize;\n    this.scheduler = scheduler;\n  }\n  WindowTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n  };\n  return WindowTimeOperator;\n}();\nvar CountedSubject = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CountedSubject, _super);\n  function CountedSubject() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._numberOfNextedValues = 0;\n    return _this;\n  }\n  CountedSubject.prototype.next = function (value) {\n    this._numberOfNextedValues++;\n    _super.prototype.next.call(this, value);\n  };\n  Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n    get: function get() {\n      return this._numberOfNextedValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CountedSubject;\n}(Subject);\nvar WindowTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowTimeSubscriber, _super);\n  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.windowTimeSpan = windowTimeSpan;\n    _this.windowCreationInterval = windowCreationInterval;\n    _this.maxWindowSize = maxWindowSize;\n    _this.scheduler = scheduler;\n    _this.windows = [];\n    var window = _this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      var closeState = {\n        subscriber: _this,\n        window: window,\n        context: null\n      };\n      var creationState = {\n        windowTimeSpan: windowTimeSpan,\n        windowCreationInterval: windowCreationInterval,\n        subscriber: _this,\n        scheduler: scheduler\n      };\n      _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      var timeSpanOnlyState = {\n        subscriber: _this,\n        window: window,\n        windowTimeSpan: windowTimeSpan\n      };\n      _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n    return _this;\n  }\n  WindowTimeSubscriber.prototype._next = function (value) {\n    var windows = this.windows;\n    var len = windows.length;\n    for (var i = 0; i < len; i++) {\n      var window_1 = windows[i];\n      if (!window_1.closed) {\n        window_1.next(value);\n        if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window_1);\n        }\n      }\n    }\n  };\n  WindowTimeSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  };\n  WindowTimeSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n    while (windows.length > 0) {\n      var window_2 = windows.shift();\n      if (!window_2.closed) {\n        window_2.complete();\n      }\n    }\n    this.destination.complete();\n  };\n  WindowTimeSubscriber.prototype.openWindow = function () {\n    var window = new CountedSubject();\n    this.windows.push(window);\n    var destination = this.destination;\n    destination.next(window);\n    return window;\n  };\n  WindowTimeSubscriber.prototype.closeWindow = function (window) {\n    window.complete();\n    var windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  };\n  return WindowTimeSubscriber;\n}(Subscriber);\nfunction dispatchWindowTimeSpanOnly(state) {\n  var subscriber = state.subscriber,\n    windowTimeSpan = state.windowTimeSpan,\n    window = state.window;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n  var windowTimeSpan = state.windowTimeSpan,\n    subscriber = state.subscriber,\n    scheduler = state.scheduler,\n    windowCreationInterval = state.windowCreationInterval;\n  var window = subscriber.openWindow();\n  var action = this;\n  var context = {\n    action: action,\n    subscription: null\n  };\n  var timeSpanState = {\n    subscriber: subscriber,\n    window: window,\n    context: context\n  };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n  var subscriber = state.subscriber,\n    window = state.window,\n    context = state.context;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}","map":{"version":3,"names":["tslib_1","Subject","async","Subscriber","isNumeric","isScheduler","windowTime","windowTimeSpan","scheduler","windowCreationInterval","maxWindowSize","Number","POSITIVE_INFINITY","arguments","windowTimeOperatorFunction","source","lift","WindowTimeOperator","prototype","call","subscriber","subscribe","WindowTimeSubscriber","CountedSubject","_super","__extends","_this","apply","next","value","_numberOfNextedValues","get","configurable","destination","windows","window","openWindow","closeState","context","creationState","add","schedule","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","_next","len","length","i","window_1","closed","numberOfNextedValues","closeWindow","_error","err","shift","error","_complete","window_2","complete","push","splice","indexOf","state","action","subscription","timeSpanState","remove"],"sources":["../../../src/internal/operators/windowTime.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}