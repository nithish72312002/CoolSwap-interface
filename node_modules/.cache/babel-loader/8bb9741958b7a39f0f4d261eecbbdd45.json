{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _slicedToArray = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\nvar create = function create(code, digest) {\n  var size = digest.byteLength;\n  var sizeOffset = varint.encodingLength(code);\n  var digestOffset = sizeOffset + varint.encodingLength(size);\n  var bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nvar decode = function decode(multihash) {\n  var bytes$1 = bytes.coerce(multihash);\n  var _varint$decode = varint.decode(bytes$1),\n    _varint$decode2 = _slicedToArray(_varint$decode, 2),\n    code = _varint$decode2[0],\n    sizeOffset = _varint$decode2[1];\n  var _varint$decode3 = varint.decode(bytes$1.subarray(sizeOffset)),\n    _varint$decode4 = _slicedToArray(_varint$decode3, 2),\n    size = _varint$decode4[0],\n    digestOffset = _varint$decode4[1];\n  var digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nvar equals = function equals(a, b) {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nvar Digest = /*#__PURE__*/_createClass(function Digest(code, size, digest, bytes) {\n  _classCallCheck(this, Digest);\n  this.code = code;\n  this.size = size;\n  this.digest = digest;\n  this.bytes = bytes;\n});\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;","map":{"version":3,"names":["_createClass","require","_classCallCheck","_slicedToArray","Object","defineProperty","exports","value","bytes","varint","create","code","digest","size","byteLength","sizeOffset","encodingLength","digestOffset","Uint8Array","encodeTo","set","Digest","decode","multihash","bytes$1","coerce","_varint$decode","_varint$decode2","_varint$decode3","subarray","_varint$decode4","Error","equals","a","b"],"sources":["E:/testprojects/CoolSwap-interface/node_modules/multiformats/cjs/src/hashes/digest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}