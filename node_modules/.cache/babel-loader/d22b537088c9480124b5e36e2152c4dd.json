{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _excluded = [\"value\", \"onUserInput\", \"placeholder\"];\nvar _templateObject,\n  _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\components\\\\NumericalInput\\\\index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { escapeRegExp } from '../../utils';\nvar StyledInput = styled.input(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  width: 0;\\n  position: relative;\\n  font-weight: 500;\\n  outline: none;\\n  border: none;\\n  flex: 1 1 auto;\\n  background-color: \", \";\\n  font-size: \", \";\\n  text-align: \", \";\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding: 0px;\\n  -webkit-appearance: textfield;\\n\\n  ::-webkit-search-decoration {\\n    -webkit-appearance: none;\\n  }\\n\\n  [type='number'] {\\n    -moz-appearance: textfield;\\n  }\\n\\n  ::-webkit-outer-spin-button,\\n  ::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n  }\\n\\n  ::placeholder {\\n    color: \", \";\\n  }\\n\"])), function (_ref) {\n  var error = _ref.error,\n    theme = _ref.theme;\n  return error ? theme.red1 : theme.text1;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.bg1;\n}, function (_ref3) {\n  var fontSize = _ref3.fontSize;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : '24px';\n}, function (_ref4) {\n  var align = _ref4.align;\n  return align && align;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.text4;\n});\nvar inputRegex = RegExp(\"^\\\\d*(?:\\\\\\\\[.])?\\\\d*$\"); // match escaped \".\" characters via in a non-capturing group\n\nexport var Input = React.memo(function InnerInput(_ref6) {\n  var value = _ref6.value,\n    onUserInput = _ref6.onUserInput,\n    placeholder = _ref6.placeholder,\n    rest = _objectWithoutProperties(_ref6, _excluded);\n  var enforcer = function enforcer(nextUserInput) {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n  return /*#__PURE__*/React.createElement(StyledInput, Object.assign({}, rest, {\n    value: value,\n    onChange: function onChange(event) {\n      return enforcer(event.target.value.replace(/,/g, '.'));\n    }\n    // universal input options\n    ,\n    inputMode: \"decimal\",\n    title: \"Token Amount\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\"\n    // text-specific options\n    ,\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    placeholder: placeholder || '0.0',\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n});\nexport default Input;","map":{"version":3,"names":["React","styled","escapeRegExp","StyledInput","input","_templateObject","_taggedTemplateLiteral","_ref","error","theme","red1","text1","_ref2","bg1","_ref3","fontSize","_ref4","align","_ref5","text4","inputRegex","RegExp","Input","memo","InnerInput","_ref6","value","onUserInput","placeholder","rest","_objectWithoutProperties","_excluded","enforcer","nextUserInput","test","createElement","Object","assign","onChange","event","target","replace","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/testprojects/CoolSwap-interface/src/components/NumericalInput/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { escapeRegExp } from '../../utils';\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text4};\r\n  }\r\n`;\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number;\r\n  onUserInput: (input: string) => void;\r\n  error?: boolean;\r\n  fontSize?: string;\r\n  align?: 'right' | 'left';\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => enforcer(event.target.value.replace(/,/g, '.'))}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,QAAQ,aAAa;AAE1C,IAAMC,WAAW,GAAGF,MAAM,CAACG,KAAK,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,imBACrB,UAAAC,IAAA;EAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAAA,OAAQD,KAAK,GAAGC,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACE,KAAK;AAAA,CAAC,EAO7C,UAAAC,KAAA;EAAA,IAAGH,KAAK,GAAAG,KAAA,CAALH,KAAK;EAAA,OAAOA,KAAK,CAACI,GAAG;AAAA,GAC/B,UAAAC,KAAA;EAAA,IAAGC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;EAAA,OAAOA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,MAAM;AAAA,GACnC,UAAAC,KAAA;EAAA,IAAGC,KAAK,GAAAD,KAAA,CAALC,KAAK;EAAA,OAAOA,KAAK,IAAIA,KAAK;AAAA,GAqBhC,UAAAC,KAAA;EAAA,IAAGT,KAAK,GAAAS,KAAA,CAALT,KAAK;EAAA,OAAOA,KAAK,CAACU,KAAK;AAAA,EAEtC;AAED,IAAMC,UAAU,GAAGC,MAAM,yBAAyB,CAAC,CAAC,CAAC;;AAErD,OAAO,IAAMC,KAAK,GAAGtB,KAAK,CAACuB,IAAI,CAAC,SAASC,UAAUA,CAAAC,KAAA,EAWqB;EAAA,IAVtEC,KAAK,GAAAD,KAAA,CAALC,KAAK;IACLC,WAAW,GAAAF,KAAA,CAAXE,WAAW;IACXC,WAAW,GAAAH,KAAA,CAAXG,WAAW;IACRC,IAAI,GAAAC,wBAAA,CAAAL,KAAA,EAAAM,SAAA;EAQP,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,aAAqB,EAAK;IAC1C,IAAIA,aAAa,KAAK,EAAE,IAAIb,UAAU,CAACc,IAAI,CAAChC,YAAY,CAAC+B,aAAa,CAAC,CAAC,EAAE;MACxEN,WAAW,CAACM,aAAa,CAAC;IAC5B;EACF,CAAC;EAED,oBACEjC,KAAA,CAAAmC,aAAA,CAAChC,WAAW,EAAAiC,MAAA,CAAAC,MAAA,KACNR,IAAI;IACRH,KAAK,EAAEA,KAAM;IACbY,QAAQ,EAAE,SAAAA,SAACC,KAAK;MAAA,OAAKP,QAAQ,CAACO,KAAK,CAACC,MAAM,CAACd,KAAK,CAACe,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAAA;IACpE;IAAA;IACAC,SAAS,EAAC,SAAS;IACnBC,KAAK,EAAC,cAAc;IACpBC,YAAY,EAAC,KAAK;IAClBC,WAAW,EAAC;IACZ;IAAA;IACAC,IAAI,EAAC,MAAM;IACXC,OAAO,EAAC,qBAAqB;IAC7BnB,WAAW,EAAEA,WAAW,IAAI,KAAM;IAClCoB,SAAS,EAAE,CAAE;IACbC,SAAS,EAAE,EAAG;IACdC,UAAU,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACnB,CAAC;AAEN,CAAC,CAAC;AAEF,eAAelC,KAAK"},"metadata":{},"sourceType":"module"}