{"ast":null,"code":"import _createForOfIteratorHelper from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\n\n// taken from ethers.js, compatible interface with web3 provider\nvar RequestError = /*#__PURE__*/function (_Error) {\n  _inherits(RequestError, _Error);\n  var _super = _createSuper(RequestError);\n  function RequestError(message, code, data) {\n    var _this;\n    _classCallCheck(this, RequestError);\n    _this = _super.call(this, message);\n    _this.code = code;\n    _this.data = data;\n    return _this;\n  }\n  return _createClass(RequestError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar MiniRpcProvider = /*#__PURE__*/_createClass(function MiniRpcProvider(chainId, url, batchWaitTimeMs) {\n  var _this2 = this;\n  _classCallCheck(this, MiniRpcProvider);\n  this.isMetaMask = false;\n  this.chainId = void 0;\n  this.url = void 0;\n  this.host = void 0;\n  this.path = void 0;\n  this.batchWaitTimeMs = void 0;\n  this.nextId = 1;\n  this.batchTimeoutId = null;\n  this.batch = [];\n  this.clearBatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var batch, response, json, byKey, _iterator, _step, _result, _byKey$_result$id, resolve, reject, method, _result$error, _result$error2, _result$error3;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Clearing batch', _this2.batch);\n          batch = _this2.batch;\n          _this2.batch = [];\n          _this2.batchTimeoutId = null;\n          _context.prev = 4;\n          _context.next = 7;\n          return fetch(_this2.url, {\n            method: 'POST',\n            headers: {\n              'content-type': 'application/json',\n              accept: 'application/json'\n            },\n            body: JSON.stringify(batch.map(function (item) {\n              return item.request;\n            }))\n          });\n        case 7:\n          response = _context.sent;\n          _context.next = 14;\n          break;\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](4);\n          batch.forEach(function (_ref2) {\n            var reject = _ref2.reject;\n            return reject(new Error('Failed to send batch call'));\n          });\n          return _context.abrupt(\"return\");\n        case 14:\n          if (response.ok) {\n            _context.next = 17;\n            break;\n          }\n          batch.forEach(function (_ref3) {\n            var reject = _ref3.reject;\n            return reject(new RequestError(\"\".concat(response.status, \": \").concat(response.statusText), -32000));\n          });\n          return _context.abrupt(\"return\");\n        case 17:\n          _context.prev = 17;\n          _context.next = 20;\n          return response.json();\n        case 20:\n          json = _context.sent;\n          _context.next = 27;\n          break;\n        case 23:\n          _context.prev = 23;\n          _context.t1 = _context[\"catch\"](17);\n          batch.forEach(function (_ref4) {\n            var reject = _ref4.reject;\n            return reject(new Error('Failed to parse JSON response'));\n          });\n          return _context.abrupt(\"return\");\n        case 27:\n          byKey = batch.reduce(function (memo, current) {\n            memo[current.request.id] = current;\n            return memo;\n          }, {});\n          _iterator = _createForOfIteratorHelper(json);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              _result = _step.value;\n              _byKey$_result$id = byKey[_result.id], resolve = _byKey$_result$id.resolve, reject = _byKey$_result$id.reject, method = _byKey$_result$id.request.method;\n              if (resolve && reject) {\n                if ('error' in _result) {\n                  reject(new RequestError(_result === null || _result === void 0 ? void 0 : (_result$error = _result.error) === null || _result$error === void 0 ? void 0 : _result$error.message, _result === null || _result === void 0 ? void 0 : (_result$error2 = _result.error) === null || _result$error2 === void 0 ? void 0 : _result$error2.code, _result === null || _result === void 0 ? void 0 : (_result$error3 = _result.error) === null || _result$error3 === void 0 ? void 0 : _result$error3.data));\n                } else if ('result' in _result) {\n                  resolve(_result.result);\n                } else {\n                  reject(new RequestError(\"Received unexpected JSON-RPC response to \".concat(method, \" request.\"), -32000, _result));\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[4, 10], [17, 23]]);\n  }));\n  this.sendAsync = function (request, callback) {\n    _this2.request(request.method, request.params).then(function (result) {\n      return callback(null, {\n        jsonrpc: '2.0',\n        id: request.id,\n        result: result\n      });\n    }).catch(function (error) {\n      return callback(error, null);\n    });\n  };\n  this.request = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(method, params) {\n      var _this2$batchTimeoutId;\n      var promise;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof method !== 'string')) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\", _this2.request(method.method, method.params));\n          case 2:\n            if (!(method === 'eth_chainId')) {\n              _context2.next = 4;\n              break;\n            }\n            return _context2.abrupt(\"return\", \"0x\".concat(_this2.chainId.toString(16)));\n          case 4:\n            promise = new Promise(function (resolve, reject) {\n              _this2.batch.push({\n                request: {\n                  jsonrpc: '2.0',\n                  id: _this2.nextId++,\n                  method: method,\n                  params: params\n                },\n                resolve: resolve,\n                reject: reject\n              });\n            });\n            _this2.batchTimeoutId = (_this2$batchTimeoutId = _this2.batchTimeoutId) !== null && _this2$batchTimeoutId !== void 0 ? _this2$batchTimeoutId : setTimeout(_this2.clearBatch, _this2.batchWaitTimeMs);\n            return _context2.abrupt(\"return\", promise);\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  this.chainId = chainId;\n  this.url = url;\n  var parsed = new URL(url);\n  this.host = parsed.host;\n  this.path = parsed.pathname;\n  // how long to wait to batch calls\n  this.batchWaitTimeMs = batchWaitTimeMs !== null && batchWaitTimeMs !== void 0 ? batchWaitTimeMs : 50;\n});\nexport var NetworkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inherits(NetworkConnector, _AbstractConnector);\n  var _super2 = _createSuper(NetworkConnector);\n  function NetworkConnector(_ref6) {\n    var _this3;\n    var urls = _ref6.urls,\n      defaultChainId = _ref6.defaultChainId;\n    _classCallCheck(this, NetworkConnector);\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url');\n    _this3 = _super2.call(this, {\n      supportedChainIds: Object.keys(urls).map(function (k) {\n        return Number(k);\n      })\n    });\n    _this3.providers = void 0;\n    _this3.currentChainId = void 0;\n    _this3.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\n    _this3.providers = Object.keys(urls).reduce(function (accumulator, chainId) {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n    return _this3;\n  }\n  _createClass(NetworkConnector, [{\n    key: \"provider\",\n    get: function get() {\n      return this.providers[this.currentChainId];\n    }\n  }, {\n    key: \"activate\",\n    value: function () {\n      var _activate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", {\n                provider: this.providers[this.currentChainId],\n                chainId: this.currentChainId,\n                account: null\n              });\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function activate() {\n        return _activate.apply(this, arguments);\n      }\n      return activate;\n    }()\n  }, {\n    key: \"getProvider\",\n    value: function () {\n      var _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.providers[this.currentChainId]);\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getProvider() {\n        return _getProvider.apply(this, arguments);\n      }\n      return getProvider;\n    }()\n  }, {\n    key: \"getChainId\",\n    value: function () {\n      var _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.currentChainId);\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getChainId() {\n        return _getChainId.apply(this, arguments);\n      }\n      return getChainId;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", null);\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }()\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      return;\n    }\n  }]);\n  return NetworkConnector;\n}(AbstractConnector);","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","AbstractConnector","invariant","RequestError","_Error","_inherits","_super","_createSuper","message","code","data","_this","_classCallCheck","_createClass","_wrapNativeSuper","MiniRpcProvider","chainId","url","batchWaitTimeMs","_this2","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","_asyncToGenerator","_callee","response","json","byKey","_iterator","_step","_result","_byKey$_result$id","reject","_result$error","_result$error2","_result$error3","_callee$","_context","console","debug","fetch","headers","accept","body","JSON","stringify","map","item","request","t0","_ref2","ok","_ref3","concat","status","statusText","t1","_ref4","reduce","memo","current","id","_createForOfIteratorHelper","result","error","err","sendAsync","callback","params","jsonrpc","_ref5","_callee2","_this2$batchTimeoutId","promise","_callee2$","_context2","toString","setTimeout","_x","_x2","apply","arguments","parsed","URL","pathname","NetworkConnector","_AbstractConnector","_super2","_ref6","_this3","urls","defaultChainId","supportedChainIds","k","Number","providers","currentChainId","accumulator","key","get","_activate","_callee3","_callee3$","_context3","provider","account","activate","_getProvider","_callee4","_callee4$","_context4","getProvider","_getChainId","_callee5","_callee5$","_context5","getChainId","_getAccount","_callee6","_callee6$","_context6","getAccount","deactivate"],"sources":["E:/testprojects/CoolSwap-interface/src/connectors/NetworkConnector.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport invariant from 'tiny-invariant';\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string };\r\n  defaultChainId?: number;\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean;\r\n  host?: string;\r\n  path?: string;\r\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void;\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void;\r\n};\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message);\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown };\r\n  resolve: (result: any) => void;\r\n  reject: (error: Error) => void;\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false;\r\n  public readonly chainId: number;\r\n  public readonly url: string;\r\n  public readonly host: string;\r\n  public readonly path: string;\r\n  public readonly batchWaitTimeMs: number;\r\n\r\n  private nextId = 1;\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null;\r\n  private batch: BatchItem[] = [];\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId;\r\n    this.url = url;\r\n    const parsed = new URL(url);\r\n    this.host = parsed.host;\r\n    this.path = parsed.pathname;\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50;\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.debug('Clearing batch', this.batch);\r\n    const batch = this.batch;\r\n    this.batch = [];\r\n    this.batchTimeoutId = null;\r\n    let response: Response;\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: 'POST',\r\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      });\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')));\r\n      return;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)));\r\n      return;\r\n    }\r\n\r\n    let json;\r\n    try {\r\n      json = await response.json();\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')));\r\n      return;\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current;\r\n      return memo;\r\n    }, {});\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id];\r\n      if (resolve && reject) {\r\n        if ('error' in result) {\r\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data));\r\n        } else if ('result' in result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public readonly sendAsync = (\r\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: unknown[] | object },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\r\n      .catch((error) => callback(error, null));\r\n  };\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: unknown[] | object\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== 'string') {\r\n      return this.request(method.method, method.params);\r\n    }\r\n    if (method === 'eth_chainId') {\r\n      return `0x${this.chainId.toString(16)}`;\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: '2.0',\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      });\r\n    });\r\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs);\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider };\r\n  private currentChainId: number;\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url');\r\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) });\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\r\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\r\n      return accumulator;\r\n    }, {});\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null };\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null;\r\n  }\r\n\r\n  public deactivate() {\r\n    return;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}