{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _initialState;\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\nvar initialState = (_initialState = {\n  independentField: Field.INPUT,\n  typedValue: ''\n}, _defineProperty(_initialState, Field.INPUT, {\n  currencyId: ''\n}), _defineProperty(_initialState, Field.OUTPUT, {\n  currencyId: ''\n}), _defineProperty(_initialState, \"recipient\", null), _initialState);\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(replaceSwapState, function (state, _ref) {\n    var _ref2;\n    var _ref$payload = _ref.payload,\n      typedValue = _ref$payload.typedValue,\n      recipient = _ref$payload.recipient,\n      field = _ref$payload.field,\n      inputCurrencyId = _ref$payload.inputCurrencyId,\n      outputCurrencyId = _ref$payload.outputCurrencyId;\n    return _ref2 = {}, _defineProperty(_ref2, Field.INPUT, {\n      currencyId: inputCurrencyId\n    }), _defineProperty(_ref2, Field.OUTPUT, {\n      currencyId: outputCurrencyId\n    }), _defineProperty(_ref2, \"independentField\", field), _defineProperty(_ref2, \"typedValue\", typedValue), _defineProperty(_ref2, \"recipient\", recipient), _ref2;\n  }).addCase(selectCurrency, function (state, _ref3) {\n    var _ref3$payload = _ref3.payload,\n      currencyId = _ref3$payload.currencyId,\n      field = _ref3$payload.field;\n    var otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n    if (currencyId === state[otherField].currencyId) {\n      var _objectSpread2;\n      // the case where we have to swap the order\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      }, _defineProperty(_objectSpread2, field, {\n        currencyId: currencyId\n      }), _defineProperty(_objectSpread2, otherField, {\n        currencyId: state[field].currencyId\n      }), _objectSpread2));\n    } else {\n      // the normal case\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, field, {\n        currencyId: currencyId\n      }));\n    }\n  }).addCase(switchCurrencies, function (state) {\n    var _objectSpread4;\n    return _objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {\n      independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n    }, _defineProperty(_objectSpread4, Field.INPUT, {\n      currencyId: state[Field.OUTPUT].currencyId\n    }), _defineProperty(_objectSpread4, Field.OUTPUT, {\n      currencyId: state[Field.INPUT].currencyId\n    }), _objectSpread4));\n  }).addCase(typeInput, function (state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n      field = _ref4$payload.field,\n      typedValue = _ref4$payload.typedValue;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      independentField: field,\n      typedValue: typedValue\n    });\n  }).addCase(setRecipient, function (state, _ref5) {\n    var recipient = _ref5.payload.recipient;\n    state.recipient = recipient;\n  });\n});","map":{"version":3,"names":["createReducer","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","initialState","_initialState","independentField","INPUT","typedValue","_defineProperty","currencyId","OUTPUT","builder","addCase","state","_ref","_ref2","_ref$payload","payload","recipient","field","inputCurrencyId","outputCurrencyId","_ref3","_ref3$payload","otherField","_objectSpread2","_objectSpread","_objectSpread4","_ref4","_ref4$payload","_ref5"],"sources":["E:/testprojects/CoolSwap-interface/src/state/swap/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field;\r\n  readonly typedValue: string;\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined;\r\n  };\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined;\r\n  };\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null;\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n};\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue: typedValue,\r\n          recipient,\r\n        };\r\n      }\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT;\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId: currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        };\r\n      } else {\r\n        // the normal case\r\n        return {\r\n          ...state,\r\n          [field]: { currencyId: currencyId },\r\n        };\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      };\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      };\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient;\r\n    })\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}