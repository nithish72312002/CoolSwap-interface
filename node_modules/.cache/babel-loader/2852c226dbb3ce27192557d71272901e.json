{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n        }));\n      };\n    }\n  }\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var params = {\n      subject: undefined,\n      args: args,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler,\n      context: this\n    };\n    return new Observable(function (subscriber) {\n      var context = params.context;\n      var subject = params.subject;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject();\n          var handler = function handler() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n              subject.error(err);\n              return;\n            }\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n          try {\n            callbackFunc.apply(context, args.concat([handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule(dispatch, 0, {\n          params: params,\n          subscriber: subscriber,\n          context: context\n        });\n      }\n    });\n  };\n}\nfunction dispatch(state) {\n  var _this = this;\n  var params = state.params,\n    subscriber = state.subscriber,\n    context = state.context;\n  var callbackFunc = params.callbackFunc,\n    args = params.args,\n    scheduler = params.scheduler;\n  var subject = params.subject;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n    var handler = function handler() {\n      var innerArgs = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        innerArgs[_i] = arguments[_i];\n      }\n      var err = innerArgs.shift();\n      if (err) {\n        _this.add(scheduler.schedule(dispatchError, 0, {\n          err: err,\n          subject: subject\n        }));\n      } else {\n        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        _this.add(scheduler.schedule(dispatchNext, 0, {\n          value: value,\n          subject: subject\n        }));\n      }\n    };\n    try {\n      callbackFunc.apply(context, args.concat([handler]));\n    } catch (err) {\n      this.add(scheduler.schedule(dispatchError, 0, {\n        err: err,\n        subject: subject\n      }));\n    }\n  }\n  this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n  var value = arg.value,\n    subject = arg.subject;\n  subject.next(value);\n  subject.complete();\n}\nfunction dispatchError(arg) {\n  var err = arg.err,\n    subject = arg.subject;\n  subject.error(err);\n}","map":{"version":3,"names":["Observable","AsyncSubject","map","canReportError","isScheduler","isArray","bindNodeCallback","callbackFunc","resultSelector","scheduler","_i","arguments","length","apply","args","pipe","params","subject","undefined","context","subscriber","handler","err","innerArgs","shift","error","next","complete","concat","console","warn","subscribe","schedule","dispatch","state","_this","add","dispatchError","value","dispatchNext","arg"],"sources":["../../../src/internal/observable/bindNodeCallback.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}