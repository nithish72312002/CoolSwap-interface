{"ast":null,"code":"import { CurrencyAmount, ETHER, JSBI } from '@uniswap/sdk';\nimport { MIN_ETH } from '../constants';\n\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\nexport function maxAmountSpend(currencyAmount) {\n  if (!currencyAmount) return undefined;\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH));\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0));\n    }\n  }\n  return currencyAmount;\n}","map":{"version":3,"names":["CurrencyAmount","ETHER","JSBI","MIN_ETH","maxAmountSpend","currencyAmount","undefined","currency","greaterThan","raw","ether","subtract","BigInt"],"sources":["E:/testprojects/CoolSwap-interface/src/utils/maxAmountSpend.ts"],"sourcesContent":["import { CurrencyAmount, ETHER, JSBI } from '@uniswap/sdk';\r\nimport { MIN_ETH } from '../constants';\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined;\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH));\r\n    } else {\r\n      return CurrencyAmount.ether(JSBI.BigInt(0));\r\n    }\r\n  }\r\n  return currencyAmount;\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,KAAK,EAAEC,IAAI,QAAQ,cAAc;AAC1D,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,cAA+B,EAA8B;EAC1F,IAAI,CAACA,cAAc,EAAE,OAAOC,SAAS;EACrC,IAAID,cAAc,CAACE,QAAQ,KAAKN,KAAK,EAAE;IACrC,IAAIC,IAAI,CAACM,WAAW,CAACH,cAAc,CAACI,GAAG,EAAEN,OAAO,CAAC,EAAE;MACjD,OAAOH,cAAc,CAACU,KAAK,CAACR,IAAI,CAACS,QAAQ,CAACN,cAAc,CAACI,GAAG,EAAEN,OAAO,CAAC,CAAC;IACzE,CAAC,MAAM;MACL,OAAOH,cAAc,CAACU,KAAK,CAACR,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C;EACF;EACA,OAAOP,cAAc;AACvB"},"metadata":{},"sourceType":"module"}