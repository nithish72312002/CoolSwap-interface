{"ast":null,"code":"var _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _asyncToGenerator = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar cacheUtils = require('./cache-utils.js');\nvar createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware');\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nvar emptyValues = [undefined, null, \"<nil>\"];\nmodule.exports = createBlockCacheMiddleware;\nfunction createBlockCacheMiddleware() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // validate options\n  var blockTracker = opts.blockTracker;\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified');\n\n  // create caching strategies\n  var blockCache = new BlockCacheStrategy();\n  var strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache\n  };\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res, next) {\n      var type, strategy, blockTag, requestedBlockNumber, latestBlockNumber, cacheResult;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!req.skipCache) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 2:\n            // check type and matching strategy\n            type = cacheUtils.cacheTypeForPayload(req);\n            strategy = strategies[type]; // If there's no strategy in place, pass it down the chain.\n            if (strategy) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 6:\n            if (strategy.canCacheRequest(req)) {\n              _context.next = 8;\n              break;\n            }\n            return _context.abrupt(\"return\", next());\n          case 8:\n            // get block reference (number or keyword)\n            blockTag = cacheUtils.blockTagForPayload(req);\n            if (!blockTag) blockTag = 'latest';\n\n            // get exact block number\n            if (!(blockTag === 'earliest')) {\n              _context.next = 14;\n              break;\n            }\n            // this just exists for symmetry with \"latest\"\n            requestedBlockNumber = '0x00';\n            _context.next = 23;\n            break;\n          case 14:\n            if (!(blockTag === 'latest')) {\n              _context.next = 22;\n              break;\n            }\n            _context.next = 17;\n            return blockTracker.getLatestBlock();\n          case 17:\n            latestBlockNumber = _context.sent;\n            // clear all cache before latest block\n            blockCache.clearBefore(latestBlockNumber);\n            requestedBlockNumber = latestBlockNumber;\n            _context.next = 23;\n            break;\n          case 22:\n            // We have a hex number\n            requestedBlockNumber = blockTag;\n          case 23:\n            _context.next = 25;\n            return strategy.get(req, requestedBlockNumber);\n          case 25:\n            cacheResult = _context.sent;\n            if (!(cacheResult === undefined)) {\n              _context.next = 33;\n              break;\n            }\n            _context.next = 29;\n            return next();\n          case 29:\n            _context.next = 31;\n            return strategy.set(req, requestedBlockNumber, res.result);\n          case 31:\n            _context.next = 34;\n            break;\n          case 33:\n            // fill in result from cache\n            res.result = cacheResult;\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\n//\n// Cache Strategies\n//\nvar BlockCacheStrategy = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function BlockCacheStrategy() {\n    _classCallCheck(this, BlockCacheStrategy);\n    this.cache = {};\n  }\n  _createClass(BlockCacheStrategy, [{\n    key: \"getBlockCacheForPayload\",\n    value: function getBlockCacheForPayload(payload, blockNumberHex) {\n      var blockNumber = Number.parseInt(blockNumberHex, 16);\n      var blockCache = this.cache[blockNumber];\n      // create new cache if necesary\n      if (!blockCache) {\n        var newCache = {};\n        this.cache[blockNumber] = newCache;\n        blockCache = newCache;\n      }\n      return blockCache;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, requestedBlockNumber) {\n        var blockCache, identifier, cached;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // lookup block cache\n              blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n              if (blockCache) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 3:\n              // lookup payload in block cache\n              identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n              cached = blockCache[identifier]; // may be undefined\n              return _context2.abrupt(\"return\", cached);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function get(_x4, _x5) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(payload, requestedBlockNumber, result) {\n        var canCache, blockCache, identifier;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              // check if we can cached this result\n              canCache = this.canCacheResult(payload, result);\n              if (canCache) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              // set the value in the cache\n              blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n              identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n              blockCache[identifier] = result;\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function set(_x6, _x7, _x8) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n  }, {\n    key: \"canCacheRequest\",\n    value: function canCacheRequest(payload) {\n      // check request method\n      if (!cacheUtils.canCache(payload)) {\n        return false;\n      }\n      // check blockTag\n      var blockTag = cacheUtils.blockTagForPayload(payload);\n      if (blockTag === 'pending') {\n        return false;\n      }\n      // can be cached\n      return true;\n    }\n  }, {\n    key: \"canCacheResult\",\n    value: function canCacheResult(payload, result) {\n      // never cache empty values (e.g. undefined)\n      if (emptyValues.includes(result)) return;\n      // check if transactions have block reference before caching\n      if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n        if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n          return false;\n        }\n      }\n      // otherwise true\n      return true;\n    }\n\n    // removes all block caches with block number lower than `oldBlockHex`\n  }, {\n    key: \"clearBefore\",\n    value: function clearBefore(oldBlockHex) {\n      var self = this;\n      var oldBlockNumber = Number.parseInt(oldBlockHex, 16);\n      // clear old caches\n      Object.keys(self.cache).map(Number).filter(function (num) {\n        return num < oldBlockNumber;\n      }).forEach(function (num) {\n        return delete self.cache[num];\n      });\n    }\n  }]);\n  return BlockCacheStrategy;\n}();","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","cacheUtils","require","createAsyncMiddleware","emptyValues","undefined","module","exports","createBlockCacheMiddleware","opts","arguments","blockTracker","blockCache","BlockCacheStrategy","strategies","perma","block","fork","_ref","_asyncToGenerator","_callee","req","res","strategy","blockTag","requestedBlockNumber","latestBlockNumber","cacheResult","_callee$","_context","skipCache","cacheTypeForPayload","canCacheRequest","blockTagForPayload","getLatestBlock","clearBefore","get","set","result","_x","_x2","_x3","apply","_classCallCheck","cache","_createClass","key","getBlockCacheForPayload","payload","blockNumberHex","blockNumber","Number","parseInt","newCache","_get","_callee2","identifier","cached","_callee2$","_context2","cacheIdentifierForPayload","_x4","_x5","_set","_callee3","canCache","_callee3$","_context3","canCacheResult","_x6","_x7","_x8","includes","blockHash","oldBlockHex","self","oldBlockNumber","map","filter","num"],"sources":["E:/testprojects/CoolSwap-interface/node_modules/web3-provider-engine/node_modules/eth-json-rpc-middleware/block-cache.js"],"sourcesContent":["const cacheUtils = require('./cache-utils.js')\nconst createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware')\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n"],"mappings":";;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,uBAAAA,CAAA,IAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAiD,OAAA,CAAAlB,CAAA,CAAAmB,OAAA,EAAAC,IAAA,WAAAlD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAiD,OAAA,CAAAlB,CAAA,EAAAoB,IAAA,WAAAlD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAA+C,2BAAA,eAAApD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAiD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA1B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAoB,KAAA,sCAAA9C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAqD,IAAA,eAAAjD,CAAA,CAAAkD,MAAA,GAAA7C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAmD,QAAA,MAAA1C,CAAA,QAAAE,CAAA,GAAAyC,mBAAA,CAAA3C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAkD,MAAA,EAAAlD,CAAA,CAAAqD,IAAA,GAAArD,CAAA,CAAAsD,KAAA,GAAAtD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAkD,MAAA,QAAAhD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAuD,iBAAA,CAAAvD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAkD,MAAA,IAAAlD,CAAA,CAAAwD,MAAA,WAAAxD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAiD,IAAA,GAAApB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAAyB,IAAA,EAAAjD,CAAA,CAAAiD,IAAA,kBAAAhB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAkD,MAAA,YAAAlD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA4B,oBAAAzD,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAqD,MAAA,EAAAhD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAsD,QAAA,qBAAAnD,CAAA,IAAAL,CAAA,CAAAa,QAAA,CAAAiD,MAAA,KAAA5D,CAAA,CAAAqD,MAAA,aAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAwD,mBAAA,CAAAzD,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAqD,MAAA,kBAAAlD,CAAA,KAAAH,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAsD,QAAA,SAAArB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA0C,IAAA,IAAApD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAqD,MAAA,KAAArD,CAAA,CAAAqD,MAAA,WAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAsD,QAAA,SAAArB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAqD,MAAA,YAAArD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAsD,QAAA,SAAArB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAX,IAAA,OAAAW,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAX,IAAA,OAAAW,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,QAAA/D,CAAA,iCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAiD,OAAA,EAAAjD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAd,IAAA,WAAAlD,CAAA,WAAAA,CAAA,CAAAqD,IAAA,GAAArD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAX,IAAA,OAAAW,IAAA,WAAAA,IAAA,CAAAX,IAAA,OAAAW,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAP,IAAA,QAAAC,KAAA,GAAA1D,CAAA,OAAAqD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA1B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAzC,IAAA,WAAArD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAApC,iBAAA,WAAAA,kBAAA5D,CAAA,aAAAsD,IAAA,QAAAtD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAqD,MAAA,WAAArD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAqC,KAAA,qDAAAuC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAT,MAAA,WAAAA,OAAA5D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA6C,MAAA,gBAAAU,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA0B,MAAA,kBAAAU,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,OAAAiE,KAAA,WAAAC,OAAApG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA8C,KAAA,8BAAAiD,aAAA,WAAAA,cAAAtG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAmD,QAAA,KAAA3C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAkD,MAAA,UAAA1B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AADA,IAAMuG,UAAU,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC9C,IAAMC,qBAAqB,GAAGD,OAAO,CAAC,2CAA2C,CAAC;AAClF;AACA,IAAME,WAAW,GAAG,CAACC,SAAS,EAAE,IAAI,EAAE,OAAiB,CAAC;AAExDC,MAAM,CAACC,OAAO,GAAGC,0BAA0B;AAG3C,SAASA,0BAA0BA,CAAA,EAAY;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAlC,MAAA,QAAAkC,SAAA,QAAAL,SAAA,GAAAK,SAAA,MAAG,CAAC,CAAC;EAC3C;EACA,IAAQC,YAAY,GAAKF,IAAI,CAArBE,YAAY;EACpB,IAAI,CAACA,YAAY,EAAE,MAAM,IAAI5D,KAAK,CAAC,wDAAwD,CAAC;;EAE5F;EACA,IAAM6D,UAAU,GAAG,IAAIC,kBAAkB,CAAC,CAAC;EAC3C,IAAMC,UAAU,GAAG;IACjBC,KAAK,EAAEH,UAAU;IACjBI,KAAK,EAAEJ,UAAU;IACjBK,IAAI,EAAEL;EACR,CAAC;EAED,OAAOT,qBAAqB;IAAA,IAAAe,IAAA,GAAAC,iBAAA,eAAA1H,mBAAA,GAAAoF,IAAA,CAAC,SAAAuC,QAAOC,GAAG,EAAEC,GAAG,EAAE3D,IAAI;MAAA,IAAArC,IAAA,EAAAiG,QAAA,EAAAC,QAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,WAAA;MAAA,OAAAlI,mBAAA,GAAAuB,IAAA,UAAA4G,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAvC,IAAA,GAAAuC,QAAA,CAAAlE,IAAA;UAAA;YAAA,KAE5C0D,GAAG,CAACS,SAAS;cAAAD,QAAA,CAAAlE,IAAA;cAAA;YAAA;YAAA,OAAAkE,QAAA,CAAAtE,MAAA,WACRI,IAAI,CAAC,CAAC;UAAA;YAEf;YACMrC,IAAI,GAAG2E,UAAU,CAAC8B,mBAAmB,CAACV,GAAG,CAAC;YAC1CE,QAAQ,GAAGT,UAAU,CAACxF,IAAI,CAAC,EACjC;YAAA,IACKiG,QAAQ;cAAAM,QAAA,CAAAlE,IAAA;cAAA;YAAA;YAAA,OAAAkE,QAAA,CAAAtE,MAAA,WACJI,IAAI,CAAC,CAAC;UAAA;YAAA,IAGV4D,QAAQ,CAACS,eAAe,CAACX,GAAG,CAAC;cAAAQ,QAAA,CAAAlE,IAAA;cAAA;YAAA;YAAA,OAAAkE,QAAA,CAAAtE,MAAA,WACzBI,IAAI,CAAC,CAAC;UAAA;YAGf;YACI6D,QAAQ,GAAGvB,UAAU,CAACgC,kBAAkB,CAACZ,GAAG,CAAC;YACjD,IAAI,CAACG,QAAQ,EAAEA,QAAQ,GAAG,QAAQ;;YAElC;YAAA,MAEIA,QAAQ,KAAK,UAAU;cAAAK,QAAA,CAAAlE,IAAA;cAAA;YAAA;YACzB;YACA8D,oBAAoB,GAAG,MAAM;YAAAI,QAAA,CAAAlE,IAAA;YAAA;UAAA;YAAA,MACpB6D,QAAQ,KAAK,QAAQ;cAAAK,QAAA,CAAAlE,IAAA;cAAA;YAAA;YAAAkE,QAAA,CAAAlE,IAAA;YAAA,OAEEgD,YAAY,CAACuB,cAAc,CAAC,CAAC;UAAA;YAAvDR,iBAAiB,GAAAG,QAAA,CAAAzE,IAAA;YACvB;YACAwD,UAAU,CAACuB,WAAW,CAACT,iBAAiB,CAAC;YACzCD,oBAAoB,GAAGC,iBAAiB;YAAAG,QAAA,CAAAlE,IAAA;YAAA;UAAA;YAExC;YACA8D,oBAAoB,GAAGD,QAAQ;UAAA;YAAAK,QAAA,CAAAlE,IAAA;YAAA,OAIP4D,QAAQ,CAACa,GAAG,CAACf,GAAG,EAAEI,oBAAoB,CAAC;UAAA;YAA3DE,WAAW,GAAAE,QAAA,CAAAzE,IAAA;YAAA,MACbuE,WAAW,KAAKtB,SAAS;cAAAwB,QAAA,CAAAlE,IAAA;cAAA;YAAA;YAAAkE,QAAA,CAAAlE,IAAA;YAAA,OAGrBA,IAAI,CAAC,CAAC;UAAA;YAAAkE,QAAA,CAAAlE,IAAA;YAAA,OAEN4D,QAAQ,CAACc,GAAG,CAAChB,GAAG,EAAEI,oBAAoB,EAAEH,GAAG,CAACgB,MAAM,CAAC;UAAA;YAAAT,QAAA,CAAAlE,IAAA;YAAA;UAAA;YAEzD;YACA2D,GAAG,CAACgB,MAAM,GAAGX,WAAW;UAAA;UAAA;YAAA,OAAAE,QAAA,CAAApC,IAAA;QAAA;MAAA,GAAA2B,OAAA;IAAA,CAE3B;IAAA,iBAAAmB,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAvB,IAAA,CAAAwB,KAAA,OAAAhC,SAAA;IAAA;EAAA,IAAC;AACJ;;AAGA;AACA;AACA;AAAA,IAEMG,kBAAkB;EAAA;;EAEtB,SAAAA,mBAAA,EAAe;IAAA8B,eAAA,OAAA9B,kBAAA;IACb,IAAI,CAAC+B,KAAK,GAAG,CAAC,CAAC;EACjB;EAACC,YAAA,CAAAhC,kBAAA;IAAAiC,GAAA;IAAA3I,KAAA,EAED,SAAA4I,wBAAyBC,OAAO,EAAEC,cAAc,EAAE;MAChD,IAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACH,cAAc,EAAE,EAAE,CAAC;MACvD,IAAIrC,UAAU,GAAG,IAAI,CAACgC,KAAK,CAACM,WAAW,CAAC;MACxC;MACA,IAAI,CAACtC,UAAU,EAAE;QACf,IAAMyC,QAAQ,GAAG,CAAC,CAAC;QACnB,IAAI,CAACT,KAAK,CAACM,WAAW,CAAC,GAAGG,QAAQ;QAClCzC,UAAU,GAAGyC,QAAQ;MACvB;MACA,OAAOzC,UAAU;IACnB;EAAC;IAAAkC,GAAA;IAAA3I,KAAA;MAAA,IAAAmJ,IAAA,GAAAnC,iBAAA,eAAA1H,mBAAA,GAAAoF,IAAA,CAED,SAAA0E,SAAWP,OAAO,EAAEvB,oBAAoB;QAAA,IAAAb,UAAA,EAAA4C,UAAA,EAAAC,MAAA;QAAA,OAAAhK,mBAAA,GAAAuB,IAAA,UAAA0I,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArE,IAAA,GAAAqE,SAAA,CAAAhG,IAAA;YAAA;cACtC;cACMiD,UAAU,GAAG,IAAI,CAACmC,uBAAuB,CAACC,OAAO,EAAEvB,oBAAoB,CAAC;cAAA,IACzEb,UAAU;gBAAA+C,SAAA,CAAAhG,IAAA;gBAAA;cAAA;cAAA,OAAAgG,SAAA,CAAApG,MAAA;YAAA;cACf;cACMiG,UAAU,GAAGvD,UAAU,CAAC2D,yBAAyB,CAACZ,OAAO,EAAE,IAAI,CAAC;cAChES,MAAM,GAAG7C,UAAU,CAAC4C,UAAU,CAAC,EACrC;cAAA,OAAAG,SAAA,CAAApG,MAAA,WACOkG,MAAM;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAlE,IAAA;UAAA;QAAA,GAAA8D,QAAA;MAAA,CACd;MAAA,SAAAnB,IAAAyB,GAAA,EAAAC,GAAA;QAAA,OAAAR,IAAA,CAAAZ,KAAA,OAAAhC,SAAA;MAAA;MAAA,OAAA0B,GAAA;IAAA;EAAA;IAAAU,GAAA;IAAA3I,KAAA;MAAA,IAAA4J,IAAA,GAAA5C,iBAAA,eAAA1H,mBAAA,GAAAoF,IAAA,CAED,SAAAmF,SAAWhB,OAAO,EAAEvB,oBAAoB,EAAEa,MAAM;QAAA,IAAA2B,QAAA,EAAArD,UAAA,EAAA4C,UAAA;QAAA,OAAA/J,mBAAA,GAAAuB,IAAA,UAAAkJ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7E,IAAA,GAAA6E,SAAA,CAAAxG,IAAA;YAAA;cAC9C;cACMsG,QAAQ,GAAG,IAAI,CAACG,cAAc,CAACpB,OAAO,EAAEV,MAAM,CAAC;cAAA,IAChD2B,QAAQ;gBAAAE,SAAA,CAAAxG,IAAA;gBAAA;cAAA;cAAA,OAAAwG,SAAA,CAAA5G,MAAA;YAAA;cACb;cACMqD,UAAU,GAAG,IAAI,CAACmC,uBAAuB,CAACC,OAAO,EAAEvB,oBAAoB,CAAC;cACxE+B,UAAU,GAAGvD,UAAU,CAAC2D,yBAAyB,CAACZ,OAAO,EAAE,IAAI,CAAC;cACtEpC,UAAU,CAAC4C,UAAU,CAAC,GAAGlB,MAAM;YAAA;YAAA;cAAA,OAAA6B,SAAA,CAAA1E,IAAA;UAAA;QAAA,GAAAuE,QAAA;MAAA,CAChC;MAAA,SAAA3B,IAAAgC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAR,IAAA,CAAArB,KAAA,OAAAhC,SAAA;MAAA;MAAA,OAAA2B,GAAA;IAAA;EAAA;IAAAS,GAAA;IAAA3I,KAAA,EAED,SAAA6H,gBAAiBgB,OAAO,EAAE;MACxB;MACA,IAAI,CAAC/C,UAAU,CAACgE,QAAQ,CAACjB,OAAO,CAAC,EAAE;QACjC,OAAO,KAAK;MACd;MACA;MACA,IAAMxB,QAAQ,GAAGvB,UAAU,CAACgC,kBAAkB,CAACe,OAAO,CAAC;MACvD,IAAIxB,QAAQ,KAAK,SAAS,EAAE;QAC1B,OAAO,KAAK;MACd;MACA;MACA,OAAO,IAAI;IACb;EAAC;IAAAsB,GAAA;IAAA3I,KAAA,EAED,SAAAiK,eAAgBpB,OAAO,EAAEV,MAAM,EAAE;MAC/B;MACA,IAAIlC,WAAW,CAACoE,QAAQ,CAAClC,MAAM,CAAC,EAAE;MAClC;MACA,IAAI,CAAC,0BAA0B,EAAE,2BAA2B,CAAC,CAACkC,QAAQ,CAACxB,OAAO,CAAC/F,MAAM,CAAC,EAAE;QACtF,IAAI,CAACqF,MAAM,IAAI,CAACA,MAAM,CAACmC,SAAS,IAAInC,MAAM,CAACmC,SAAS,KAAK,oEAAoE,EAAE;UAC7H,OAAO,KAAK;QACd;MACF;MACA;MACA,OAAO,IAAI;IACb;;IAEA;EAAA;IAAA3B,GAAA;IAAA3I,KAAA,EACA,SAAAgI,YAAauC,WAAW,EAAC;MACvB,IAAMC,IAAI,GAAG,IAAI;MACjB,IAAMC,cAAc,GAAGzB,MAAM,CAACC,QAAQ,CAACsB,WAAW,EAAE,EAAE,CAAC;MACvD;MACA7K,MAAM,CAACsF,IAAI,CAACwF,IAAI,CAAC/B,KAAK,CAAC,CACpBiC,GAAG,CAAC1B,MAAM,CAAC,CACX2B,MAAM,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,GAAGH,cAAc;MAAA,EAAC,CACnCrI,OAAO,CAAC,UAAAwI,GAAG;QAAA,OAAI,OAAOJ,IAAI,CAAC/B,KAAK,CAACmC,GAAG,CAAC;MAAA,EAAC;IAC3C;EAAC;EAAA,OAAAlE,kBAAA;AAAA"},"metadata":{},"sourceType":"script"}