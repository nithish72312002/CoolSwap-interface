{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n  return function refCountOperatorFunction(source) {\n    return source.lift(new RefCountOperator(source));\n  };\n}\nvar RefCountOperator = /*@__PURE__*/function () {\n  function RefCountOperator(connectable) {\n    this.connectable = connectable;\n  }\n  RefCountOperator.prototype.call = function (subscriber, source) {\n    var connectable = this.connectable;\n    connectable._refCount++;\n    var refCounter = new RefCountSubscriber(subscriber, connectable);\n    var subscription = source.subscribe(refCounter);\n    if (!refCounter.closed) {\n      refCounter.connection = connectable.connect();\n    }\n    return subscription;\n  };\n  return RefCountOperator;\n}();\nvar RefCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RefCountSubscriber, _super);\n  function RefCountSubscriber(destination, connectable) {\n    var _this = _super.call(this, destination) || this;\n    _this.connectable = connectable;\n    return _this;\n  }\n  RefCountSubscriber.prototype._unsubscribe = function () {\n    var connectable = this.connectable;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n    this.connectable = null;\n    var refCount = connectable._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n    connectable._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n    var connection = this.connection;\n    var sharedConnection = connectable._connection;\n    this.connection = null;\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  };\n  return RefCountSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","refCount","refCountOperatorFunction","source","lift","RefCountOperator","connectable","prototype","call","subscriber","_refCount","refCounter","RefCountSubscriber","subscription","subscribe","closed","connection","connect","_super","__extends","destination","_this","_unsubscribe","sharedConnection","_connection","unsubscribe"],"sources":["../../../src/internal/operators/refCount.ts"],"sourcesContent":[null],"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA2D3B,SAAMC,UAAU,QAAQ;OACtB,SAAOC,QAASA,CAAA;SACd,SAAOC,wBAAgBA,CAAAC,MAAiB;IACT,OAAAA,MAAA,CAAAC,IAAA,KAAAC,gBAAA,CAAAF,MAAA;EAClC;AAED;IACEE,gBAAA,gBAAoB,YAAqC;WAArCA,iBAAAC,WAAqC;IACxD,KAAAA,WAAA,GAAAA,WAAA;EACD;kBAEU,CAAAC,SAAA,CAAAC,IAAA,aAAqBC,UAAA,EAAAN,MAAA;IACtB,IAAAG,WAAa,OAAS,CAAEA,WAAC;IAEhCA,WAAM,CAAAI,SAAiB;IACvB,IAAMC,UAAA,GAAY,IAAGC,kBAAiB,CAAAH,UAAY,EAAAH,WAAA;IAElD,IAAIO,YAAY,GAAAV,MAAQ,CAAAW,SAAA,CAAAH,UAAA;QACf,CAAAA,UAAY,CAAAI,MAAA;MACpBJ,UAAA,CAAAK,UAAA,GAAAV,WAAA,CAAAW,OAAA;IAED;IACD,OAAAJ,YAAA;EACH;EAjBA,OAiBCR,gBAAA;AAED;IAAoCO,kBAAA,0BAAaM,MAAA;EAI/CnB,OAAA,CAAAoB,SAAA,CAAAP,kBAAY,EAAAM,MACQ;WADpBN,kBAEEA,CAAAQ,WAAM,EAAAd,WAAY;IADA,IAAAe,KAAA,GAAAH,MAAW,CAAAV,IAAX,OAAAY,WAAqC;;IAExD,OAAAC,KAAA;EAES;oBAEA,CAAAd,SAAA,CAAAe,YAAqB;IAC7B,IAAIhB,WAAC,GAAa,KAAAA,WAAA;QAChB,CAAAA,WAAK;MACL,KAAAU,UAAO;MACR;IAED;IACA,IAAM,CAAAV,WAAkB;IACxB,IAAIL,QAAQ,GAAAK,WAAO,CAAAI,SAAA;QACjBT,QAAK,OAAU;MACf,KAAAe,UAAO;MACR;IAEM;IACPV,WAAI,CAAQI,SAAM,GAAAT,QAAA;QAChBA,QAAK;MACL,KAAAe,UAAO;MACR;IA0BO;IACR,IAAMA,UAAA,OAAgB,CAAAA,UAAU;IAChC,IAAIO,gBAAc,GAAKjB,WAAA,CAAAkB,WAAA;IAEvB,IAAI,CAAAR,UAAA,OAAgB;QAClBO,gBAAgB,KAAC,CAAAP,UAAc,IAAAO,gBAAA,KAAAP,UAAA;MAChCO,gBAAA,CAAAE,WAAA;IACF;EACH;EA9DoC,OAAAb,kBA8DnC"},"metadata":{},"sourceType":"module"}