{"ast":null,"code":"import _slicedToArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { Pair, Token } from '@uniswap/sdk';\nimport flatMap from 'lodash.flatmap';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS, LP_TOKEN_NAME, LP_TOKEN_SYMBOL } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, updateUserSlippageTolerance, toggleURLWarning, updateUserSingleHopOnly } from './actions';\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useIsDarkMode() {\n  var _useSelector = useSelector(function (_ref) {\n      var _ref$user = _ref.user,\n        matchesDarkMode = _ref$user.matchesDarkMode,\n        userDarkMode = _ref$user.userDarkMode;\n      return {\n        userDarkMode: userDarkMode,\n        matchesDarkMode: matchesDarkMode\n      };\n    }, shallowEqual),\n    userDarkMode = _useSelector.userDarkMode,\n    matchesDarkMode = _useSelector.matchesDarkMode;\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\nexport function useDarkModeManager() {\n  var dispatch = useDispatch();\n  var darkMode = useIsDarkMode();\n  var toggleSetDarkMode = useCallback(function () {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\nexport function useIsExpertMode() {\n  return useSelector(function (state) {\n    return state.user.userExpertMode;\n  });\n}\nexport function useExpertModeManager() {\n  var dispatch = useDispatch();\n  var expertMode = useIsExpertMode();\n  var toggleSetExpertMode = useCallback(function () {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\nexport function useUserSingleHopOnly() {\n  var dispatch = useDispatch();\n  var singleHopOnly = useSelector(function (state) {\n    return state.user.userSingleHopOnly;\n  });\n  var setSingleHopOnly = useCallback(function (newSingleHopOnly) {\n    dispatch(updateUserSingleHopOnly({\n      userSingleHopOnly: newSingleHopOnly\n    }));\n  }, [dispatch]);\n  return [singleHopOnly, setSingleHopOnly];\n}\nexport function useUserSlippageTolerance() {\n  var dispatch = useDispatch();\n  var userSlippageTolerance = useSelector(function (state) {\n    return state.user.userSlippageTolerance;\n  });\n  var setUserSlippageTolerance = useCallback(function (userSlippageTolerance) {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: userSlippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\nexport function useUserTransactionTTL() {\n  var dispatch = useDispatch();\n  var userDeadline = useSelector(function (state) {\n    return state.user.userDeadline;\n  });\n  var setUserDeadline = useCallback(function (userDeadline) {\n    dispatch(updateUserDeadline({\n      userDeadline: userDeadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\nexport function useAddUserToken() {\n  var dispatch = useDispatch();\n  return useCallback(function (token) {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\nexport function useRemoveUserAddedToken() {\n  var dispatch = useDispatch();\n  return useCallback(function (chainId, address) {\n    dispatch(removeSerializedToken({\n      chainId: chainId,\n      address: address\n    }));\n  }, [dispatch]);\n}\nexport function useUserAddedTokens() {\n  var _useActiveWeb3React = useActiveWeb3React(),\n    chainId = _useActiveWeb3React.chainId;\n  var serializedTokensMap = useSelector(function (_ref2) {\n    var tokens = _ref2.user.tokens;\n    return tokens;\n  });\n  return useMemo(function () {\n    var _serializedTokensMap;\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap = serializedTokensMap[chainId]) !== null && _serializedTokensMap !== void 0 ? _serializedTokensMap : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  var dispatch = useDispatch();\n  return useCallback(function (pair) {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\nexport function useURLWarningVisible() {\n  return useSelector(function (state) {\n    return state.user.URLWarningVisible;\n  });\n}\nexport function useURLWarningToggle() {\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(toggleURLWarning());\n  }, [dispatch]);\n}\n\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\nexport function toV2LiquidityToken(_ref3) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n    tokenA = _ref4[0],\n    tokenB = _ref4[1];\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, LP_TOKEN_SYMBOL, LP_TOKEN_NAME);\n}\n\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\nexport function useTrackedTokenPairs() {\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React2.chainId;\n  var tokens = useAllTokens();\n\n  // pinned pairs\n  var pinnedPairs = useMemo(function () {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  var generatedPairs = useMemo(function () {\n    return chainId ? flatMap(Object.keys(tokens), function (tokenAddress) {\n      var _BASES_TO_TRACK_LIQUI;\n      var token = tokens[tokenAddress];\n      // for each token on the current chain,\n      return (\n        // loop though all bases on the current chain\n        ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n        ).map(function (base) {\n          if (base.address === token.address) {\n            return null;\n          } else {\n            return [base, token];\n          }\n        }).filter(function (p) {\n          return p !== null;\n        })\n      );\n    }) : [];\n  }, [tokens, chainId]);\n\n  // pairs saved by users\n  var savedSerializedPairs = useSelector(function (_ref5) {\n    var pairs = _ref5.user.pairs;\n    return pairs;\n  });\n  var userPairs = useMemo(function () {\n    if (!chainId || !savedSerializedPairs) return [];\n    var forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(function (pairId) {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  var combinedList = useMemo(function () {\n    return userPairs.concat(generatedPairs).concat(pinnedPairs);\n  }, [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(function () {\n    // dedupes pairs of tokens in the combined list\n    var keyed = combinedList.reduce(function (memo, _ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n        tokenA = _ref7[0],\n        tokenB = _ref7[1];\n      var sorted = tokenA.sortsBefore(tokenB);\n      var key = sorted ? \"\".concat(tokenA.address, \":\").concat(tokenB.address) : \"\".concat(tokenB.address, \":\").concat(tokenA.address);\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(function (key) {\n      return keyed[key];\n    });\n  }, [combinedList]);\n}","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","LP_TOKEN_NAME","LP_TOKEN_SYMBOL","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","toggleURLWarning","updateUserSingleHopOnly","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","_useSelector","_ref","_ref$user","user","matchesDarkMode","userDarkMode","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","_useActiveWeb3React","serializedTokensMap","_ref2","tokens","_serializedTokensMap","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","toV2LiquidityToken","_ref3","_ref4","_slicedToArray","tokenA","tokenB","getAddress","useTrackedTokenPairs","_useActiveWeb3React2","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","keys","tokenAddress","_BASES_TO_TRACK_LIQUI","base","filter","p","savedSerializedPairs","_ref5","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref6","_ref7","sorted","sortsBefore","key"],"sources":["E:/testprojects/CoolSwap-interface/src/state/user/hooks.tsx"],"sourcesContent":["import { ChainId, Pair, Token } from '@uniswap/sdk';\r\nimport flatMap from 'lodash.flatmap';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS, LP_TOKEN_NAME, LP_TOKEN_SYMBOL } from '../../constants';\r\n\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useAllTokens } from '../../hooks/Tokens';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  toggleURLWarning,\r\n  updateUserSingleHopOnly,\r\n} from './actions';\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  };\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  );\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const darkMode = useIsDarkMode();\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }));\r\n  }, [darkMode, dispatch]);\r\n\r\n  return [darkMode, toggleSetDarkMode];\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode);\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const expertMode = useIsExpertMode();\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\r\n  }, [expertMode, dispatch]);\r\n\r\n  return [expertMode, toggleSetExpertMode];\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly\r\n  );\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return [singleHopOnly, setSingleHopOnly];\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance;\r\n  });\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (userSlippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance];\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline;\r\n  });\r\n\r\n  const setUserDeadline = useCallback(\r\n    (userDeadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return [userDeadline, setUserDeadline];\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\r\n    },\r\n    [dispatch]\r\n  );\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }));\r\n    },\r\n    [dispatch]\r\n  );\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React();\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens);\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return [];\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken);\r\n  }, [serializedTokensMap, chainId]);\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  };\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\r\n    },\r\n    [dispatch]\r\n  );\r\n}\r\n\r\nexport function useURLWarningVisible(): boolean {\r\n  return useSelector((state: AppState) => state.user.URLWarningVisible);\r\n}\r\n\r\nexport function useURLWarningToggle(): () => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch]);\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, LP_TOKEN_SYMBOL, LP_TOKEN_NAME);\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React();\r\n  const tokens = useAllTokens();\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId]);\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress];\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null;\r\n                  } else {\r\n                    return [base, token];\r\n                  }\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            );\r\n          })\r\n        : [],\r\n    [tokens, chainId]\r\n  );\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs);\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return [];\r\n    const forChain = savedSerializedPairs[chainId];\r\n    if (!forChain) return [];\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\r\n    });\r\n  }, [savedSerializedPairs, chainId]);\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs]\r\n  );\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB);\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\r\n      if (memo[key]) return memo;\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\r\n      return memo;\r\n    }, {});\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key]);\r\n  }, [combinedList]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}