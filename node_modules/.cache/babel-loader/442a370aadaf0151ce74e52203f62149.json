{"ast":null,"code":"import { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport { ARGENT_WALLET_DETECTOR_ABI, ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS } from '../constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\n\n// returns null on errors\nfunction useContract(address, ABI) {\n  var withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var _useActiveWeb3React = useActiveWeb3React(),\n    library = _useActiveWeb3React.library,\n    account = _useActiveWeb3React.account;\n  return useMemo(function () {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(withSignerIfPossible) {\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React2.chainId;\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\nexport function useArgentWalletDetectorContract() {\n  var _useActiveWeb3React3 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React3.chainId;\n  return useContract(chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined, ARGENT_WALLET_DETECTOR_ABI, false);\n}\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  var _useActiveWeb3React4 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React4.chainId;\n  var address;\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  var _useActiveWeb3React5 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React5.chainId;\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}","map":{"version":3,"names":["abi","STAKING_REWARDS_ABI","ChainId","WETH","IUniswapV2PairABI","useMemo","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","arguments","length","undefined","_useActiveWeb3React","library","account","error","console","useTokenContract","tokenAddress","useWETHContract","_useActiveWeb3React2","chainId","useArgentWalletDetectorContract","_useActiveWeb3React3","MAINNET","useENSRegistrarContract","_useActiveWeb3React4","GÖRLI","ROPSTEN","RINKEBY","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","_useActiveWeb3React5","useStakingContract","stakingAddress"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useContract.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts';\r\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\r\nimport { ChainId, WETH } from '@uniswap/sdk';\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { useMemo } from 'react';\r\nimport {\r\n  ARGENT_WALLET_DETECTOR_ABI,\r\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\r\n} from '../constants/abis/argent-wallet-detector';\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\r\nimport ERC20_ABI from '../constants/abis/erc20.json';\r\nimport WETH_ABI from '../constants/abis/weth.json';\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\r\nimport { getContract } from '../utils';\r\nimport { useActiveWeb3React } from './index';\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React();\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null;\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error);\r\n      return null;\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account]);\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useArgentWalletDetectorContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(\r\n    chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined,\r\n    ARGENT_WALLET_DETECTOR_ABI,\r\n    false\r\n  );\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  let address: string | undefined;\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.GÖRLI:\r\n      case ChainId.ROPSTEN:\r\n      case ChainId.RINKEBY:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\r\n        break;\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\r\n}\r\n\r\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}