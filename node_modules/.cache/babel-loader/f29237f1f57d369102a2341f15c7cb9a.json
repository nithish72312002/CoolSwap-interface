{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { useDefaultTokenList } from './../state/lists/hooks';\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { ETHER, Token, currencyEquals } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks';\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport { useUserAddedTokens } from '../state/user/hooks';\nimport { isAddress } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport { useBytes32TokenContract, useTokenContract } from './useContract';\nimport { filterTokens } from '../components/SearchModal/filtering';\nimport { arrayify } from 'ethers/lib/utils';\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap, includeUserAdded) {\n  var _useActiveWeb3React = useActiveWeb3React(),\n    chainId = _useActiveWeb3React.chainId;\n  var userAddedTokens = useUserAddedTokens();\n  return useMemo(function () {\n    if (!chainId) return {};\n\n    // reduce to just tokens\n    var mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce(function (newMap, address) {\n      newMap[address] = tokenMap[chainId][address].token;\n      return newMap;\n    }, {});\n    if (includeUserAdded) {\n      return userAddedTokens\n      // reduce into all ALL_TOKENS filtered by the current chain\n      .reduce(function (tokenMap, token) {\n        tokenMap[token.address] = token;\n        return tokenMap;\n      }, // must make a copy because reduce modifies the map, and we do not\n      // want to make a copy in every iteration\n      _objectSpread({}, mapWithoutUrls));\n    }\n    return mapWithoutUrls;\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded]);\n}\nexport function useDefaultTokens() {\n  var defaultList = useDefaultTokenList();\n  return useTokensFromMap(defaultList, false);\n}\nexport function useAllTokens() {\n  var allTokens = useCombinedActiveList();\n  return useTokensFromMap(allTokens, true);\n}\nexport function useAllInactiveTokens() {\n  // get inactive tokens\n  var inactiveTokensMap = useCombinedInactiveList();\n  var inactiveTokens = useTokensFromMap(inactiveTokensMap, false);\n\n  // filter out any token that are on active list\n  var activeTokensAddresses = Object.keys(useAllTokens());\n  var filteredInactive = activeTokensAddresses ? Object.keys(inactiveTokens).reduce(function (newMap, address) {\n    if (!activeTokensAddresses.includes(address)) {\n      newMap[address] = inactiveTokens[address];\n    }\n    return newMap;\n  }, {}) : inactiveTokens;\n  return filteredInactive;\n}\nexport function useIsTokenActive(token) {\n  var activeTokens = useAllTokens();\n  if (!activeTokens || !token) {\n    return false;\n  }\n  return !!activeTokens[token.address];\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery) {\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React2.chainId;\n  var inactiveTokens = useAllInactiveTokens();\n  return useMemo(function () {\n    if (!chainId || searchQuery === '') {\n      return undefined;\n    } else {\n      var tokens = filterTokens(Object.values(inactiveTokens), searchQuery);\n      return tokens;\n    }\n  }, [chainId, inactiveTokens, searchQuery]);\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency) {\n  var userAddedTokens = useUserAddedTokens();\n  if (!currency) {\n    return false;\n  }\n  return !!userAddedTokens.find(function (token) {\n    return currencyEquals(currency, token);\n  });\n}\n\n// parse a name or symbol from a token response\nvar BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\nfunction parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0 ? str :\n  // need to check for proper bytes string and valid terminator\n  bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0 ? parseBytes32String(bytes32) : defaultValue;\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  var _useActiveWeb3React3 = useActiveWeb3React(),\n    chainId = _useActiveWeb3React3.chainId;\n  var tokens = useAllTokens();\n  var address = isAddress(tokenAddress);\n  var tokenContract = useTokenContract(address ? address : undefined, false);\n  var tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false);\n  var token = address ? tokens[address] : undefined;\n  var tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\n  var tokenNameBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'name', undefined, NEVER_RELOAD);\n  var symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\n  var symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD);\n  var decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\n  return useMemo(function () {\n    if (token) return token;\n    if (!chainId || !address) return undefined;\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\n    if (decimals.result) {\n      var _symbol$result, _symbolBytes32$result, _tokenName$result, _tokenNameBytes32$res;\n      return new Token(chainId, address, decimals.result[0], parseStringOrBytes32((_symbol$result = symbol.result) === null || _symbol$result === void 0 ? void 0 : _symbol$result[0], (_symbolBytes32$result = symbolBytes32.result) === null || _symbolBytes32$result === void 0 ? void 0 : _symbolBytes32$result[0], 'UNKNOWN'), parseStringOrBytes32((_tokenName$result = tokenName.result) === null || _tokenName$result === void 0 ? void 0 : _tokenName$result[0], (_tokenNameBytes32$res = tokenNameBytes32.result) === null || _tokenNameBytes32$res === void 0 ? void 0 : _tokenNameBytes32$res[0], 'Unknown Token'));\n    }\n    return undefined;\n  }, [address, chainId, decimals.loading, decimals.result, symbol.loading, symbol.result, symbolBytes32.result, token, tokenName.loading, tokenName.result, tokenNameBytes32.result]);\n}\nexport function useCurrency(currencyId) {\n  var isETH = (currencyId === null || currencyId === void 0 ? void 0 : currencyId.toUpperCase()) === 'ETH';\n  var token = useToken(isETH ? undefined : currencyId);\n  return isETH ? ETHER : token;\n}","map":{"version":3,"names":["useDefaultTokenList","parseBytes32String","ETHER","Token","currencyEquals","useMemo","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useActiveWeb3React","useBytes32TokenContract","useTokenContract","filterTokens","arrayify","useTokensFromMap","tokenMap","includeUserAdded","_useActiveWeb3React","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","_objectSpread","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","_useActiveWeb3React2","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","_useActiveWeb3React3","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","useCurrency","currencyId","isETH","toUpperCase"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/Tokens.ts"],"sourcesContent":["import { TokenAddressMap, useDefaultTokenList } from './../state/lists/hooks';\r\nimport { parseBytes32String } from '@ethersproject/strings';\r\nimport { Currency, ETHER, Token, currencyEquals } from '@uniswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks';\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\r\nimport { useUserAddedTokens } from '../state/user/hooks';\r\nimport { isAddress } from '../utils';\r\n\r\nimport { useActiveWeb3React } from './index';\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract';\r\nimport { filterTokens } from '../components/SearchModal/filtering';\r\nimport { arrayify } from 'ethers/lib/utils';\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React();\r\n  const userAddedTokens = useUserAddedTokens();\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {};\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token;\r\n      return newMap;\r\n    }, {});\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap, token) => {\r\n              tokenMap[token.address] = token;\r\n              return tokenMap;\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls }\r\n          )\r\n      );\r\n    }\r\n\r\n    return mapWithoutUrls;\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded]);\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList();\r\n  return useTokensFromMap(defaultList, false);\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList();\r\n  return useTokensFromMap(allTokens, true);\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList();\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false);\r\n\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens());\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n        if (!activeTokensAddresses.includes(address)) {\r\n          newMap[address] = inactiveTokens[address];\r\n        }\r\n        return newMap;\r\n      }, {})\r\n    : inactiveTokens;\r\n\r\n  return filteredInactive;\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens();\r\n\r\n  if (!activeTokens || !token) {\r\n    return false;\r\n  }\r\n\r\n  return !!activeTokens[token.address];\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n  const inactiveTokens = useAllInactiveTokens();\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined;\r\n    } else {\r\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery);\r\n      return tokens;\r\n    }\r\n  }, [chainId, inactiveTokens, searchQuery]);\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens();\r\n\r\n  if (!currency) {\r\n    return false;\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token));\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue;\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  const tokens = useAllTokens();\r\n\r\n  const address = isAddress(tokenAddress);\r\n\r\n  const tokenContract = useTokenContract(address ? address : undefined, false);\r\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false);\r\n  const token: Token | undefined = address ? tokens[address] : undefined;\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD\r\n  );\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\r\n  const symbolBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'symbol',\r\n    undefined,\r\n    NEVER_RELOAD\r\n  );\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\r\n\r\n  return useMemo(() => {\r\n    if (token) return token;\r\n    if (!chainId || !address) return undefined;\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ]);\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isETH = currencyId?.toUpperCase() === 'ETH';\r\n  const token = useToken(isETH ? undefined : currencyId);\r\n  return isETH ? ETHER : token;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}