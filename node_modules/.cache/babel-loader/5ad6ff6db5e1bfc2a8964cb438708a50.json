{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\nvar BufferToggleOperator = /*@__PURE__*/function () {\n  function BufferToggleOperator(openings, closingSelector) {\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n  BufferToggleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  };\n  return BufferToggleOperator;\n}();\nvar BufferToggleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BufferToggleSubscriber, _super);\n  function BufferToggleSubscriber(destination, openings, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n    _this.add(subscribeToResult(_this, openings));\n    return _this;\n  }\n  BufferToggleSubscriber.prototype._next = function (value) {\n    var contexts = this.contexts;\n    var len = contexts.length;\n    for (var i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  };\n  BufferToggleSubscriber.prototype._error = function (err) {\n    var contexts = this.contexts;\n    while (contexts.length > 0) {\n      var context_1 = contexts.shift();\n      context_1.subscription.unsubscribe();\n      context_1.buffer = null;\n      context_1.subscription = null;\n    }\n    this.contexts = null;\n    _super.prototype._error.call(this, err);\n  };\n  BufferToggleSubscriber.prototype._complete = function () {\n    var contexts = this.contexts;\n    while (contexts.length > 0) {\n      var context_2 = contexts.shift();\n      this.destination.next(context_2.buffer);\n      context_2.subscription.unsubscribe();\n      context_2.buffer = null;\n      context_2.subscription = null;\n    }\n    this.contexts = null;\n    _super.prototype._complete.call(this);\n  };\n  BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  };\n  BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.closeBuffer(innerSub.context);\n  };\n  BufferToggleSubscriber.prototype.openBuffer = function (value) {\n    try {\n      var closingSelector = this.closingSelector;\n      var closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  };\n  BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n    var contexts = this.contexts;\n    if (contexts && context) {\n      var buffer = context.buffer,\n        subscription = context.subscription;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  };\n  BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n    var contexts = this.contexts;\n    var buffer = [];\n    var subscription = new Subscription();\n    var context = {\n      buffer: buffer,\n      subscription: subscription\n    };\n    contexts.push(context);\n    var innerSubscription = subscribeToResult(this, closingNotifier, context);\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      innerSubscription.context = context;\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  };\n  return BufferToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"names":["tslib_1","Subscription","subscribeToResult","OuterSubscriber","bufferToggle","openings","closingSelector","bufferToggleOperatorFunction","source","lift","BufferToggleOperator","prototype","call","subscriber","subscribe","BufferToggleSubscriber","_super","__extends","destination","_this","contexts","_next","value","len","length","i","buffer","push","_error","err","context_1","shift","subscription","unsubscribe","_complete","context_2","next","notifyNext","outerValue","innerValue","closeBuffer","openBuffer","notifyComplete","innerSub","context","closingNotifier","trySubscribe","splice","indexOf","remove","innerSubscription","closed","add"],"sources":["../../../src/internal/operators/bufferToggle.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}