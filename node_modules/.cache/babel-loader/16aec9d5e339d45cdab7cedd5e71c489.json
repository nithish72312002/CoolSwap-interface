{"ast":null,"code":"import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, removeSerializedPair, removeSerializedToken, updateMatchesDarkMode, updateUserDarkMode, updateUserExpertMode, updateUserSlippageTolerance, updateUserDeadline, toggleURLWarning, updateUserSingleHopOnly } from './actions';\nvar currentTimestamp = function currentTimestamp() {\n  return new Date().getTime();\n};\nfunction pairKey(token0Address, token1Address) {\n  return \"\".concat(token0Address, \";\").concat(token1Address);\n}\nexport var initialState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(updateVersion, function (state) {\n    // slippage isnt being tracked in local storage, reset to default\n    // noinspection SuspiciousTypeOfGuard\n    if (typeof state.userSlippageTolerance !== 'number') {\n      state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\n    }\n\n    // deadline isnt being tracked in local storage, reset to default\n    // noinspection SuspiciousTypeOfGuard\n    if (typeof state.userDeadline !== 'number') {\n      state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n    }\n    state.lastUpdateVersionTimestamp = currentTimestamp();\n  }).addCase(updateUserDarkMode, function (state, action) {\n    state.userDarkMode = action.payload.userDarkMode;\n    state.timestamp = currentTimestamp();\n  }).addCase(updateMatchesDarkMode, function (state, action) {\n    state.matchesDarkMode = action.payload.matchesDarkMode;\n    state.timestamp = currentTimestamp();\n  }).addCase(updateUserExpertMode, function (state, action) {\n    state.userExpertMode = action.payload.userExpertMode;\n    state.timestamp = currentTimestamp();\n  }).addCase(updateUserSlippageTolerance, function (state, action) {\n    state.userSlippageTolerance = action.payload.userSlippageTolerance;\n    state.timestamp = currentTimestamp();\n  }).addCase(updateUserDeadline, function (state, action) {\n    state.userDeadline = action.payload.userDeadline;\n    state.timestamp = currentTimestamp();\n  }).addCase(updateUserSingleHopOnly, function (state, action) {\n    state.userSingleHopOnly = action.payload.userSingleHopOnly;\n  }).addCase(addSerializedToken, function (state, _ref) {\n    var serializedToken = _ref.payload.serializedToken;\n    state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n    state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n    state.timestamp = currentTimestamp();\n  }).addCase(removeSerializedToken, function (state, _ref2) {\n    var _ref2$payload = _ref2.payload,\n      address = _ref2$payload.address,\n      chainId = _ref2$payload.chainId;\n    state.tokens[chainId] = state.tokens[chainId] || {};\n    delete state.tokens[chainId][address];\n    state.timestamp = currentTimestamp();\n  }).addCase(addSerializedPair, function (state, _ref3) {\n    var serializedPair = _ref3.payload.serializedPair;\n    if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n      var _chainId = serializedPair.token0.chainId;\n      state.pairs[_chainId] = state.pairs[_chainId] || {};\n      state.pairs[_chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n    }\n    state.timestamp = currentTimestamp();\n  }).addCase(removeSerializedPair, function (state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n      chainId = _ref4$payload.chainId,\n      tokenAAddress = _ref4$payload.tokenAAddress,\n      tokenBAddress = _ref4$payload.tokenBAddress;\n    if (state.pairs[chainId]) {\n      // just delete both keys if either exists\n      delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n      delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n    }\n    state.timestamp = currentTimestamp();\n  }).addCase(toggleURLWarning, function (state) {\n    state.URLWarningVisible = !state.URLWarningVisible;\n  });\n});","map":{"version":3,"names":["INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","createReducer","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","toggleURLWarning","updateUserSingleHopOnly","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","concat","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","_ref","serializedToken","chainId","address","_ref2","_ref2$payload","_ref3","serializedPair","token0","token1","_ref4","_ref4$payload","tokenAAddress","tokenBAddress"],"sources":["E:/testprojects/CoolSwap-interface/src/state/user/reducer.ts"],"sourcesContent":["import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { updateVersion } from '../global/actions';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  toggleURLWarning,\r\n  updateUserSingleHopOnly,\r\n} from './actions';\r\n\r\nconst currentTimestamp = () => new Date().getTime();\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number;\r\n\r\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean; // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean;\r\n\r\n  userSingleHopOnly: boolean; // only allow swaps on direct pairs\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number;\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number;\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken;\r\n    };\r\n  };\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair;\r\n    };\r\n  };\r\n\r\n  timestamp: number;\r\n  URLWarningVisible: boolean;\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: null,\r\n  matchesDarkMode: false,\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly;\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {};\r\n      delete state.tokens[chainId][address];\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId;\r\n        state.pairs[chainId] = state.pairs[chainId] || {};\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible;\r\n    })\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}