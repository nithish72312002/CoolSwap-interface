{"ast":null,"code":"import _slicedToArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useEffect, useState } from 'react';\nvar VISIBILITY_STATE_SUPPORTED = ('visibilityState' in document);\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\n}\n\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\nexport default function useIsWindowVisible() {\n  var _useState = useState(isWindowVisible()),\n    _useState2 = _slicedToArray(_useState, 2),\n    focused = _useState2[0],\n    setFocused = _useState2[1];\n  var listener = useCallback(function () {\n    setFocused(isWindowVisible());\n  }, [setFocused]);\n  useEffect(function () {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n    document.addEventListener('visibilitychange', listener);\n    return function () {\n      document.removeEventListener('visibilitychange', listener);\n    };\n  }, [listener]);\n  return focused;\n}","map":{"version":3,"names":["useCallback","useEffect","useState","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","_useState","_useState2","_slicedToArray","focused","setFocused","listener","undefined","addEventListener","removeEventListener"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useIsWindowVisible.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document;\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\r\n  const listener = useCallback(() => {\r\n    setFocused(isWindowVisible());\r\n  }, [setFocused]);\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\r\n\r\n    document.addEventListener('visibilitychange', listener);\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', listener);\r\n    };\r\n  }, [listener]);\r\n\r\n  return focused;\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,IAAMC,0BAA0B,IAAG,iBAAiB,IAAIC,QAAQ;AAEhE,SAASC,eAAeA,CAAA,EAAG;EACzB,OAAO,CAACF,0BAA0B,IAAIC,QAAQ,CAACE,eAAe,KAAK,QAAQ;AAC7E;;AAEA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAAA,EAAY;EACpD,IAAAC,SAAA,GAA8BN,QAAQ,CAAUG,eAAe,CAAC,CAAC,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAMI,QAAQ,GAAGb,WAAW,CAAC,YAAM;IACjCY,UAAU,CAACP,eAAe,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACO,UAAU,CAAC,CAAC;EAEhBX,SAAS,CAAC,YAAM;IACd,IAAI,CAACE,0BAA0B,EAAE,OAAOW,SAAS;IAEjDV,QAAQ,CAACW,gBAAgB,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IACvD,OAAO,YAAM;MACXT,QAAQ,CAACY,mBAAmB,CAAC,kBAAkB,EAAEH,QAAQ,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OAAOF,OAAO;AAChB"},"metadata":{},"sourceType":"module"}