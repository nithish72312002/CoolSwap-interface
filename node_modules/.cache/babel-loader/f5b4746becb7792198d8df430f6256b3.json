{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n  return DistinctUntilChangedOperator;\n}();\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.keySelector = keySelector;\n    _this.hasKey = false;\n    if (typeof compare === 'function') {\n      _this.compare = compare;\n    }\n    return _this;\n  }\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var key;\n    try {\n      var keySelector = this.keySelector;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    var result = false;\n    if (this.hasKey) {\n      try {\n        var compare = this.compare;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n  return DistinctUntilChangedSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","distinctUntilChanged","compare","keySelector","source","lift","DistinctUntilChangedOperator","prototype","call","subscriber","subscribe","DistinctUntilChangedSubscriber","_super","__extends","destination","_this","hasKey","x","y","_next","value","key","err","error","result","next"],"sources":["../../../src/internal/operators/distinctUntilChanged.ts"],"sourcesContent":[null],"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA8D3B,SAAMC,UAAU,uBAA2B;OACzC,SAAOC,oBAA2BA,CAAAC,OAAM,EAACC,WAAS;EACnD,iBAAAC,MAAA;IAAA,OAAAA,MAAA,CAAAC,IAAA,KAAAC,4BAAA,CAAAJ,OAAA,EAAAC,WAAA;EAAA;AAED;IACEG,4BAAA,gBAAoD,YACR;WADxBA,4BAAgCA,CAAAJ,OAAA,EAAAC,WAAA;IAChC,KAAAD,OAAA,GAAAA,OAAA;IACnB,KAAAC,WAAA,GAAAA,WAAA;EAED;8BAC0B,CAAAI,SAAI,CAAAC,IAAA,aAAAC,UAA+B,EAAAL,MAAU,EAAE;IACxE,OAAAA,MAAA,CAAAM,SAAA,KAAAC,8BAAA,CAAAF,UAAA,OAAAP,OAAA,OAAAC,WAAA;EACH;EARA,OAQCG,4BAAA;AAOD;IAAmDK,8BAAA,0BAAaC,MAAA;EAI9Db,OAAA,CAAAc,SAAA,CAAAF,8BAAY,EAAAC,MACA;WADZD,8BAGQA,CAAAG,WAAY,EAAAZ,OAInB,EAAAC,WAAA;IALmB,IAAAY,KAAA,GAAAH,MAAW,CAAAJ,IAAX,OAAAM,WAAwB;IAJpCC,KAAA,CAAAZ,WAAkB,GAAKA,WAAC;IAM9BY,KAAI,CAAAC,MAAO,QAAO;QAChB,OAAKd,OAAO,KAAG,UAAQ;MACxBa,KAAA,CAAAb,OAAA,GAAAA,OAAA;;IACF,OAAAa,KAAA;EAEO;gCACS,CAAAR,SAAA,CAAAL,OAAA,aAAAe,CAAA,EAAAC,CAAA;IAChB,OAAAD,CAAA,KAAAC,CAAA;EAES;gCACK,CAAAX,SAAA,CAAAY,KAAA,aAAAC,KAAA;IACb,IAAIC,GAAA;QACM;MACR,IAAGlB,WAAG,GAAY,IAAE,CAAAA,WAAY;MACjCkB,GAAA,GAAAlB,WAAA,GAAAA,WAAA,CAAAiB,KAAA,IAAAA,KAAA;IAAC,E,OACAE,GAAA,EAAO;MACR,YAAAR,WAAA,CAAAS,KAAA,CAAAD,GAAA;IACD;IACA,IAAIE,MAAK,QAAQ;QACf,IAAI,CAAAR,MAAA;UACM;QACR,IAAAd,OAAS,OAAQ,CAAAA,OAAQ;QAC1BsB,MAAA,GAAAtB,OAAA,MAAAmB,GAAA,EAAAA,GAAA;MAAC,E,OACAC,GAAA,EAAO;QACR,YAAAR,WAAA,CAAAS,KAAA,CAAAD,GAAA;MACF;WACC;MACD,KAAAN,MAAA;IACD;QACE,CAAAQ,MAAK,EAAG;MACR,IAAI,CAACH,GAAA,GAAAA,GAAA;MACN,KAAAP,WAAA,CAAAW,IAAA,CAAAL,KAAA;IACF;EACH;EAzCmD,OAAAT,8BAyClD"},"metadata":{},"sourceType":"module"}