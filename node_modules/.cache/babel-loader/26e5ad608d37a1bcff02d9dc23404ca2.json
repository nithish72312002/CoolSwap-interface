{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive) {\n  if (inclusive === void 0) {\n    inclusive = false;\n  }\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate, inclusive));\n  };\n}\nvar TakeWhileOperator = /*@__PURE__*/function () {\n  function TakeWhileOperator(predicate, inclusive) {\n    this.predicate = predicate;\n    this.inclusive = inclusive;\n  }\n  TakeWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  };\n  return TakeWhileOperator;\n}();\nvar TakeWhileSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeWhileSubscriber, _super);\n  function TakeWhileSubscriber(destination, predicate, inclusive) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.inclusive = inclusive;\n    _this.index = 0;\n    return _this;\n  }\n  TakeWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    var result;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  };\n  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n    var destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  };\n  return TakeWhileSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","takeWhile","predicate","inclusive","source","lift","TakeWhileOperator","prototype","call","subscriber","subscribe","TakeWhileSubscriber","_super","__extends","destination","_this","index","_next","value","result","err","error","nextOrComplete","predicateResult","next","complete"],"sources":["../../../src/internal/operators/takeWhile.ts"],"sourcesContent":[null],"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAmD3B,SAAMC,UAAU,QACZ,eACA;OAAA,SAAAC,UAAAC,SAAA,EAAAC,SAAA;EACF,IAAAA,SAAO,KAAC,KAAqB;IAClBA,SAAA,QAAO;EAAP;EACZ,iBAAAC,MAAA;IAED,OAAAA,MAAA,CAAAC,IAAA,KAAAC,iBAAA,CAAAJ,SAAA,EAAAC,SAAA;EACE;;qBAEY,GAAS,aAAS;EAAG,SAACG,kBAAAJ,SAAA,EAAAC,SAAA;IAElC,KAAAD,SAAA,GAAAA,SAAA;IACE,KAAAC,SAAc,GAAAA,SACV;EACN;EACFG,iBAAA,CAAAC,SAAC,CAAAC,IAAA,aAAAC,UAAA,EAAAL,MAAA;IAAA,OAAAA,MAAA,CAAAM,SAAA,KAAAC,mBAAA,CAAAF,UAAA,OAAAP,SAAA,OAAAC,SAAA;EAOD;EAAqC,OAAAG,iBAAA;GAGnC;uBAIE,gBAAM,UAAYM,MAAA,EACnB;SAHW,CAAAC,SAAA,CAAAF,mBAA+C,EAAAC,MAAA;WAC/CD,oBAAAG,WAAkB,EAAAZ,SAAA,EAAAC,SAAA;IALtB,IAAAY,KAAA,GAAKH,MAAa,CAAAJ,IAAA,OAAAM,WAAA;;IAOzBC,KAAA,CAAAZ,SAAA,GAAAA,SAAA;IAESY,KAAA,CAAAC,KAAA;IACR,OAAMD,KAAA;;qBAEF,CAAAR,SAAA,CAAAU,KAAA,aAAAC,KAAA;QACFJ,WAAS,GAAK,KAAAA,WAAe;QAC9BK,MAAA;IAAC;MACAA,MAAA,OAAY,CAAAjB,SAAW,CAAAgB,KAAA,OAAAF,KAAA;aAExBI,GAAA;MACGN,WAAC,CAAAO,KAAe,CAAAD,GAAK;MAC1B;IAEO;IACN,IAAM,CAAAE,cAAc,CAAAJ,KAAK,EAAAC,MAAA,CAAW;;qBAEvB,CAACZ,SAAK,CAAKe,cAAE,aAAAJ,KAAA,EAAAK,eAAA;QACzBT,WAAA,QAAAA,WAAA;eAAM,CAAAS,eAAA;MACLT,WAAS,CAAAU,IAAA,CAAAN,KAAW;WAEnB;MACD,SAAAf,SAAY,EAAQ;QACrBW,WAAA,CAAAU,IAAA,CAAAN,KAAA;MACF;MACHJ,WAAA,CAAAW,QAAC;IAjCoC"},"metadata":{},"sourceType":"module"}