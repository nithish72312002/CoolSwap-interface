{"ast":null,"code":"var _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\components\\\\swap\\\\SwapRoute.tsx\";\nimport React, { Fragment, memo, useContext } from 'react';\nimport { ChevronRight } from 'react-feather';\nimport { Flex } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { TYPE } from '../../theme';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nexport default memo(function SwapRoute(_ref) {\n  var _this = this;\n  var trade = _ref.trade;\n  var theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(Flex, {\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, trade.route.path.map(function (token, i, path) {\n    var isLastItem = i === path.length - 1;\n    var currency = unwrappedToken(token);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      alignItems: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TYPE.black, {\n      fontSize: 14,\n      color: theme.text1,\n      ml: \"0.125rem\",\n      mr: \"0.125rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, currency.symbol)), isLastItem ? null : /*#__PURE__*/React.createElement(ChevronRight, {\n      size: 12,\n      color: theme.text2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }\n    }));\n  }));\n});","map":{"version":3,"names":["React","Fragment","memo","useContext","ChevronRight","Flex","ThemeContext","TYPE","unwrappedToken","SwapRoute","_ref","_this","trade","theme","createElement","flexWrap","width","justifyContent","alignItems","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","route","path","map","token","i","isLastItem","length","currency","key","black","fontSize","color","text1","ml","mr","symbol","size","text2"],"sources":["E:/testprojects/CoolSwap-interface/src/components/swap/SwapRoute.tsx"],"sourcesContent":["import { Trade } from '@uniswap/sdk';\r\nimport React, { Fragment, memo, useContext } from 'react';\r\nimport { ChevronRight } from 'react-feather';\r\nimport { Flex } from 'rebass';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { TYPE } from '../../theme';\r\nimport { unwrappedToken } from 'utils/wrappedCurrency';\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1;\r\n        const currency = unwrappedToken(token);\r\n        return (\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <TYPE.black fontSize={14} color={theme.text1} ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </TYPE.black>\r\n            </Flex>\r\n            {isLastItem ? null : <ChevronRight size={12} color={theme.text2} />}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n});\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,QAAQ,OAAO;AACzD,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,eAAeN,IAAI,CAAC,SAASO,SAASA,CAAAC,IAAA,EAA8B;EAAA,IAAAC,KAAA;EAAA,IAA3BC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC5C,IAAMC,KAAK,GAAGV,UAAU,CAACG,YAAY,CAAC;EACtC,oBACEN,KAAA,CAAAc,aAAA,CAACT,IAAI;IAACU,QAAQ,EAAC,MAAM;IAACC,KAAK,EAAC,MAAM;IAACC,cAAc,EAAC,UAAU;IAACC,UAAU,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7EZ,KAAK,CAACa,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,CAAC,EAAEH,IAAI,EAAK;IACxC,IAAMI,UAAmB,GAAGD,CAAC,KAAKH,IAAI,CAACK,MAAM,GAAG,CAAC;IACjD,IAAMC,QAAQ,GAAGxB,cAAc,CAACoB,KAAK,CAAC;IACtC,oBACE5B,KAAA,CAAAc,aAAA,CAACb,QAAQ;MAACgC,GAAG,EAAEJ,CAAE;MAAAV,MAAA,EAAAR,KAAA;MAAAS,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACfxB,KAAA,CAAAc,aAAA,CAACT,IAAI;MAACa,UAAU,EAAC,KAAK;MAAAC,MAAA,EAAAR,KAAA;MAAAS,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBxB,KAAA,CAAAc,aAAA,CAACP,IAAI,CAAC2B,KAAK;MAACC,QAAQ,EAAE,EAAG;MAACC,KAAK,EAAEvB,KAAK,CAACwB,KAAM;MAACC,EAAE,EAAC,UAAU;MAACC,EAAE,EAAC,UAAU;MAAApB,MAAA,EAAAR,KAAA;MAAAS,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACtEQ,QAAQ,CAACQ,MACA,CACR,CAAC,EACNV,UAAU,GAAG,IAAI,gBAAG9B,KAAA,CAAAc,aAAA,CAACV,YAAY;MAACqC,IAAI,EAAE,EAAG;MAACL,KAAK,EAAEvB,KAAK,CAAC6B,KAAM;MAAAvB,MAAA,EAAAR,KAAA;MAAAS,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC1D,CAAC;EAEf,CAAC,CACG,CAAC;AAEX,CAAC,CAAC"},"metadata":{},"sourceType":"module"}