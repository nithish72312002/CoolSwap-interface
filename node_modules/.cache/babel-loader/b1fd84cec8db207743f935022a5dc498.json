{"ast":null,"code":"var _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\components\\\\swap\\\\ConfirmSwapModal.tsx\";\nimport { currencyEquals } from '@uniswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from '../TransactionConfirmationModal';\nimport SwapModalFooter from './SwapModalFooter';\nimport SwapModalHeader from './SwapModalHeader';\n\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\nfunction tradeMeaningfullyDiffers(tradeA, tradeB) {\n  return tradeA.tradeType !== tradeB.tradeType || !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) || !tradeA.inputAmount.equalTo(tradeB.inputAmount) || !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) || !tradeA.outputAmount.equalTo(tradeB.outputAmount);\n}\nexport default function ConfirmSwapModal(_ref) {\n  var _this = this,\n    _trade$inputAmount,\n    _trade$inputAmount2,\n    _trade$inputAmount2$c,\n    _trade$outputAmount,\n    _trade$outputAmount2,\n    _trade$outputAmount2$;\n  var trade = _ref.trade,\n    originalTrade = _ref.originalTrade,\n    onAcceptChanges = _ref.onAcceptChanges,\n    allowedSlippage = _ref.allowedSlippage,\n    onConfirm = _ref.onConfirm,\n    onDismiss = _ref.onDismiss,\n    recipient = _ref.recipient,\n    swapErrorMessage = _ref.swapErrorMessage,\n    isOpen = _ref.isOpen,\n    attemptingTxn = _ref.attemptingTxn,\n    txHash = _ref.txHash;\n  var showAcceptChanges = useMemo(function () {\n    return Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade));\n  }, [originalTrade, trade]);\n  var modalHeader = useCallback(function () {\n    return trade ? /*#__PURE__*/React.createElement(SwapModalHeader, {\n      trade: trade,\n      allowedSlippage: allowedSlippage,\n      recipient: recipient,\n      showAcceptChanges: showAcceptChanges,\n      onAcceptChanges: onAcceptChanges,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }) : null;\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade]);\n  var modalBottom = useCallback(function () {\n    return trade ? /*#__PURE__*/React.createElement(SwapModalFooter, {\n      onConfirm: onConfirm,\n      trade: trade,\n      disabledConfirm: showAcceptChanges,\n      swapErrorMessage: swapErrorMessage,\n      allowedSlippage: allowedSlippage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }) : null;\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade]);\n\n  // text to show while loading\n  var pendingText = \"Swapping \".concat(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : _trade$inputAmount.toSignificant(6), \" \").concat(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount2 = trade.inputAmount) === null || _trade$inputAmount2 === void 0 ? void 0 : (_trade$inputAmount2$c = _trade$inputAmount2.currency) === null || _trade$inputAmount2$c === void 0 ? void 0 : _trade$inputAmount2$c.symbol, \" for \").concat(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount = trade.outputAmount) === null || _trade$outputAmount === void 0 ? void 0 : _trade$outputAmount.toSignificant(6), \" \").concat(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount2 = trade.outputAmount) === null || _trade$outputAmount2 === void 0 ? void 0 : (_trade$outputAmount2$ = _trade$outputAmount2.currency) === null || _trade$outputAmount2$ === void 0 ? void 0 : _trade$outputAmount2$.symbol);\n  var confirmationContent = useCallback(function () {\n    return swapErrorMessage ? /*#__PURE__*/React.createElement(TransactionErrorContent, {\n      onDismiss: onDismiss,\n      message: swapErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n      title: \"Confirm Swap\",\n      onDismiss: onDismiss,\n      topContent: modalHeader,\n      bottomContent: modalBottom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    });\n  }, [onDismiss, modalBottom, modalHeader, swapErrorMessage]);\n  return /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: confirmationContent,\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"names":["currencyEquals","React","useCallback","useMemo","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","SwapModalFooter","SwapModalHeader","tradeMeaningfullyDiffers","tradeA","tradeB","tradeType","inputAmount","currency","equalTo","outputAmount","ConfirmSwapModal","_ref","_this","_trade$inputAmount","_trade$inputAmount2","_trade$inputAmount2$c","_trade$outputAmount","_trade$outputAmount2","_trade$outputAmount2$","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","recipient","swapErrorMessage","isOpen","attemptingTxn","txHash","showAcceptChanges","Boolean","modalHeader","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","modalBottom","disabledConfirm","pendingText","concat","toSignificant","symbol","confirmationContent","message","title","topContent","bottomContent","hash","content"],"sources":["E:/testprojects/CoolSwap-interface/src/components/swap/ConfirmSwapModal.tsx"],"sourcesContent":["import { currencyEquals, Trade } from '@uniswap/sdk';\r\nimport React, { useCallback, useMemo } from 'react';\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from '../TransactionConfirmationModal';\r\nimport SwapModalFooter from './SwapModalFooter';\r\nimport SwapModalHeader from './SwapModalHeader';\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  );\r\n}\r\n\r\nexport default function ConfirmSwapModal({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  isOpen,\r\n  attemptingTxn,\r\n  txHash,\r\n}: {\r\n  isOpen: boolean;\r\n  trade: Trade | undefined;\r\n  originalTrade: Trade | undefined;\r\n  attemptingTxn: boolean;\r\n  txHash: string | undefined;\r\n  recipient: string | null;\r\n  allowedSlippage: number;\r\n  onAcceptChanges: () => void;\r\n  onConfirm: () => void;\r\n  swapErrorMessage: string | undefined;\r\n  onDismiss: () => void;\r\n}) {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade]\r\n  );\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null;\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade]);\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null;\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade]);\r\n\r\n  // text to show while loading\r\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\r\n    trade?.inputAmount?.currency?.symbol\r\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`;\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent\r\n          title=\"Confirm Swap\"\r\n          onDismiss={onDismiss}\r\n          topContent={modalHeader}\r\n          bottomContent={modalBottom}\r\n        />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\r\n  );\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}