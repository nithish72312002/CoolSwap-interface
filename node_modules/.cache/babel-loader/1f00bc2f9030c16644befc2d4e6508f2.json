{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport { JSBI, Percent, Router, TradeType } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../constants';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils';\nimport isZero from '../utils/isZero';\nimport { useActiveWeb3React } from './index';\nimport useTransactionDeadline from './useTransactionDeadline';\nimport useENS from './useENS';\nexport var SwapCallbackState = /*#__PURE__*/function (SwapCallbackState) {\n  SwapCallbackState[SwapCallbackState[\"INVALID\"] = 0] = \"INVALID\";\n  SwapCallbackState[SwapCallbackState[\"LOADING\"] = 1] = \"LOADING\";\n  SwapCallbackState[SwapCallbackState[\"VALID\"] = 2] = \"VALID\";\n  return SwapCallbackState;\n}({});\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\nfunction useSwapCallArguments(trade) {\n  var allowedSlippage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : INITIAL_ALLOWED_SLIPPAGE;\n  var\n  // in bips\n  recipientAddressOrName = arguments.length > 2 ? arguments[2] : undefined;\n  var _useActiveWeb3React = useActiveWeb3React(),\n    account = _useActiveWeb3React.account,\n    chainId = _useActiveWeb3React.chainId,\n    library = _useActiveWeb3React.library;\n  var _useENS = useENS(recipientAddressOrName),\n    recipientAddress = _useENS.address;\n  var recipient = recipientAddressOrName === null ? account : recipientAddress;\n  var deadline = useTransactionDeadline();\n  return useMemo(function () {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return [];\n    var contract = getRouterContract(chainId, library, account);\n    if (!contract) {\n      return [];\n    }\n    var swapMethods = [];\n    swapMethods.push(Router.swapCallParameters(trade, {\n      feeOnTransfer: false,\n      allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n      recipient: recipient,\n      deadline: deadline.toNumber()\n    }));\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(Router.swapCallParameters(trade, {\n        feeOnTransfer: true,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient: recipient,\n        deadline: deadline.toNumber()\n      }));\n    }\n    return swapMethods.map(function (parameters) {\n      return {\n        parameters: parameters,\n        contract: contract\n      };\n    });\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade]);\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(trade) {\n  var allowedSlippage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : INITIAL_ALLOWED_SLIPPAGE;\n  var\n  // in bips\n  recipientAddressOrName = arguments.length > 2 ? arguments[2] : undefined;\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n    account = _useActiveWeb3React2.account,\n    chainId = _useActiveWeb3React2.chainId,\n    library = _useActiveWeb3React2.library;\n  var swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName);\n  var addTransaction = useTransactionAdder();\n  var _useENS2 = useENS(recipientAddressOrName),\n    recipientAddress = _useENS2.address;\n  var recipient = recipientAddressOrName === null ? account : recipientAddress;\n  return useMemo(function () {\n    if (!trade || !library || !account || !chainId) {\n      return {\n        state: SwapCallbackState.INVALID,\n        callback: null,\n        error: 'Missing dependencies'\n      };\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return {\n          state: SwapCallbackState.INVALID,\n          callback: null,\n          error: 'Invalid recipient'\n        };\n      } else {\n        return {\n          state: SwapCallbackState.LOADING,\n          callback: null,\n          error: null\n        };\n      }\n    }\n    return {\n      state: SwapCallbackState.VALID,\n      callback: function () {\n        var _onSwap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var estimatedCalls, successfulEstimation, errorCalls, _successfulEstimation, contract, _successfulEstimation2, methodName, args, value, gasEstimate;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Promise.all(swapCalls.map(function (call) {\n                  var _contract$estimateGas;\n                  var _call$parameters = call.parameters,\n                    methodName = _call$parameters.methodName,\n                    args = _call$parameters.args,\n                    value = _call$parameters.value,\n                    contract = call.contract;\n                  var options = !value || isZero(value) ? {} : {\n                    value: value\n                  };\n                  return (_contract$estimateGas = contract.estimateGas)[methodName].apply(_contract$estimateGas, _toConsumableArray(args).concat([options])).then(function (gasEstimate) {\n                    return {\n                      call: call,\n                      gasEstimate: gasEstimate\n                    };\n                  }).catch(function (gasError) {\n                    var _contract$callStatic;\n                    console.debug('Gas estimate failed, trying eth_call to extract error', call);\n                    return (_contract$callStatic = contract.callStatic)[methodName].apply(_contract$callStatic, _toConsumableArray(args).concat([options])).then(function (result) {\n                      console.debug('Unexpected successful call after failed estimate gas', call, gasError, result);\n                      return {\n                        call: call,\n                        error: new Error('Unexpected issue with estimating the gas. Please try again.')\n                      };\n                    }).catch(function (callError) {\n                      console.debug('Call threw error', call, callError);\n                      var errorMessage;\n                      switch (callError.reason) {\n                        case 'SwapRouterV2: INSUFFICIENT_OUTPUT_AMOUNT':\n                        case 'SwapRouterV2: EXCESSIVE_INPUT_AMOUNT':\n                          errorMessage = 'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';\n                          break;\n                        default:\n                          errorMessage = \"The transaction cannot succeed due to error: \".concat(callError.reason, \". This is probably an issue with one of the tokens you are swapping.\");\n                      }\n                      return {\n                        call: call,\n                        error: new Error(errorMessage)\n                      };\n                    });\n                  });\n                }));\n              case 2:\n                estimatedCalls = _context.sent;\n                // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n                successfulEstimation = estimatedCalls.find(function (el, ix, list) {\n                  return 'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]);\n                });\n                if (successfulEstimation) {\n                  _context.next = 9;\n                  break;\n                }\n                errorCalls = estimatedCalls.filter(function (call) {\n                  return 'error' in call;\n                });\n                if (!(errorCalls.length > 0)) {\n                  _context.next = 8;\n                  break;\n                }\n                throw errorCalls[errorCalls.length - 1].error;\n              case 8:\n                throw new Error('Unexpected error. Please contact support: none of the calls threw an error');\n              case 9:\n                _successfulEstimation = successfulEstimation.call, contract = _successfulEstimation.contract, _successfulEstimation2 = _successfulEstimation.parameters, methodName = _successfulEstimation2.methodName, args = _successfulEstimation2.args, value = _successfulEstimation2.value, gasEstimate = successfulEstimation.gasEstimate;\n                return _context.abrupt(\"return\", contract[methodName].apply(contract, _toConsumableArray(args).concat([_objectSpread({\n                  gasLimit: calculateGasMargin(gasEstimate)\n                }, value && !isZero(value) ? {\n                  value: value,\n                  from: account\n                } : {\n                  from: account\n                })])).then(function (response) {\n                  var inputSymbol = trade.inputAmount.currency.symbol;\n                  var outputSymbol = trade.outputAmount.currency.symbol;\n                  var inputAmount = trade.inputAmount.toSignificant(3);\n                  var outputAmount = trade.outputAmount.toSignificant(3);\n                  var base = \"Swap \".concat(inputAmount, \" \").concat(inputSymbol, \" for \").concat(outputAmount, \" \").concat(outputSymbol);\n                  var withRecipient = recipient === account ? base : \"\".concat(base, \" to \").concat(recipientAddressOrName && isAddress(recipientAddressOrName) ? shortenAddress(recipientAddressOrName) : recipientAddressOrName);\n                  addTransaction(response, {\n                    summary: withRecipient\n                  });\n                  return response.hash;\n                }).catch(function (error) {\n                  // if the user rejected the tx, pass this along\n                  if ((error === null || error === void 0 ? void 0 : error.code) === 4001) {\n                    throw new Error('Transaction rejected.');\n                  } else {\n                    // otherwise, the error was unexpected and we need to convey that\n                    console.error(\"Swap failed\", error, methodName, args, value);\n                    throw new Error(\"Swap failed: \".concat(error.message));\n                  }\n                }));\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        function onSwap() {\n          return _onSwap.apply(this, arguments);\n        }\n        return onSwap;\n      }(),\n      error: null\n    };\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction]);\n}","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","JSBI","Percent","Router","TradeType","useMemo","BIPS_BASE","INITIAL_ALLOWED_SLIPPAGE","useTransactionAdder","calculateGasMargin","getRouterContract","isAddress","shortenAddress","isZero","useActiveWeb3React","useTransactionDeadline","useENS","SwapCallbackState","useSwapCallArguments","trade","allowedSlippage","arguments","undefined","recipientAddressOrName","_useActiveWeb3React","account","chainId","library","_useENS","recipientAddress","address","recipient","deadline","contract","swapMethods","swapCallParameters","feeOnTransfer","BigInt","toNumber","tradeType","EXACT_INPUT","map","parameters","useSwapCallback","_useActiveWeb3React2","swapCalls","addTransaction","_useENS2","state","INVALID","callback","error","LOADING","VALID","_onSwap","_asyncToGenerator","_callee","estimatedCalls","successfulEstimation","errorCalls","_successfulEstimation","_successfulEstimation2","methodName","args","gasEstimate","_callee$","_context","all","_contract$estimateGas","_call$parameters","options","estimateGas","apply","_toConsumableArray","concat","gasError","_contract$callStatic","console","debug","callStatic","result","callError","errorMessage","reason","find","el","ix","list","filter","_objectSpread","gasLimit","from","response","inputSymbol","inputAmount","currency","symbol","outputSymbol","outputAmount","toSignificant","base","withRecipient","summary","hash","code","message","onSwap"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useSwapCallback.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@uniswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../constants';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport { useActiveWeb3React } from './index';\r\nimport useTransactionDeadline from './useTransactionDeadline';\r\nimport useENS from './useENS';\r\n\r\nexport enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract;\r\n  parameters: SwapParameters;\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall;\r\n  gasEstimate: BigNumber;\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall;\r\n  error: Error;\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall;\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React();\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n  const deadline = useTransactionDeadline();\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return [];\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account);\r\n    if (!contract) {\r\n      return [];\r\n    }\r\n\r\n    const swapMethods = [];\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      })\r\n    );\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        })\r\n      );\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }));\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade]);\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React();\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' };\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' };\r\n      } else {\r\n        return { state: SwapCallbackState.LOADING, callback: null, error: null };\r\n      }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call;\r\n            const options = !value || isZero(value) ? {} : { value };\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                };\r\n              })\r\n              .catch((gasError) => {\r\n                console.debug('Gas estimate failed, trying eth_call to extract error', call);\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.debug('Unexpected successful call after failed estimate gas', call, gasError, result);\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') };\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.debug('Call threw error', call, callError);\r\n                    let errorMessage: string;\r\n                    switch (callError.reason) {\r\n                      case 'SwapRouterV2: INSUFFICIENT_OUTPUT_AMOUNT':\r\n                      case 'SwapRouterV2: EXCESSIVE_INPUT_AMOUNT':\r\n                        errorMessage =\r\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.';\r\n                        break;\r\n                      default:\r\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`;\r\n                    }\r\n                    return { call, error: new Error(errorMessage) };\r\n                  });\r\n              });\r\n          })\r\n        );\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\r\n        );\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call);\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error;\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error');\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation;\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol;\r\n            const outputSymbol = trade.outputAmount.currency.symbol;\r\n            const inputAmount = trade.inputAmount.toSignificant(3);\r\n            const outputAmount = trade.outputAmount.toSignificant(3);\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? shortenAddress(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`;\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            });\r\n\r\n            return response.hash;\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.');\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value);\r\n              throw new Error(`Swap failed: ${error.message}`);\r\n            }\r\n          });\r\n      },\r\n      error: null,\r\n    };\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}