{"ast":null,"code":"import React, { useRef } from 'react';\n\n// vector add\nfunction addV(v1, v2) {\n  return v1.map(function (v, i) {\n    return v + v2[i];\n  });\n} // vector substract\n\nfunction subV(v1, v2) {\n  return v1.map(function (v, i) {\n    return v - v2[i];\n  });\n}\n/**\r\n * Calculates distance\r\n * @param movement the difference between current and initial vectors\r\n * @returns distance\r\n */\n\nfunction calculateDistance(movement) {\n  return Math.hypot.apply(Math, movement);\n}\nfunction calculateAllGeometry(movement, delta) {\n  if (delta === void 0) {\n    delta = movement;\n  }\n  var dl = calculateDistance(delta);\n  var alpha = dl === 0 ? 0 : 1 / dl;\n  var direction = delta.map(function (v) {\n    return alpha * v;\n  });\n  var distance = calculateDistance(movement);\n  return {\n    distance: distance,\n    direction: direction\n  };\n}\n/**\r\n * Calculates all kinematics\r\n * @template T the expected vector type\r\n * @param movement the difference between current and initial vectors\r\n * @param delta the difference between current and previous vectors\r\n * @param delta_t the time difference between current and previous timestamps\r\n * @returns all kinematics\r\n */\n\nfunction calculateAllKinematics(movement, delta, dt) {\n  var dl = calculateDistance(delta);\n  var alpha = dl === 0 ? 0 : 1 / dl;\n  var beta = dt === 0 ? 0 : 1 / dt;\n  var velocity = beta * dl;\n  var velocities = delta.map(function (v) {\n    return beta * v;\n  });\n  var direction = delta.map(function (v) {\n    return alpha * v;\n  });\n  var distance = calculateDistance(movement);\n  return {\n    velocities: velocities,\n    velocity: velocity,\n    distance: distance,\n    direction: direction\n  };\n}\n/**\r\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\r\n * This polyfill function is suggested by Mozilla:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\r\n * @param x target number\r\n */\n\nfunction sign(x) {\n  if (Math.sign) return Math.sign(x);\n  return Number(x > 0) - Number(x < 0) || +x;\n}\nfunction minMax(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n} // Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\n\nfunction rubberband2(distance, constant) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5);\n}\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nfunction rubberbandIfOutOfBounds(position, min, max, constant) {\n  if (constant === void 0) {\n    constant = 0.15;\n  }\n  if (constant === 0) return minMax(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\nfunction noop() {}\n/**\r\n * TODO Beware that only optimized cases are covered in tests =)\r\n * TODO Need to cover general case as well\r\n *\r\n * @param fns\r\n */\n\nfunction chainFns() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  if (fns.length === 0) return noop;\n  if (fns.length === 1) return fns[0];\n  return function () {\n    var result;\n    for (var _iterator = _createForOfIteratorHelperLoose(fns), _step; !(_step = _iterator()).done;) {\n      var fn = _step.value;\n      result = fn.apply(this, arguments) || result;\n    }\n    return result;\n  };\n}\n/**\r\n * Expects a simple value or 2D vector (an array with 2 elements) and\r\n * always returns 2D vector. If simple value is passed, returns a\r\n * vector with this value as both coordinates.\r\n *\r\n * @param value\r\n */\n\nfunction ensureVector(value, fallback) {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected');\n    }\n    value = fallback;\n  }\n  if (Array.isArray(value)) return value;\n  return [value, value];\n}\n/**\r\n * Helper for defining a default value\r\n *\r\n * @param value\r\n * @param fallback\r\n */\n\nfunction assignDefault(value, fallback) {\n  return Object.assign({}, fallback, value || {});\n}\n/**\r\n * Resolves getters (functions) by calling them\r\n * If simple value is given it just passes through\r\n *\r\n * @param v\r\n */\n\nfunction valueFn(v) {\n  if (typeof v === 'function') {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    // @ts-ignore\n    return v.apply(void 0, args);\n  } else {\n    return v;\n  }\n}\nfunction resolveWith(config, resolvers) {\n  if (config === void 0) {\n    config = {};\n  }\n  var result = {};\n  for (var _i = 0, _Object$entries = Object.entries(resolvers); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n      key = _Object$entries$_i[0],\n      resolver = _Object$entries$_i[1];\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config);\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\n\n/**\r\n * Whether the browser supports GestureEvent (ie Safari)\r\n * @returns true if the browser supports gesture event\r\n */\nfunction supportsGestureEvents() {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent;\n  } catch (e) {\n    return false;\n  }\n}\nfunction supportsTouchEvents() {\n  return typeof window !== 'undefined' && 'ontouchstart' in window;\n}\nfunction supportsPointerEvents() {\n  return typeof window !== 'undefined' && 'onpointerdown' in window;\n}\nfunction getEventTouches(event) {\n  if ('pointerId' in event) return null;\n  return event.type === 'touchend' ? event.changedTouches : event.targetTouches;\n}\nfunction getTouchIds(event) {\n  return Array.from(getEventTouches(event)).map(function (t) {\n    return t.identifier;\n  });\n}\nfunction getGenericEventData(event) {\n  var buttons = 'buttons' in event ? event.buttons : 0;\n  var shiftKey = event.shiftKey,\n    altKey = event.altKey,\n    metaKey = event.metaKey,\n    ctrlKey = event.ctrlKey; // TODO check if this might create some overrides?\n\n  return {\n    buttons: buttons,\n    shiftKey: shiftKey,\n    altKey: altKey,\n    metaKey: metaKey,\n    ctrlKey: ctrlKey\n  };\n}\nvar identity = function identity(xy) {\n  return xy;\n};\n/**\r\n * Gets pointer event values.\r\n * @param event\r\n * @returns pointer event values\r\n */\n\nfunction getPointerEventValues(event, transform) {\n  if (transform === void 0) {\n    transform = identity;\n  }\n  var touchEvents = getEventTouches(event);\n  var _ref = touchEvents ? touchEvents[0] : event,\n    clientX = _ref.clientX,\n    clientY = _ref.clientY;\n  return transform([clientX, clientY]);\n}\n/**\r\n * Gets two touches event data\r\n * @param event\r\n * @returns two touches event data\r\n */\n\nfunction getTwoTouchesEventValues(event, pointerIds, transform) {\n  if (transform === void 0) {\n    transform = identity;\n  }\n  var _Array$from$filter = Array.from(event.touches).filter(function (t) {\n      return pointerIds.includes(t.identifier);\n    }),\n    A = _Array$from$filter[0],\n    B = _Array$from$filter[1];\n  if (!A || !B) throw Error(\"The event doesn't have two pointers matching the pointerIds\");\n  var dx = B.clientX - A.clientX;\n  var dy = B.clientY - A.clientY;\n  var cx = (B.clientX + A.clientX) / 2;\n  var cy = (B.clientY + A.clientY) / 2; // const e: any = 'nativeEvent' in event ? event.nativeEvent : event\n\n  var distance = Math.hypot(dx, dy); // FIXME rotation has inconsistant values so we're not using it atm\n  // const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n\n  var angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\n  var values = transform([distance, angle]);\n  var origin = transform([cx, cy]);\n  return {\n    values: values,\n    origin: origin\n  };\n}\n/**\r\n * Gets scroll event values\r\n * @param event\r\n * @returns scroll event values\r\n */\n\nfunction getScrollEventValues(event, transform) {\n  if (transform === void 0) {\n    transform = identity;\n  }\n\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  var _event$currentTarget = event.currentTarget,\n    scrollX = _event$currentTarget.scrollX,\n    scrollY = _event$currentTarget.scrollY,\n    scrollLeft = _event$currentTarget.scrollLeft,\n    scrollTop = _event$currentTarget.scrollTop;\n  return transform([scrollX || scrollLeft || 0, scrollY || scrollTop || 0]);\n} // wheel delta defaults from https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\n/**\r\n * Gets wheel event values.\r\n * @param event\r\n * @returns wheel event values\r\n */\n\nfunction getWheelEventValues(event, transform) {\n  if (transform === void 0) {\n    transform = identity;\n  }\n  var deltaX = event.deltaX,\n    deltaY = event.deltaY,\n    deltaMode = event.deltaMode; // normalize wheel values, especially for Firefox\n\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT;\n    deltaY *= LINE_HEIGHT;\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT;\n    deltaY *= PAGE_HEIGHT;\n  }\n  return transform([deltaX, deltaY]);\n}\n/**\r\n * Gets webkit gesture event values.\r\n * @param event\r\n * @returns webkit gesture event values\r\n */\n\nfunction getWebkitGestureEventValues(event, transform) {\n  if (transform === void 0) {\n    transform = identity;\n  }\n  return transform([event.scale, event.rotation]);\n}\nvar DEFAULT_DRAG_DELAY = 180;\nvar DEFAULT_RUBBERBAND = 0.15;\nvar DEFAULT_SWIPE_VELOCITY = 0.5;\nvar DEFAULT_SWIPE_DISTANCE = 50;\nvar DEFAULT_SWIPE_DURATION = 250;\nvar InternalGestureOptionsNormalizers = {\n  threshold: function threshold(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n    return ensureVector(value);\n  },\n  rubberband: function rubberband(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND);\n      case false:\n        return ensureVector(0);\n      default:\n        return ensureVector(value);\n    }\n  },\n  enabled: function enabled(value) {\n    if (value === void 0) {\n      value = true;\n    }\n    return value;\n  },\n  triggerAllEvents: function triggerAllEvents(value) {\n    if (value === void 0) {\n      value = false;\n    }\n    return value;\n  },\n  initial: function initial(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (typeof value === 'function') return value;\n    return ensureVector(value);\n  },\n  transform: true\n};\nvar InternalCoordinatesOptionsNormalizers = /*#__PURE__*/_extends({}, InternalGestureOptionsNormalizers, {\n  axis: true,\n  lockDirection: function lockDirection(value) {\n    if (value === void 0) {\n      value = false;\n    }\n    return value;\n  },\n  bounds: function bounds(value) {\n    if (value === void 0) {\n      value = {};\n    }\n    if (typeof value === 'function') return function (state) {\n      return InternalCoordinatesOptionsNormalizers.bounds(value(state));\n    };\n    var _value2 = value,\n      _value2$left = _value2.left,\n      left = _value2$left === void 0 ? -Infinity : _value2$left,\n      _value2$right = _value2.right,\n      right = _value2$right === void 0 ? Infinity : _value2$right,\n      _value2$top = _value2.top,\n      top = _value2$top === void 0 ? -Infinity : _value2$top,\n      _value2$bottom = _value2.bottom,\n      bottom = _value2$bottom === void 0 ? Infinity : _value2$bottom;\n    return [[left, right], [top, bottom]];\n  }\n});\nvar isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement;\nvar InternalGenericOptionsNormalizers = {\n  enabled: function enabled(value) {\n    if (value === void 0) {\n      value = true;\n    }\n    return value;\n  },\n  domTarget: true,\n  window: /*#__PURE__*/function (_window) {\n    function window(_x) {\n      return _window.apply(this, arguments);\n    }\n    window.toString = function () {\n      return _window.toString();\n    };\n    return window;\n  }(function (value) {\n    if (value === void 0) {\n      value = isBrowser ? window : undefined;\n    }\n    return value;\n  }),\n  eventOptions: function eventOptions(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      _ref$passive = _ref.passive,\n      passive = _ref$passive === void 0 ? true : _ref$passive,\n      _ref$capture = _ref.capture,\n      capture = _ref$capture === void 0 ? false : _ref$capture;\n    return {\n      passive: passive,\n      capture: capture\n    };\n  },\n  transform: true\n};\nvar InternalDistanceAngleOptionsNormalizers = /*#__PURE__*/_extends({}, InternalGestureOptionsNormalizers, {\n  bounds: function bounds(_value, _key, _ref2) {\n    var _ref2$distanceBounds = _ref2.distanceBounds,\n      distanceBounds = _ref2$distanceBounds === void 0 ? {} : _ref2$distanceBounds,\n      _ref2$angleBounds = _ref2.angleBounds,\n      angleBounds = _ref2$angleBounds === void 0 ? {} : _ref2$angleBounds;\n    var _distanceBounds = function _distanceBounds(state) {\n      var D = assignDefault(valueFn(distanceBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [D.min, D.max];\n    };\n    var _angleBounds = function _angleBounds(state) {\n      var A = assignDefault(valueFn(angleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [A.min, A.max];\n    };\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function') return [_distanceBounds(), _angleBounds()];\n    return function (state) {\n      return [_distanceBounds(state), _angleBounds(state)];\n    };\n  }\n});\nvar InternalDragOptionsNormalizers = /*#__PURE__*/_extends({}, InternalCoordinatesOptionsNormalizers, {\n  useTouch: function useTouch(value) {\n    if (value === void 0) {\n      value = false;\n    }\n    var supportsTouch = supportsTouchEvents();\n    var supportsPointer = supportsPointerEvents();\n    if (value && supportsTouch) return true;\n    if (supportsTouch && !supportsPointer) return true;\n    return false;\n  },\n  experimental_preventWindowScrollY: function experimental_preventWindowScrollY(value) {\n    if (value === void 0) {\n      value = false;\n    }\n    return value;\n  },\n  threshold: function threshold(v, _k, _ref3) {\n    var _ref3$filterTaps = _ref3.filterTaps,\n      filterTaps = _ref3$filterTaps === void 0 ? false : _ref3$filterTaps,\n      _ref3$lockDirection = _ref3.lockDirection,\n      lockDirection = _ref3$lockDirection === void 0 ? false : _ref3$lockDirection,\n      _ref3$axis = _ref3.axis,\n      axis = _ref3$axis === void 0 ? undefined : _ref3$axis;\n    var A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0);\n    this.filterTaps = filterTaps;\n    return A;\n  },\n  swipeVelocity: function swipeVelocity(v) {\n    if (v === void 0) {\n      v = DEFAULT_SWIPE_VELOCITY;\n    }\n    return ensureVector(v);\n  },\n  swipeDistance: function swipeDistance(v) {\n    if (v === void 0) {\n      v = DEFAULT_SWIPE_DISTANCE;\n    }\n    return ensureVector(v);\n  },\n  swipeDuration: function swipeDuration(value) {\n    if (value === void 0) {\n      value = DEFAULT_SWIPE_DURATION;\n    }\n    return value;\n  },\n  delay: function delay(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY;\n      case false:\n        return 0;\n      default:\n        return value;\n    }\n  }\n});\nfunction getInternalGenericOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith(config, InternalGenericOptionsNormalizers);\n}\nfunction getInternalCoordinatesOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n  return resolveWith(config, InternalCoordinatesOptionsNormalizers);\n}\nfunction getInternalDistanceAngleOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n  return resolveWith(config, InternalDistanceAngleOptionsNormalizers);\n}\nfunction getInternalDragOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n  return resolveWith(config, InternalDragOptionsNormalizers);\n}\nfunction _buildMoveConfig(_ref) {\n  var domTarget = _ref.domTarget,\n    eventOptions = _ref.eventOptions,\n    window = _ref.window,\n    enabled = _ref.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.move = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction _buildHoverConfig(_ref2) {\n  var domTarget = _ref2.domTarget,\n    eventOptions = _ref2.eventOptions,\n    window = _ref2.window,\n    enabled = _ref2.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref2, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.hover = _extends({\n    enabled: true\n  }, rest);\n  return opts;\n}\nfunction _buildDragConfig(_ref3) {\n  var domTarget = _ref3.domTarget,\n    eventOptions = _ref3.eventOptions,\n    window = _ref3.window,\n    enabled = _ref3.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref3, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.drag = getInternalDragOptions(rest);\n  return opts;\n}\nfunction _buildPinchConfig(_ref4) {\n  var domTarget = _ref4.domTarget,\n    eventOptions = _ref4.eventOptions,\n    window = _ref4.window,\n    enabled = _ref4.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref4, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.pinch = getInternalDistanceAngleOptions(rest);\n  return opts;\n}\nfunction _buildScrollConfig(_ref5) {\n  var domTarget = _ref5.domTarget,\n    eventOptions = _ref5.eventOptions,\n    window = _ref5.window,\n    enabled = _ref5.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref5, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.scroll = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction _buildWheelConfig(_ref6) {\n  var domTarget = _ref6.domTarget,\n    eventOptions = _ref6.eventOptions,\n    window = _ref6.window,\n    enabled = _ref6.enabled,\n    rest = _objectWithoutPropertiesLoose(_ref6, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.wheel = getInternalCoordinatesOptions(rest);\n  return opts;\n}\nfunction buildComplexConfig(config, actions) {\n  if (config === void 0) {\n    config = {};\n  }\n  if (actions === void 0) {\n    actions = new Set();\n  }\n  var _config = config,\n    drag = _config.drag,\n    wheel = _config.wheel,\n    move = _config.move,\n    scroll = _config.scroll,\n    pinch = _config.pinch,\n    hover = _config.hover,\n    eventOptions = _config.eventOptions,\n    window = _config.window,\n    transform = _config.transform,\n    domTarget = _config.domTarget,\n    enabled = _config.enabled;\n  var mergedConfig = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    transform: transform,\n    window: window,\n    enabled: enabled\n  });\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag);\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel);\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll);\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move);\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch);\n  if (actions.has('onHover')) mergedConfig.hover = _extends({\n    enabled: true\n  }, hover);\n  return mergedConfig;\n}\nfunction getInitial(mixed) {\n  return _extends({\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [[-Infinity, Infinity], [-Infinity, Infinity]],\n    _threshold: [0, 0],\n    _lastEventType: undefined,\n    _dragStarted: false,\n    _dragPreventScroll: false,\n    _dragIsTap: true,\n    _dragDelayed: false,\n    event: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined\n  }, mixed);\n}\nfunction getInitialState() {\n  var shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n    locked: false\n  };\n  var drag = getInitial({\n    _pointerId: undefined,\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0,\n    tap: false,\n    swipe: [0, 0]\n  });\n  var pinch = getInitial({\n    // @ts-expect-error when used _pointerIds we can assert its type will be [number, number]\n    _pointerIds: [],\n    da: [0, 0],\n    vdva: [0, 0],\n    // @ts-expect-error origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0\n  });\n  var wheel = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  var move = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  var scroll = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  return {\n    shared: shared,\n    drag: drag,\n    pinch: pinch,\n    wheel: wheel,\n    move: move,\n    scroll: scroll\n  };\n}\nvar RecognizersMap = /*#__PURE__*/new Map();\nvar identity$1 = function identity(xy) {\n  return xy;\n};\n/**\r\n * @private\r\n * Recognizer abstract class.\r\n */\n\nvar Recognizer = /*#__PURE__*/function () {\n  /**\r\n   * Creates an instance of a gesture recognizer.\r\n   * @param stateKey drag, move, pinch, etc.\r\n   * @param controller the controller attached to the gesture\r\n   * @param [args] the args that should be passed to the gesture handler\r\n   */\n  function Recognizer(controller, args) {\n    var _this = this;\n    if (args === void 0) {\n      args = [];\n    }\n    this.controller = controller;\n    this.args = args;\n    this.debounced = true; // Convenience method to set a timeout for a given gesture\n\n    this.setTimeout = function (callback, ms) {\n      var _window;\n      if (ms === void 0) {\n        ms = 140;\n      }\n      clearTimeout(_this.controller.timeouts[_this.stateKey]);\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      _this.controller.timeouts[_this.stateKey] = (_window = window).setTimeout.apply(_window, [callback, ms].concat(args));\n    }; // Convenience method to clear a timeout for a given gesture\n\n    this.clearTimeout = function () {\n      clearTimeout(_this.controller.timeouts[_this.stateKey]);\n    };\n    /**\r\n     * Fires the gesture handler\r\n     */\n\n    this.fireGestureHandler = function (forceFlag) {\n      if (forceFlag === void 0) {\n        forceFlag = false;\n      }\n\n      /**\r\n       * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\r\n       * clean everything and don't do anything.\r\n       */\n      if (_this.state._blocked) {\n        // we need debounced gestures to end by themselves\n        if (!_this.debounced) {\n          _this.state._active = false;\n          _this.clean();\n        }\n        return null;\n      } // If the gesture has no intentional dimension, don't fire the handler.\n\n      if (!forceFlag && !_this.state.intentional && !_this.config.triggerAllEvents) return null;\n      if (_this.state.intentional) {\n        var prev_active = _this.state.active;\n        var next_active = _this.state._active;\n        _this.state.active = next_active;\n        _this.state.first = next_active && !prev_active;\n        _this.state.last = prev_active && !next_active;\n        _this.controller.state.shared[_this.ingKey] = next_active; // Sets dragging, pinching, etc. to the gesture active state\n      }\n\n      var touches = _this.controller.pointerIds.size || _this.controller.touchIds.size;\n      var down = _this.controller.state.shared.buttons > 0 || touches > 0;\n      var state = _extends({}, _this.controller.state.shared, _this.state, _this.mapStateValues(_this.state), {\n        locked: !!document.pointerLockElement,\n        touches: touches,\n        down: down\n      }); // @ts-expect-error\n\n      var newMemo = _this.handler(state); // Sets memo to the returned value of the handler (unless it's not undefined)\n\n      _this.state.memo = newMemo !== void 0 ? newMemo : _this.state.memo;\n      return state;\n    };\n    this.controller = controller;\n    this.args = args;\n  } // Returns the gesture config\n\n  var _proto = Recognizer.prototype;\n\n  // Convenience method to update the shared state\n  _proto.updateSharedState = function updateSharedState(sharedState) {\n    Object.assign(this.controller.state.shared, sharedState);\n  } // Convenience method to update the gesture state\n  ;\n\n  _proto.updateGestureState = function updateGestureState(gestureState) {\n    Object.assign(this.state, gestureState);\n  }\n  /**\r\n   * Returns state properties depending on the movement and state.\r\n   *\r\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\r\n   * below.\r\n   */;\n\n  _proto.checkIntentionality = function checkIntentionality(_intentional, _movement) {\n    return {\n      _intentional: _intentional,\n      _blocked: false\n    };\n  }\n  /**\r\n   * Returns basic movement properties for the gesture based on the next values and current state.\r\n   */;\n\n  _proto.getMovement = function getMovement(values) {\n    var rubberband = this.config.rubberband;\n    var _this$state = this.state,\n      _bounds = _this$state._bounds,\n      _initial = _this$state._initial,\n      _active = _this$state._active,\n      wasIntentional = _this$state._intentional,\n      lastOffset = _this$state.lastOffset,\n      prevMovement = _this$state.movement,\n      _T = _this$state._threshold;\n    var M = this.getInternalMovement(values, this.state);\n    var i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], _T[0]) : wasIntentional[0];\n    var i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], _T[1]) : wasIntentional[1]; // Get gesture specific state properties based on intentionality and movement.\n\n    var intentionalityCheck = this.checkIntentionality([i0, i1], M);\n    if (intentionalityCheck._blocked) {\n      return _extends({}, intentionalityCheck, {\n        _movement: M,\n        delta: [0, 0]\n      });\n    }\n    var _intentional = intentionalityCheck._intentional;\n    var _movement = M;\n    /**\r\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\r\n     * It is calculated from the actual movement minus the threshold.\r\n     */\n\n    var movement = [_intentional[0] !== false ? M[0] - _intentional[0] : 0, _intentional[1] !== false ? M[1] - _intentional[1] : 0];\n    var offset = addV(movement, lastOffset);\n    /**\r\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\r\n     * and offset can return within their bounds.\r\n     */\n\n    var _rubberband = _active ? rubberband : [0, 0];\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband);\n    return _extends({}, intentionalityCheck, {\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial: _initial,\n      _movement: _movement,\n      movement: movement,\n      values: values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement)\n    });\n  } // Cleans the gesture. Can be overriden by gestures.\n  ;\n\n  _proto.clean = function clean() {\n    this.clearTimeout();\n  };\n  _createClass(Recognizer, [{\n    key: \"config\",\n    get: function get() {\n      return this.controller.config[this.stateKey];\n    } // Is the gesture enabled\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this.controller.config.enabled && this.config.enabled;\n    } // Returns the controller state for a given gesture\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.controller.state[this.stateKey];\n    } // Returns the gesture handler\n  }, {\n    key: \"handler\",\n    get: function get() {\n      return this.controller.handlers[this.stateKey];\n    }\n  }, {\n    key: \"transform\",\n    get: function get() {\n      return this.config.transform || this.controller.config.transform || identity$1;\n    }\n  }]);\n  return Recognizer;\n}(); //--------------------------------------------\n\nfunction getIntentionalDisplacement(movement, threshold) {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold;\n  } else {\n    return false;\n  }\n}\nfunction computeRubberband(bounds, _ref, _ref2) {\n  var Vx = _ref[0],\n    Vy = _ref[1];\n  var Rx = _ref2[0],\n    Ry = _ref2[1];\n  var _bounds$ = bounds[0],\n    X1 = _bounds$[0],\n    X2 = _bounds$[1],\n    _bounds$2 = bounds[1],\n    Y1 = _bounds$2[0],\n    Y2 = _bounds$2[1];\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)];\n}\n/**\r\n * Returns a generic, common payload for all gestures from an event.\r\n */\n\nfunction getGenericPayload(_ref3, event, isStartEvent) {\n  var state = _ref3.state;\n  var timeStamp = event.timeStamp,\n    _lastEventType = event.type;\n  var previous = state.values;\n  var elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime;\n  return {\n    _lastEventType: _lastEventType,\n    event: event,\n    timeStamp: timeStamp,\n    elapsedTime: elapsedTime,\n    previous: previous\n  };\n}\n/**\r\n * Returns the reinitialized start state for the gesture.\r\n * Should be common to all gestures.\r\n */\n\nfunction getStartGestureState(_ref4, values, event, initial) {\n  var state = _ref4.state,\n    config = _ref4.config,\n    stateKey = _ref4.stateKey,\n    args = _ref4.args,\n    transform = _ref4.transform;\n  var offset = state.offset;\n  var startTime = event.timeStamp;\n  var initialFn = config.initial,\n    bounds = config.bounds,\n    threshold = config.threshold; // the _threshold is the difference between a [0,0] offset converted to\n  // its new space coordinates\n\n  var _threshold = subV(transform(threshold), transform([0, 0])).map(Math.abs);\n  var _state = _extends({}, getInitialState()[stateKey], {\n    _active: true,\n    args: args,\n    values: values,\n    initial: initial != null ? initial : values,\n    _threshold: _threshold,\n    offset: offset,\n    lastOffset: offset,\n    startTime: startTime\n  });\n  return _extends({}, _state, {\n    _initial: valueFn(initialFn, _state),\n    _bounds: valueFn(bounds, _state)\n  });\n}\n\n/**\r\n * The controller will keep track of the state for all gestures and also keep\r\n * track of timeouts, and window listeners.\r\n */\n\nvar Controller = function Controller(classes) {\n  var _this = this;\n  this.classes = classes;\n  this.pointerIds = new Set(); // register Pointer Events pointerIds\n\n  this.touchIds = new Set(); // register Touch Events identifiers\n\n  this.supportsTouchEvents = supportsTouchEvents();\n  this.supportsGestureEvents = supportsGestureEvents();\n  this.bind = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var bindings = {};\n    for (var _iterator = _createForOfIteratorHelperLoose(_this.classes), _step; !(_step = _iterator()).done;) {\n      var RecognizerClass = _step.value;\n      new RecognizerClass(_this, args).addBindings(bindings);\n    } // // we also add event bindings for native handlers\n\n    var _loop = function _loop(eventKey) {\n      addBindings(bindings, eventKey, function (event) {\n        return _this.nativeRefs[eventKey](_extends({}, _this.state.shared, {\n          event: event,\n          args: args\n        }));\n      });\n    };\n    for (var eventKey in _this.nativeRefs) {\n      _loop(eventKey);\n    }\n    if (_this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(_this, bindings);\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(_this, bindings);\n    }\n  };\n  this.effect = function () {\n    if (_this.config.domTarget) _this.bind();\n    return _this.clean;\n  };\n  /**\r\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\r\n   */\n\n  this.clean = function () {\n    var domTarget = getDomTargetFromConfig(_this.config);\n    var eventOptions = _this.config.eventOptions;\n    if (domTarget) removeListeners(domTarget, takeAll(_this.domListeners), eventOptions);\n    Object.values(_this.timeouts).forEach(clearTimeout);\n    clearAllWindowListeners(_this);\n  };\n  this.classes = classes;\n  this.state = getInitialState();\n  this.timeouts = {};\n  this.domListeners = [];\n  this.windowListeners = {};\n};\nfunction addEventIds(controller, event) {\n  if ('pointerId' in event) {\n    controller.pointerIds.add(event.pointerId);\n  } else {\n    controller.touchIds = new Set(getTouchIds(event));\n  }\n}\nfunction removeEventIds(controller, event) {\n  if ('pointerId' in event) {\n    controller.pointerIds[\"delete\"](event.pointerId);\n  } else {\n    getTouchIds(event).forEach(function (id) {\n      return controller.touchIds[\"delete\"](id);\n    });\n  }\n}\nfunction clearAllWindowListeners(controller) {\n  var _controller$config = controller.config,\n    el = _controller$config.window,\n    eventOptions = _controller$config.eventOptions,\n    windowListeners = controller.windowListeners;\n  if (!el) return;\n  for (var stateKey in windowListeners) {\n    var handlers = windowListeners[stateKey];\n    removeListeners(el, handlers, eventOptions);\n  }\n  controller.windowListeners = {};\n}\nfunction clearWindowListeners(_ref, stateKey, options) {\n  var config = _ref.config,\n    windowListeners = _ref.windowListeners;\n  if (options === void 0) {\n    options = config.eventOptions;\n  }\n  if (!config.window) return;\n  removeListeners(config.window, windowListeners[stateKey], options);\n  delete windowListeners[stateKey];\n}\nfunction updateWindowListeners(_ref2, stateKey, listeners, options) {\n  var config = _ref2.config,\n    windowListeners = _ref2.windowListeners;\n  if (listeners === void 0) {\n    listeners = [];\n  }\n  if (options === void 0) {\n    options = config.eventOptions;\n  }\n  if (!config.window) return;\n  removeListeners(config.window, windowListeners[stateKey], options);\n  addListeners(config.window, windowListeners[stateKey] = listeners, options);\n}\nfunction updateDomListeners(_ref3, bindings) {\n  var config = _ref3.config,\n    domListeners = _ref3.domListeners;\n  var domTarget = getDomTargetFromConfig(config);\n  if (!domTarget) throw new Error('domTarget must be defined');\n  var eventOptions = config.eventOptions;\n  removeListeners(domTarget, takeAll(domListeners), eventOptions);\n  for (var _i = 0, _Object$entries = Object.entries(bindings); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n      key = _Object$entries$_i[0],\n      fns = _Object$entries$_i[1];\n    var name = key.slice(2).toLowerCase();\n    domListeners.push([name, chainFns.apply(void 0, fns)]);\n  }\n  addListeners(domTarget, domListeners, eventOptions);\n}\nfunction getPropsListener(_ref4, bindings) {\n  var config = _ref4.config;\n  var props = {};\n  var captureString = config.eventOptions.capture ? 'Capture' : '';\n  for (var _i2 = 0, _Object$entries2 = Object.entries(bindings); _i2 < _Object$entries2.length; _i2++) {\n    var _Object$entries2$_i = _Object$entries2[_i2],\n      event = _Object$entries2$_i[0],\n      fns = _Object$entries2$_i[1];\n    var fnsArray = Array.isArray(fns) ? fns : [fns];\n    var key = event + captureString;\n    props[key] = chainFns.apply(void 0, fnsArray);\n  }\n  return props;\n}\nfunction takeAll(array) {\n  if (array === void 0) {\n    array = [];\n  }\n  return array.splice(0, array.length);\n}\nfunction getDomTargetFromConfig(_ref5) {\n  var domTarget = _ref5.domTarget;\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget;\n}\n/**\r\n * bindings is an object which keys match ReactEventHandlerKeys.\r\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\r\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\r\n * that key.\r\n */\n\nfunction addBindings(bindings, name, fn) {\n  if (!bindings[name]) bindings[name] = [];\n  bindings[name].push(fn);\n}\nfunction addListeners(el, listeners, options) {\n  if (listeners === void 0) {\n    listeners = [];\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  for (var _iterator2 = _createForOfIteratorHelperLoose(listeners), _step2; !(_step2 = _iterator2()).done;) {\n    var _step2$value = _step2.value,\n      eventName = _step2$value[0],\n      eventHandler = _step2$value[1];\n    el.addEventListener(eventName, eventHandler, options);\n  }\n}\nfunction removeListeners(el, listeners, options) {\n  if (listeners === void 0) {\n    listeners = [];\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  for (var _iterator3 = _createForOfIteratorHelperLoose(listeners), _step3; !(_step3 = _iterator3()).done;) {\n    var _step3$value = _step3.value,\n      eventName = _step3$value[0],\n      eventHandler = _step3$value[1];\n    el.removeEventListener(eventName, eventHandler, options);\n  }\n}\n\n/* eslint-disable react-hooks/exhaustive-deps */\n/**\r\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\r\n *\r\n * @param handlers\r\n * @param classes\r\n * @param config\r\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\r\n */\n\nfunction useRecognizers(handlers, config, nativeHandlers) {\n  if (nativeHandlers === void 0) {\n    nativeHandlers = {};\n  }\n  var classes = resolveClasses(handlers);\n  var controller = React.useMemo(function () {\n    return new Controller(classes);\n  }, []);\n  controller.config = config;\n  controller.handlers = handlers;\n  controller.nativeRefs = nativeHandlers;\n  React.useEffect(controller.effect, []); // @ts-ignore\n\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget; // @ts-ignore\n\n  return controller.bind;\n}\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn(\"Deprecation notice: When the `domTarget` option is specified, you don't need to write `useEffect(bind, [bind])` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when `domTarget` is provided, therefore your code will break if you try to call `useEffect`.\");\n  }\n}\nfunction resolveClasses(internalHandlers) {\n  var classes = new Set();\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag'));\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel'));\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll'));\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move'));\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch'));\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover'));\n  return classes;\n}\n\n/**\r\n * @private\r\n * Abstract class for coordinates-based gesture recongizers\r\n */\n\nvar CoordinatesRecognizer = /*#__PURE__*/function (_Recognizer) {\n  _inheritsLoose(CoordinatesRecognizer, _Recognizer);\n  function CoordinatesRecognizer() {\n    return _Recognizer.apply(this, arguments) || this;\n  }\n  var _proto = CoordinatesRecognizer.prototype;\n\n  /**\r\n   * Returns the real movement (without taking intentionality into account)\r\n   */\n  _proto.getInternalMovement = function getInternalMovement(values, state) {\n    return subV(values, state.initial);\n  }\n  /**\r\n   * In coordinates-based gesture, this function will detect the first intentional axis,\r\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\r\n   * if the first intentional axis doesn't match the specified axis in config.\r\n   */;\n\n  _proto.checkIntentionality = function checkIntentionality(_intentional, _movement) {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return {\n        _intentional: _intentional,\n        axis: this.state.axis\n      };\n    }\n    var _movement$map = _movement.map(Math.abs),\n      absX = _movement$map[0],\n      absY = _movement$map[1];\n    var axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined);\n    if (!this.config.axis && !this.config.lockDirection) return {\n      _intentional: _intentional,\n      _blocked: false,\n      axis: axis\n    };\n    if (!axis) return {\n      _intentional: [false, false],\n      _blocked: false,\n      axis: axis\n    };\n    if (!!this.config.axis && axis !== this.config.axis) return {\n      _intentional: _intentional,\n      _blocked: true,\n      axis: axis\n    };\n    _intentional[axis === 'x' ? 1 : 0] = false;\n    return {\n      _intentional: _intentional,\n      _blocked: false,\n      axis: axis\n    };\n  };\n  _proto.getKinematics = function getKinematics(values, event) {\n    var state = this.getMovement(values);\n    if (!state._blocked) {\n      var dt = event.timeStamp - this.state.timeStamp;\n      Object.assign(state, calculateAllKinematics(state.movement, state.delta, dt));\n    }\n    return state;\n  };\n  _proto.mapStateValues = function mapStateValues(state) {\n    return {\n      xy: state.values,\n      vxvy: state.velocities\n    };\n  };\n  return CoordinatesRecognizer;\n}(Recognizer);\nvar TAP_DISTANCE_THRESHOLD = 3;\nfunction persistEvent(event) {\n  'persist' in event && typeof event.persist === 'function' && event.persist();\n}\nvar DragRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(DragRecognizer, _CoordinatesRecognize);\n  function DragRecognizer() {\n    var _this;\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'dragging';\n    _this.stateKey = 'drag'; // TODO add back when setPointerCapture is widely wupported\n    // https://caniuse.com/#search=setPointerCapture\n\n    _this.setPointerCapture = function (event) {\n      // don't perform pointere capture when user wants to use touch events or\n      // when a pointerLockElement exists as this would throw an error\n      if (_this.config.useTouch || document.pointerLockElement) return;\n      var target = event.target,\n        pointerId = event.pointerId;\n      if (target && 'setPointerCapture' in target) {\n        // this would work in the DOM but doesn't with react three fiber\n        // target.addEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n        // @ts-expect-error\n        target.setPointerCapture(pointerId);\n      }\n      _this.updateGestureState({\n        _dragTarget: target,\n        _dragPointerId: pointerId\n      });\n    };\n    _this.releasePointerCapture = function () {\n      if (_this.config.useTouch || document.pointerLockElement) return;\n      var _this$state = _this.state,\n        _dragTarget = _this$state._dragTarget,\n        _dragPointerId = _this$state._dragPointerId;\n      if (_dragPointerId && _dragTarget && 'releasePointerCapture' in _dragTarget) {\n        // this would work in the DOM but doesn't with react three fiber\n        // target.removeEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n        if (!('hasPointerCapture' in _dragTarget) || _dragTarget.hasPointerCapture(_dragPointerId)) try {\n          _dragTarget.releasePointerCapture(_dragPointerId);\n        } catch (e) {}\n      }\n    };\n    _this.preventScroll = function (event) {\n      if (_this.state._dragPreventScroll && event.cancelable) {\n        event.preventDefault();\n      }\n    };\n    _this.getEventId = function (event) {\n      if (_this.config.useTouch) return event.changedTouches[0].identifier;\n      return event.pointerId;\n    };\n    _this.isValidEvent = function (event) {\n      // if we were using pointer events only event.isPrimary === 1 would suffice\n      return _this.state._pointerId === _this.getEventId(event);\n    };\n    _this.shouldPreventWindowScrollY = _this.config.experimental_preventWindowScrollY && _this.controller.supportsTouchEvents;\n    _this.setUpWindowScrollDetection = function (event) {\n      persistEvent(event); // we add window listeners that will prevent the scroll when the user has started dragging\n\n      updateWindowListeners(_this.controller, _this.stateKey, [['touchmove', _this.preventScroll], ['touchend', _this.clean.bind(_assertThisInitialized(_this))], ['touchcancel', _this.clean.bind(_assertThisInitialized(_this))]], {\n        passive: false\n      });\n      _this.setTimeout(_this.startDrag.bind(_assertThisInitialized(_this)), 250, event);\n    };\n    _this.setUpDelayedDragTrigger = function (event) {\n      _this.state._dragDelayed = true;\n      persistEvent(event);\n      _this.setTimeout(_this.startDrag.bind(_assertThisInitialized(_this)), _this.config.delay, event);\n    };\n    _this.setStartState = function (event) {\n      var values = getPointerEventValues(event, _this.transform);\n      _this.updateSharedState(getGenericEventData(event));\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        _pointerId: _this.getEventId(event)\n      }));\n      _this.updateGestureState(_this.getMovement(values));\n    };\n    _this.onDragStart = function (event) {\n      addEventIds(_this.controller, event);\n      if (!_this.enabled || _this.state._active) return;\n      _this.setStartState(event);\n      _this.setPointerCapture(event);\n      if (_this.shouldPreventWindowScrollY) _this.setUpWindowScrollDetection(event);else if (_this.config.delay > 0) _this.setUpDelayedDragTrigger(event);else _this.startDrag(event, true); // we pass the values to the startDrag event\n    };\n\n    _this.onDragChange = function (event) {\n      if (\n      // if the gesture was canceled or\n      _this.state.canceled ||\n      // if onDragStart wasn't fired or\n      !_this.state._active ||\n      // if the event pointerId doesn't match the one that initiated the drag\n      !_this.isValidEvent(event) ||\n      // if the event has the same timestamp as the previous event\n      // note that checking type equality is ONLY for tests ¯\\_(ツ)_/¯\n      _this.state._lastEventType === event.type && event.timeStamp === _this.state.timeStamp) return;\n      var values;\n      if (document.pointerLockElement) {\n        var movementX = event.movementX,\n          movementY = event.movementY;\n        values = addV(_this.transform([movementX, movementY]), _this.state.values);\n      } else values = getPointerEventValues(event, _this.transform);\n      var kinematics = _this.getKinematics(values, event); // if startDrag hasn't fired\n\n      if (!_this.state._dragStarted) {\n        // If the gesture isn't active then respond to the event only if\n        // it's been delayed via the `delay` option, in which case start\n        // the gesture immediately.\n        if (_this.state._dragDelayed) {\n          _this.startDrag(event);\n          return;\n        } // if the user wants to prevent vertical window scroll when user starts dragging\n\n        if (_this.shouldPreventWindowScrollY) {\n          if (!_this.state._dragPreventScroll && kinematics.axis) {\n            // if the user is dragging horizontally then we should allow the drag\n            if (kinematics.axis === 'x') {\n              _this.startDrag(event);\n            } else {\n              _this.state._active = false;\n              return;\n            }\n          } else return;\n        } else return;\n      }\n      var genericEventData = getGenericEventData(event);\n      _this.updateSharedState(genericEventData);\n      var genericPayload = getGenericPayload(_assertThisInitialized(_this), event); // This verifies if the drag can be assimilated to a tap by checking\n      // if the real distance of the drag (ie not accounting for the threshold) is\n      // greater than the TAP_DISTANCE_THRESHOLD.\n\n      var realDistance = calculateDistance(kinematics._movement);\n      var _dragIsTap = _this.state._dragIsTap;\n      if (_dragIsTap && realDistance >= TAP_DISTANCE_THRESHOLD) _dragIsTap = false;\n      _this.updateGestureState(_extends({}, genericPayload, kinematics, {\n        _dragIsTap: _dragIsTap\n      }));\n      _this.fireGestureHandler();\n    };\n    _this.onDragEnd = function (event) {\n      removeEventIds(_this.controller, event); // if the event pointerId doesn't match the one that initiated the drag\n      // we don't want to end the drag\n\n      if (!_this.isValidEvent(event)) return;\n      _this.clean(); // if the gesture is no longer active (ie canceled)\n      // don't do anything\n\n      if (!_this.state._active) return;\n      _this.state._active = false;\n      var tap = _this.state._dragIsTap;\n      var _this$state$velocitie = _this.state.velocities,\n        vx = _this$state$velocitie[0],\n        vy = _this$state$velocitie[1];\n      var _this$state$movement = _this.state.movement,\n        mx = _this$state$movement[0],\n        my = _this$state$movement[1];\n      var _this$state$_intentio = _this.state._intentional,\n        ix = _this$state$_intentio[0],\n        iy = _this$state$_intentio[1];\n      var _this$config$swipeVel = _this.config.swipeVelocity,\n        svx = _this$config$swipeVel[0],\n        svy = _this$config$swipeVel[1];\n      var _this$config$swipeDis = _this.config.swipeDistance,\n        sx = _this$config$swipeDis[0],\n        sy = _this$config$swipeDis[1];\n      var sd = _this.config.swipeDuration;\n      var endState = _extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values));\n      var swipe = [0, 0];\n      if (endState.elapsedTime < sd) {\n        if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx);\n        if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy);\n      }\n      _this.updateSharedState({\n        buttons: 0\n      });\n      _this.updateGestureState(_extends({}, endState, {\n        tap: tap,\n        swipe: swipe\n      }));\n      _this.fireGestureHandler(_this.config.filterTaps && tap === true);\n    };\n    _this.clean = function () {\n      _CoordinatesRecognize.prototype.clean.call(_assertThisInitialized(_this));\n      _this.state._dragStarted = false;\n      _this.releasePointerCapture();\n      clearWindowListeners(_this.controller, _this.stateKey);\n    };\n    _this.onCancel = function () {\n      if (_this.state.canceled) return;\n      _this.updateGestureState({\n        canceled: true,\n        _active: false\n      });\n      _this.updateSharedState({\n        buttons: 0\n      });\n      setTimeout(function () {\n        return _this.fireGestureHandler();\n      }, 0);\n    };\n    _this.onClick = function (event) {\n      if (!_this.state._dragIsTap) event.stopPropagation();\n    };\n    return _this;\n  }\n  var _proto = DragRecognizer.prototype;\n  _proto.startDrag = function startDrag(event, onDragIsStart) {\n    if (onDragIsStart === void 0) {\n      onDragIsStart = false;\n    }\n\n    // startDrag can happen after a timeout, so we need to check if the gesture is still active\n    // as the user might have lift up the pointer in between.\n    if (\n    // if the gesture isn't active (probably means)\n    !this.state._active ||\n    // if the drag has already started we should ignore subsequent attempts\n    this.state._dragStarted) return;\n    if (!onDragIsStart) this.setStartState(event);\n    this.updateGestureState({\n      _dragStarted: true,\n      _dragPreventScroll: true,\n      cancel: this.onCancel\n    });\n    this.clearTimeout();\n    this.fireGestureHandler();\n  };\n  _proto.addBindings = function addBindings$1(bindings) {\n    if (this.config.useTouch) {\n      addBindings(bindings, 'onTouchStart', this.onDragStart);\n      addBindings(bindings, 'onTouchMove', this.onDragChange); // this is needed for react-three-fiber\n\n      addBindings(bindings, 'onTouchEnd', this.onDragEnd);\n      addBindings(bindings, 'onTouchCancel', this.onDragEnd);\n    } else {\n      addBindings(bindings, 'onPointerDown', this.onDragStart);\n      addBindings(bindings, 'onPointerMove', this.onDragChange); // this is needed for react-three-fiber\n\n      addBindings(bindings, 'onPointerUp', this.onDragEnd);\n      addBindings(bindings, 'onPointerCancel', this.onDragEnd);\n    }\n    if (this.config.filterTaps) {\n      var handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture';\n      addBindings(bindings, handler, this.onClick);\n    }\n  };\n  return DragRecognizer;\n}(CoordinatesRecognizer);\n\n/**\r\n * Inlined from https://github.com/alexreardon/memoize-one\r\n */\nfunction memoizeOne(resultFn, isEqual) {\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n  function memoized() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n  return memoized;\n}\n\n/**\r\n * Taken from https://github.com/FormidableLabs/react-fast-compare\r\n *\r\n * Dropped comments and ArrayBuffer handling\r\n */\nfunction equal(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n      return true;\n    }\n    var it;\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n      it = a.entries();\n      while (!(i = it.next()).done) {\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      }\n      return true;\n    }\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    }\n    if (typeof Element !== 'undefined' && a instanceof Element) return false;\n    for (i = length; i-- !== 0;) {\n      if (keys[i] === '_owner' && a.$$typeof) continue;\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    return true;\n  } // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n\n  return a !== a && b !== b;\n}\nfunction isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      // eslint-disable-next-line no-console\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    throw error;\n  }\n}\n\n/**\r\n * Drag hook.\r\n *\r\n * @param handler - the function fired every time the drag gesture updates\r\n * @param [config={}] - the config object including generic options and drag options\r\n */\n\nfunction useDrag(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('drag', DragRecognizer);\n  var buildDragConfig = useRef();\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoizeOne(_buildDragConfig, isEqual);\n  }\n  return useRecognizers({\n    drag: handler\n  }, buildDragConfig.current(config));\n}\n\n/**\r\n * @private\r\n * Abstract class for distance/angle-based gesture recongizers\r\n */\n\nvar DistanceAngleRecognizer = /*#__PURE__*/function (_Recognizer) {\n  _inheritsLoose(DistanceAngleRecognizer, _Recognizer);\n  function DistanceAngleRecognizer() {\n    return _Recognizer.apply(this, arguments) || this;\n  }\n  var _proto = DistanceAngleRecognizer.prototype;\n  _proto.getInternalMovement = function getInternalMovement(values, state) {\n    var prev_a = state.values[1]; // not be defined if ctrl+wheel is used for zoom only\n\n    var d = values[0],\n      _values$ = values[1],\n      a = _values$ === void 0 ? prev_a : _values$;\n    var delta_a = a - prev_a;\n    var next_turns = state.turns;\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a);\n    return subV([d, a - 360 * next_turns], state.initial);\n  };\n  _proto.getKinematics = function getKinematics(values, event) {\n    var state = this.getMovement(values);\n    var turns = (values[1] - state._movement[1] - this.state.initial[1]) / 360;\n    var dt = event.timeStamp - this.state.timeStamp;\n    var _calculateAllKinemati = calculateAllKinematics(state.movement, state.delta, dt),\n      kinematics = _objectWithoutPropertiesLoose(_calculateAllKinemati, [\"distance\", \"velocity\"]);\n    return _extends({\n      turns: turns\n    }, state, kinematics);\n  };\n  _proto.mapStateValues = function mapStateValues(state) {\n    return {\n      da: state.values,\n      vdva: state.velocities\n    };\n  };\n  return DistanceAngleRecognizer;\n}(Recognizer);\nvar ZOOM_CONSTANT = 7;\nvar WEBKIT_DISTANCE_SCALE_FACTOR = 260;\nvar PinchRecognizer = /*#__PURE__*/function (_DistanceAngleRecogni) {\n  _inheritsLoose(PinchRecognizer, _DistanceAngleRecogni);\n  function PinchRecognizer() {\n    var _this;\n    _this = _DistanceAngleRecogni.apply(this, arguments) || this;\n    _this.ingKey = 'pinching';\n    _this.stateKey = 'pinch';\n    _this.onPinchStart = function (event) {\n      addEventIds(_this.controller, event);\n      var touchIds = _this.controller.touchIds;\n      if (!_this.enabled) return;\n      if (_this.state._active) {\n        // check that the pointerIds that initiated the gesture\n        // are still enabled. This is useful for when the page\n        // loses track of the pointers (minifying gesture on iPad).\n        if (_this.state._pointerIds.every(function (id) {\n          return touchIds.has(id);\n        })) return; // something was wrong with the pointers but we let it go.\n      } // until we reach two fingers on the target don't react\n\n      if (touchIds.size < 2) return;\n      var _pointerIds = Array.from(touchIds).slice(0, 2);\n      var _getTwoTouchesEventVa = getTwoTouchesEventValues(event, _pointerIds, _this.transform),\n        values = _getTwoTouchesEventVa.values,\n        origin = _getTwoTouchesEventVa.origin;\n      _this.updateSharedState(getGenericEventData(event));\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        _pointerIds: _pointerIds,\n        cancel: _this.onCancel,\n        origin: origin\n      }));\n      _this.updateGestureState(_this.getMovement(values));\n      _this.fireGestureHandler();\n    };\n    _this.onPinchChange = function (event) {\n      var _this$state = _this.state,\n        canceled = _this$state.canceled,\n        _active = _this$state._active;\n      if (canceled || !_active ||\n      // if the event has the same timestamp as the previous event\n      event.timeStamp === _this.state.timeStamp) return;\n      var genericEventData = getGenericEventData(event);\n      _this.updateSharedState(genericEventData);\n      try {\n        var _getTwoTouchesEventVa2 = getTwoTouchesEventValues(event, _this.state._pointerIds, _this.transform),\n          values = _getTwoTouchesEventVa2.values,\n          origin = _getTwoTouchesEventVa2.origin;\n        var kinematics = _this.getKinematics(values, event);\n        _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), kinematics, {\n          origin: origin\n        }));\n        _this.fireGestureHandler();\n      } catch (e) {\n        _this.onPinchEnd(event);\n      }\n    };\n    _this.onPinchEnd = function (event) {\n      removeEventIds(_this.controller, event);\n      var pointerIds = getTouchIds(event); // if none of the lifted pointerIds is in the state pointerIds don't do anything\n\n      if (_this.state._pointerIds.every(function (id) {\n        return !pointerIds.includes(id);\n      })) return;\n      _this.clean();\n      if (!_this.state._active) return;\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values), {\n        _active: false\n      }));\n      _this.fireGestureHandler();\n    };\n    _this.onCancel = function () {\n      if (_this.state.canceled) return;\n      _this.updateGestureState({\n        _active: false,\n        canceled: true\n      });\n      setTimeout(function () {\n        return _this.fireGestureHandler();\n      }, 0);\n    };\n    /**\r\n     * PINCH WITH WEBKIT GESTURES\r\n     */\n\n    _this.onGestureStart = function (event) {\n      if (!_this.enabled) return;\n      event.preventDefault();\n      var values = getWebkitGestureEventValues(event, _this.transform);\n      _this.updateSharedState(getGenericEventData(event));\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        origin: [event.clientX, event.clientY],\n        cancel: _this.onCancel\n      }));\n      _this.updateGestureState(_this.getMovement(values));\n      _this.fireGestureHandler();\n    };\n    _this.onGestureChange = function (event) {\n      var _this$state2 = _this.state,\n        canceled = _this$state2.canceled,\n        _active = _this$state2._active;\n      if (canceled || !_active) return;\n      event.preventDefault();\n      var genericEventData = getGenericEventData(event);\n      _this.updateSharedState(genericEventData); // this normalizes the values of the Safari's WebKitEvent by calculating\n      // the delta and then multiplying it by a constant.\n\n      var values = getWebkitGestureEventValues(event, _this.transform);\n      values[0] = (values[0] - _this.state.event.scale) * WEBKIT_DISTANCE_SCALE_FACTOR + _this.state.values[0];\n      var kinematics = _this.getKinematics(values, event);\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), kinematics, {\n        origin: [event.clientX, event.clientY]\n      }));\n      _this.fireGestureHandler();\n    };\n    _this.onGestureEnd = function (event) {\n      _this.clean();\n      if (!_this.state._active) return;\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values), {\n        _active: false,\n        origin: [event.clientX, event.clientY]\n      }));\n      _this.fireGestureHandler();\n    };\n    /**\r\n     * PINCH WITH WHEEL\r\n     */\n\n    _this.wheelShouldRun = function (event) {\n      return _this.enabled && event.ctrlKey;\n    };\n    _this.getWheelValuesFromEvent = function (event) {\n      var _getWheelEventValues = getWheelEventValues(event, _this.transform),\n        delta_d = _getWheelEventValues[1];\n      var _this$state$values = _this.state.values,\n        prev_d = _this$state$values[0],\n        prev_a = _this$state$values[1]; // ZOOM_CONSTANT is based on Safari trackpad natural zooming\n\n      var _delta_d = -delta_d * ZOOM_CONSTANT; // new distance is the previous state distance added to the delta\n\n      var d = prev_d + _delta_d;\n      var a = prev_a !== void 0 ? prev_a : 0;\n      return {\n        values: [d, a],\n        origin: [event.clientX, event.clientY],\n        delta: [_delta_d, a]\n      };\n    };\n    _this.onWheel = function (event) {\n      if (!_this.wheelShouldRun(event)) return;\n      _this.setTimeout(_this.onWheelEnd);\n      if (!_this.state._active) _this.onWheelStart(event);else _this.onWheelChange(event);\n    };\n    _this.onWheelStart = function (event) {\n      var _this$getWheelValuesF = _this.getWheelValuesFromEvent(event),\n        values = _this$getWheelValuesF.values,\n        delta = _this$getWheelValuesF.delta,\n        origin = _this$getWheelValuesF.origin;\n      if (event.cancelable) event.preventDefault();else if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn('To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.');\n      }\n      _this.updateSharedState(getGenericEventData(event));\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event, _this.state.values), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        offset: values,\n        delta: delta,\n        origin: origin\n      }));\n      _this.updateGestureState(_this.getMovement(values));\n      _this.fireGestureHandler();\n    };\n    _this.onWheelChange = function (event) {\n      if (event.cancelable) event.preventDefault();\n      _this.updateSharedState(getGenericEventData(event));\n      var _this$getWheelValuesF2 = _this.getWheelValuesFromEvent(event),\n        values = _this$getWheelValuesF2.values,\n        origin = _this$getWheelValuesF2.origin,\n        delta = _this$getWheelValuesF2.delta;\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event), {\n        origin: origin,\n        delta: delta\n      }));\n      _this.fireGestureHandler();\n    };\n    _this.onWheelEnd = function () {\n      _this.clean();\n      if (!_this.state._active) return;\n      _this.state._active = false;\n      _this.updateGestureState(_this.getMovement(_this.state.values));\n      _this.fireGestureHandler();\n    };\n    return _this;\n  }\n  var _proto = PinchRecognizer.prototype;\n  _proto.addBindings = function addBindings$1(bindings) {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (this.controller.config.domTarget && !this.controller.supportsTouchEvents && this.controller.supportsGestureEvents) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart);\n      addBindings(bindings, 'onGestureChange', this.onGestureChange);\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd);\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart);\n      addBindings(bindings, 'onTouchMove', this.onPinchChange);\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd);\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd);\n      addBindings(bindings, 'onWheel', this.onWheel);\n    }\n  };\n  return PinchRecognizer;\n}(DistanceAngleRecognizer);\n\n/**\r\n * Pinch hook.\r\n *\r\n * @param handler - the function fired every time the pinch gesture updates\r\n * @param [config={}] - the config object including generic options and pinch options\r\n */\n\nfunction usePinch(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('pinch', PinchRecognizer);\n  var buildPinchConfig = useRef();\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoizeOne(_buildPinchConfig, isEqual);\n  }\n  return useRecognizers({\n    pinch: handler\n  }, buildPinchConfig.current(config));\n}\nvar WheelRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(WheelRecognizer, _CoordinatesRecognize);\n  function WheelRecognizer() {\n    var _this;\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'wheeling';\n    _this.stateKey = 'wheel';\n    _this.debounced = true;\n    _this.handleEvent = function (event) {\n      if (event.ctrlKey && 'pinch' in _this.controller.handlers) return;\n      if (!_this.enabled) return;\n      _this.setTimeout(_this.onEnd);\n      _this.updateSharedState(getGenericEventData(event));\n      var values = addV(getWheelEventValues(event, _this.transform), _this.state.values);\n      if (!_this.state._active) {\n        _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event, _this.state.values), getGenericPayload(_assertThisInitialized(_this), event, true)));\n        var movement = _this.getMovement(values);\n        var geometry = calculateAllGeometry(movement.delta);\n        _this.updateGestureState(movement);\n        _this.updateGestureState(geometry);\n      } else {\n        _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n      }\n      _this.fireGestureHandler();\n    };\n    _this.onEnd = function () {\n      _this.clean();\n      if (!_this.state._active) return;\n      var movement = _this.getMovement(_this.state.values);\n      _this.updateGestureState(movement);\n      _this.updateGestureState({\n        _active: false,\n        velocities: [0, 0],\n        velocity: 0\n      });\n      _this.fireGestureHandler();\n    };\n    return _this;\n  }\n  var _proto = WheelRecognizer.prototype;\n  _proto.addBindings = function addBindings$1(bindings) {\n    addBindings(bindings, 'onWheel', this.handleEvent);\n  };\n  return WheelRecognizer;\n}(CoordinatesRecognizer);\n\n/**\r\n * Wheel hook.\r\n *\r\n * @param handler - the function fired every time the wheel gesture updates\r\n * @param the config object including generic options and wheel options\r\n */\n\nfunction useWheel(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('wheel', WheelRecognizer);\n  var buildWheelConfig = useRef();\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoizeOne(_buildWheelConfig, isEqual);\n  }\n  return useRecognizers({\n    wheel: handler\n  }, buildWheelConfig.current(config));\n}\nvar MoveRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(MoveRecognizer, _CoordinatesRecognize);\n  function MoveRecognizer() {\n    var _this;\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'moving';\n    _this.stateKey = 'move';\n    _this.debounced = true;\n    _this.onMove = function (event) {\n      if (!_this.enabled) return;\n      _this.setTimeout(_this.onMoveEnd);\n      if (!_this.state._active) _this.onMoveStart(event);else _this.onMoveChange(event);\n    };\n    _this.onMoveStart = function (event) {\n      _this.updateSharedState(getGenericEventData(event));\n      var values = getPointerEventValues(event, _this.transform);\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true)));\n      _this.updateGestureState(_this.getMovement(values));\n      _this.fireGestureHandler();\n    };\n    _this.onMoveChange = function (event) {\n      _this.updateSharedState(getGenericEventData(event));\n      var values = getPointerEventValues(event, _this.transform);\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n      _this.fireGestureHandler();\n    };\n    _this.onMoveEnd = function () {\n      _this.clean();\n      if (!_this.state._active) return;\n      var values = _this.state.values;\n      _this.updateGestureState(_this.getMovement(values));\n      _this.updateGestureState({\n        velocities: [0, 0],\n        velocity: 0,\n        _active: false\n      });\n      _this.fireGestureHandler();\n    };\n    _this.hoverTransform = function () {\n      return _this.controller.config.hover.transform || _this.controller.config.transform;\n    };\n    _this.onPointerEnter = function (event) {\n      _this.controller.state.shared.hovering = true;\n      if (!_this.controller.config.enabled) return;\n      if (_this.controller.config.hover.enabled) {\n        var values = getPointerEventValues(event, _this.hoverTransform());\n        var state = _extends({}, _this.controller.state.shared, _this.state, getGenericPayload(_assertThisInitialized(_this), event, true), {\n          args: _this.args,\n          values: values,\n          active: true,\n          hovering: true\n        });\n        _this.controller.handlers.hover(_extends({}, state, _this.mapStateValues(state)));\n      }\n      if ('move' in _this.controller.handlers) _this.onMoveStart(event);\n    };\n    _this.onPointerLeave = function (event) {\n      _this.controller.state.shared.hovering = false;\n      if ('move' in _this.controller.handlers) _this.onMoveEnd();\n      if (!_this.controller.config.hover.enabled) return;\n      var values = getPointerEventValues(event, _this.hoverTransform());\n      var state = _extends({}, _this.controller.state.shared, _this.state, getGenericPayload(_assertThisInitialized(_this), event), {\n        args: _this.args,\n        values: values,\n        active: false\n      });\n      _this.controller.handlers.hover(_extends({}, state, _this.mapStateValues(state)));\n    };\n    return _this;\n  }\n  var _proto = MoveRecognizer.prototype;\n  _proto.addBindings = function addBindings$1(bindings) {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove);\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter);\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave);\n    }\n  };\n  return MoveRecognizer;\n}(CoordinatesRecognizer);\n\n/**\r\n * Move hook.\r\n *\r\n * @param handler - the function fired every time the move gesture updates\r\n * @param [config={}] - the config object including generic options and move options\r\n */\n\nfunction useMove(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('move', MoveRecognizer);\n  var buildMoveConfig = useRef();\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoizeOne(_buildMoveConfig, isEqual);\n  }\n  return useRecognizers({\n    move: handler\n  }, buildMoveConfig.current(config));\n}\n\n/**\r\n * Hover hook.\r\n *\r\n * @param handler - the function fired every time the hover gesture updates\r\n * @param [config={}] - the config object including generic options and hover options\r\n */\n\nfunction useHover(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('hover', MoveRecognizer);\n  var buildHoverConfig = useRef();\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoizeOne(_buildHoverConfig, isEqual);\n  }\n  return useRecognizers({\n    hover: handler\n  }, buildHoverConfig.current(config));\n}\nvar ScrollRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(ScrollRecognizer, _CoordinatesRecognize);\n  function ScrollRecognizer() {\n    var _this;\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'scrolling';\n    _this.stateKey = 'scroll';\n    _this.debounced = true;\n    _this.handleEvent = function (event) {\n      if (!_this.enabled) return;\n      _this.clearTimeout();\n      _this.setTimeout(_this.onEnd);\n      var values = getScrollEventValues(event, _this.transform);\n      _this.updateSharedState(getGenericEventData(event));\n      if (!_this.state._active) {\n        _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event, _this.state.values), getGenericPayload(_assertThisInitialized(_this), event, true)));\n        var movementDetection = _this.getMovement(values);\n        var geometry = calculateAllGeometry(movementDetection.delta);\n        _this.updateGestureState(movementDetection);\n        _this.updateGestureState(geometry);\n      } else {\n        _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n      }\n      _this.fireGestureHandler();\n    };\n    _this.onEnd = function () {\n      _this.clean();\n      if (!_this.state._active) return;\n      _this.updateGestureState(_extends({}, _this.getMovement(_this.state.values), {\n        _active: false,\n        velocities: [0, 0],\n        velocity: 0\n      }));\n      _this.fireGestureHandler();\n    };\n    return _this;\n  }\n  var _proto = ScrollRecognizer.prototype;\n  _proto.addBindings = function addBindings$1(bindings) {\n    addBindings(bindings, 'onScroll', this.handleEvent);\n  };\n  return ScrollRecognizer;\n}(CoordinatesRecognizer);\n\n/**\r\n * Scroll hook.\r\n *\r\n * @param handler - the function fired every time the scroll gesture updates\r\n * @param [config={}] - the config object including generic options and scroll options\r\n */\n\nfunction useScroll(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  RecognizersMap.set('scroll', ScrollRecognizer);\n  var buildScrollConfig = useRef();\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoizeOne(_buildScrollConfig, isEqual);\n  }\n  return useRecognizers({\n    scroll: handler\n  }, buildScrollConfig.current(config));\n}\nvar RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(handlers) {\n  var _native = {};\n  var handle = {};\n  var actions = new Set();\n  for (var key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handle[key] = handlers[key];\n    } else {\n      _native[key] = handlers[key];\n    }\n  }\n  return [handle, _native, actions];\n}\n/**\r\n * @public\r\n *\r\n * The most complete gesture hook, allowing support for multiple gestures.\r\n *\r\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\r\n * @param {UseGestureConfig} [config={}] - the full config object\r\n * @returns {(...args: any[]) => HookReturnType<Config>}\r\n */\n\nfunction useGesture(_handlers, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  var _sortHandlers = sortHandlers(_handlers),\n    handlers = _sortHandlers[0],\n    nativeHandlers = _sortHandlers[1],\n    actions = _sortHandlers[2];\n  RecognizersMap.set('drag', DragRecognizer);\n  RecognizersMap.set('hover', MoveRecognizer);\n  RecognizersMap.set('move', MoveRecognizer);\n  RecognizersMap.set('pinch', PinchRecognizer);\n  RecognizersMap.set('scroll', ScrollRecognizer);\n  RecognizersMap.set('wheel', WheelRecognizer);\n  var mergedConfig = buildComplexConfig(config, actions);\n  var internalHandlers = {};\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag');\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel');\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll');\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove');\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch');\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover;\n  return useRecognizers(internalHandlers, mergedConfig, nativeHandlers);\n}\nfunction includeStartEndHandlers(handlers, handlerKey) {\n  var startKey = handlerKey + 'Start';\n  var endKey = handlerKey + 'End';\n  var fn = function fn(state) {\n    var memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  return fn;\n}\nexport { addV, rubberbandIfOutOfBounds, subV, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel };","map":{"version":3,"names":["addV","v1","v2","map","v","i","subV","calculateDistance","movement","Math","hypot","apply","calculateAllGeometry","delta","dl","alpha","direction","distance","calculateAllKinematics","dt","beta","velocity","velocities","sign","x","Number","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","abs","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","Array","_len","_key","arguments","length","result","_iterator","_createForOfIteratorHelperLoose","_step","done","fn","ensureVector","fallback","undefined","Error","isArray","assignDefault","Object","assign","valueFn","_len2","args","_key2","resolveWith","config","resolvers","_i","_Object$entries","entries","_Object$entries$_i","key","resolver","call","supportsGestureEvents","GestureEvent","e","supportsTouchEvents","window","supportsPointerEvents","getEventTouches","event","type","changedTouches","targetTouches","getTouchIds","from","t","identifier","getGenericEventData","buttons","shiftKey","altKey","metaKey","ctrlKey","identity","xy","getPointerEventValues","transform","touchEvents","clientX","_ref","clientY","getTwoTouchesEventValues","pointerIds","touches","filter","includes","A","_Array$from$filter","B","dx","dy","cx","cy","angle","atan2","PI","values","origin","getScrollEventValues","currentTarget","scrollX","_event$currentTarget","scrollY","scrollLeft","scrollTop","LINE_HEIGHT","PAGE_HEIGHT","getWheelEventValues","deltaX","deltaY","deltaMode","getWebkitGestureEventValues","scale","rotation","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","DEFAULT_SWIPE_DURATION","InternalGestureOptionsNormalizers","threshold","enabled","triggerAllEvents","initial","InternalCoordinatesOptionsNormalizers","_extends","axis","lockDirection","bounds","state","left","_value2$left","right","_value2$right","top","_value2$top","bottom","_value2$bottom","isBrowser","document","createElement","InternalGenericOptionsNormalizers","domTarget","_window","_x","toString","eventOptions","_temp","passive","_ref$passive","capture","_ref$capture","InternalDistanceAngleOptionsNormalizers","_value","_ref2","distanceBounds","_ref2$distanceBounds","angleBounds","_ref2$angleBounds","_distanceBounds","D","_angleBounds","InternalDragOptionsNormalizers","useTouch","supportsTouch","supportsPointer","experimental_preventWindowScrollY","_k","_ref3","filterTaps","_ref3$filterTaps","_ref3$lockDirection","_ref3$axis","swipeVelocity","swipeDistance","swipeDuration","delay","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","_buildMoveConfig","rest","_objectWithoutPropertiesLoose","opts","move","_buildHoverConfig","hover","_buildDragConfig","drag","_buildPinchConfig","_ref4","pinch","_buildScrollConfig","_ref5","scroll","_buildWheelConfig","_ref6","wheel","buildComplexConfig","actions","Set","_config","mergedConfig","has","getInitial","mixed","_active","_blocked","_intentional","_movement","_initial","_bounds","_threshold","_lastEventType","_dragStarted","_dragPreventScroll","_dragIsTap","_dragDelayed","intentional","offset","lastOffset","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","getInitialState","shared","hovering","scrolling","wheeling","dragging","moving","pinching","down","locked","_pointerId","vxvy","tap","swipe","_pointerIds","da","vdva","turns","RecognizersMap","Map","identity$1","Recognizer","controller","debounced","setTimeout","callback","ms","clearTimeout","_this","timeouts","stateKey","concat","fireGestureHandler","forceFlag","clean","prev_active","next_active","ingKey","size","touchIds","mapStateValues","pointerLockElement","newMemo","handler","updateSharedState","sharedState","updateGestureState","gestureState","checkIntentionality","getMovement","_this$state","wasIntentional","prevMovement","_T","M","getInternalMovement","i0","getIntentionalDisplacement","i1","intentionalityCheck","_rubberband","computeRubberband","handlers","Vx","Vy","Rx","Ry","X1","_bounds$","X2","Y1","_bounds$2","Y2","getGenericPayload","isStartEvent","getStartGestureState","initialFn","_state","Controller","classes","bind","bindings","RecognizerClass","addBindings","eventKey","nativeRefs","_loop","updateDomListeners","getPropsListener","effect","getDomTargetFromConfig","removeListeners","takeAll","domListeners","forEach","clearAllWindowListeners","windowListeners","addEventIds","add","pointerId","removeEventIds","id","el","_controller$config","clearWindowListeners","options","updateWindowListeners","listeners","addListeners","name","slice","toLowerCase","push","props","captureString","_i2","_Object$entries2","_Object$entries2$_i","fnsArray","array","splice","current","_iterator2","_step2","_step2$value","eventName","eventHandler","addEventListener","_iterator3","_step3","_step3$value","removeEventListener","useRecognizers","nativeHandlers","resolveClasses","React","useMemo","useEffect","deprecationNoticeForDomTarget","process","env","NODE_ENV","console","warn","internalHandlers","get","CoordinatesRecognizer","_Recognizer","absX","_movement$map","absY","getKinematics","TAP_DISTANCE_THRESHOLD","persistEvent","persist","DragRecognizer","_CoordinatesRecognize","_inheritsLoose","setPointerCapture","target","_dragTarget","_dragPointerId","releasePointerCapture","hasPointerCapture","preventScroll","cancelable","preventDefault","getEventId","isValidEvent","shouldPreventWindowScrollY","setUpWindowScrollDetection","_assertThisInitialized","startDrag","setUpDelayedDragTrigger","setStartState","onDragStart","onDragChange","movementX","movementY","kinematics","genericEventData","genericPayload","realDistance","onDragEnd","vx","_this$state$velocitie","vy","mx","_this$state$movement","my","ix","_this$state$_intentio","iy","svx","_this$config$swipeVel","svy","sx","_this$config$swipeDis","sy","sd","endState","prototype","onCancel","onClick","stopPropagation","_proto","onDragIsStart","addBindings$1","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","equal","a","b","constructor","keys","it","next","RegExp","source","flags","valueOf","hasOwnProperty","Element","$$typeof","error","message","match","useDrag","set","buildDragConfig","useRef","DistanceAngleRecognizer","prev_a","d","_values$","delta_a","next_turns","_calculateAllKinemati","ZOOM_CONSTANT","WEBKIT_DISTANCE_SCALE_FACTOR","PinchRecognizer","_DistanceAngleRecogni","onPinchStart","every","_getTwoTouchesEventVa","onPinchChange","_getTwoTouchesEventVa2","onPinchEnd","onGestureStart","onGestureChange","_this$state2","onGestureEnd","wheelShouldRun","getWheelValuesFromEvent","delta_d","_getWheelEventValues","prev_d","_this$state$values","_delta_d","onWheel","onWheelEnd","onWheelStart","onWheelChange","_this$getWheelValuesF","_this$getWheelValuesF2","usePinch","buildPinchConfig","WheelRecognizer","handleEvent","onEnd","geometry","useWheel","buildWheelConfig","MoveRecognizer","onMove","onMoveEnd","onMoveStart","onMoveChange","hoverTransform","onPointerEnter","onPointerLeave","useMove","buildMoveConfig","useHover","buildHoverConfig","ScrollRecognizer","movementDetection","useScroll","buildScrollConfig","RE_NOT_NATIVE","sortHandlers","_native","handle","test","lastMatch","useGesture","_handlers","_sortHandlers","includeStartEndHandlers","onHover","handlerKey","startKey","endKey"],"sources":["../src/utils/math.ts","../src/utils/rubberband.ts","../src/utils/utils.ts","../src/utils/resolveOptionsWith.ts","../src/utils/event.ts","../src/utils/config.ts","../src/hooks/buildConfig.ts","../src/utils/state.ts","../src/recognizers/Recognizer.ts","../src/Controller.ts","../src/hooks/useRecognizers.ts","../src/recognizers/CoordinatesRecognizer.ts","../src/recognizers/DragRecognizer.ts","../src/utils/memoize-one.ts","../src/utils/react-fast-compare.ts","../src/hooks/useDrag.ts","../src/recognizers/DistanceAngleRecognizer.ts","../src/recognizers/PinchRecognizer.ts","../src/hooks/usePinch.ts","../src/recognizers/WheelRecognizer.ts","../src/hooks/useWheel.ts","../src/recognizers/MoveRecognizer.ts","../src/hooks/useMove.ts","../src/hooks/useHover.ts","../src/recognizers/ScrollRecognizer.ts","../src/hooks/useScroll.ts","../src/hooks/useGesture.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\ninterface Kinematics {\n  velocities: number[]\n  velocity: number\n  distance: number\n  direction: number[]\n}\n\nexport function calculateAllGeometry<T extends number[]>(movement: T, delta: T = movement) {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n\n  const direction = delta.map(v => alpha * v) as T\n  const distance = calculateDistance(movement)\n\n  return { distance, direction }\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, dt: number): Kinematics {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n  const beta = dt === 0 ? 0 : 1 / dt\n\n  const velocity = beta * dl\n  const velocities = delta.map(v => beta * v)\n  const direction = delta.map(v => alpha * v)\n  const distance = calculateDistance(movement)\n\n  return { velocities, velocity, distance, direction }\n}\n\n/**\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\n * This polyfill function is suggested by Mozilla:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n * @param x target number\n */\nexport function sign(x: number) {\n  if (Math.sign) return Math.sign(x)\n  return Number(x > 0) - Number(x < 0) || +x\n}\n","function minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n  if (position < min) return -rubberband(min - position, max - min, constant) + min\n  if (position > max) return +rubberband(position - max, max - min, constant) + max\n  return position\n}\n","export function noop() {}\n\n/**\n * TODO Beware that only optimized cases are covered in tests =)\n * TODO Need to cover general case as well\n *\n * @param fns\n */\nexport function chainFns(...fns: Function[]): Function {\n  if (fns.length === 0) return noop\n  if (fns.length === 1) return fns[0]\n\n  return function (this: any) {\n    var result\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result\n    }\n    return result\n  }\n}\n\n/**\n * Expects a simple value or 2D vector (an array with 2 elements) and\n * always returns 2D vector. If simple value is passed, returns a\n * vector with this value as both coordinates.\n *\n * @param value\n */\nexport function ensureVector<T>(value: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected')\n    }\n    value = fallback\n  }\n\n  if (Array.isArray(value)) return value\n  return [value, value]\n}\n\n/**\n * Helper for defining a default value\n *\n * @param value\n * @param fallback\n */\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {})\n}\n\n/**\n * Resolves getters (functions) by calling them\n * If simple value is given it just passes through\n *\n * @param v\n */\nexport function valueFn<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args)\n  } else {\n    return v\n  }\n}\n","export type Resolver = (x: any, key: string, obj: object) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config)\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n\n  return result\n}\n","import { Vector2, WebKitGestureEvent, DomEvents } from '../types'\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport function supportsTouchEvents(): boolean {\n  return typeof window !== 'undefined' && 'ontouchstart' in window\n}\n\nexport function supportsPointerEvents(): boolean {\n  return typeof window !== 'undefined' && 'onpointerdown' in window\n}\n\nfunction getEventTouches(event: PointerEvent | React.PointerEvent | TouchEvent | React.TouchEvent) {\n  if ('pointerId' in event) return null\n  return event.type === 'touchend' ? event.changedTouches : event.targetTouches\n}\n\nexport function getTouchIds(event: TouchEvent | React.TouchEvent): number[] {\n  return Array.from(getEventTouches(event)!).map(t => t.identifier)\n}\n\nexport function getGenericEventData(event: DomEvents) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const { shiftKey, altKey, metaKey, ctrlKey } = event as any // TODO check if this might create some overrides?\n  return { buttons, shiftKey, altKey, metaKey, ctrlKey }\n}\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(\n  event: TouchEvent | React.TouchEvent | React.PointerEvent | PointerEvent,\n  transform = identity\n): Vector2 {\n  const touchEvents = getEventTouches(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : (event as React.PointerEvent)\n  return transform([clientX, clientY])\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventValues(\n  event: React.TouchEvent | TouchEvent,\n  pointerIds: [number, number],\n  transform = identity\n) {\n  const [A, B] = Array.from(event.touches).filter(t => pointerIds.includes(t.identifier))\n\n  if (!A || !B) throw Error(`The event doesn't have two pointers matching the pointerIds`)\n\n  const dx = B.clientX - A.clientX\n  const dy = B.clientY - A.clientY\n  const cx = (B.clientX + A.clientX) / 2\n  const cy = (B.clientY + A.clientY) / 2\n\n  // const e: any = 'nativeEvent' in event ? event.nativeEvent : event\n\n  const distance = Math.hypot(dx, dy)\n  // FIXME rotation has inconsistant values so we're not using it atm\n  // const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI\n  const values: Vector2 = transform([distance, angle])\n  const origin: Vector2 = transform([cx, cy])\n\n  return { values, origin }\n}\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: React.UIEvent | UIEvent, transform = identity): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return transform([scrollX || scrollLeft || 0, scrollY || scrollTop || 0])\n}\n\n// wheel delta defaults from https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\nconst LINE_HEIGHT = 40\nconst PAGE_HEIGHT = 800\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: React.WheelEvent | WheelEvent, transform = identity): Vector2 {\n  let { deltaX, deltaY, deltaMode } = event\n  // normalize wheel values, especially for Firefox\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT\n    deltaY *= LINE_HEIGHT\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT\n    deltaY *= PAGE_HEIGHT\n  }\n  return transform([deltaX, deltaY])\n}\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent, transform = identity): Vector2 {\n  return transform([event.scale, event.rotation])\n}\n","import { ensureVector, assignDefault, valueFn } from './utils'\nimport { resolveWith } from './resolveOptionsWith'\n\nimport {\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  GestureOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n  Vector2,\n  Bounds,\n  StateKey,\n  State,\n  CoordinatesKey,\n  DistanceAngleKey,\n} from '../types'\nimport { supportsTouchEvents, supportsPointerEvents } from './event'\n\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_RUBBERBAND = 0.15\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 50\nexport const DEFAULT_SWIPE_DURATION = 250\n\nconst InternalGestureOptionsNormalizers = {\n  threshold(value: number | Vector2 = 0) {\n    return ensureVector(value)\n  },\n\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND)\n      case false:\n        return ensureVector(0)\n      default:\n        return ensureVector(value)\n    }\n  },\n\n  enabled(value = true) {\n    return value\n  },\n\n  triggerAllEvents(value = false) {\n    return value\n  },\n\n  initial(value = 0) {\n    if (typeof value === 'function') return value\n    return ensureVector(value)\n  },\n\n  transform: true,\n}\n\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value\n  },\n  bounds(value: Bounds | ((state?: State) => Bounds) = {}) {\n    if (typeof value === 'function')\n      return (state?: State) => InternalCoordinatesOptionsNormalizers.bounds(value(state))\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value\n\n    return [\n      [left, right],\n      [top, bottom],\n    ]\n  },\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n  transform: true,\n}\n\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n\n  bounds(_value: undefined, _key: string, { distanceBounds = {}, angleBounds = {} }) {\n    const _distanceBounds = (state?: State) => {\n      const D = assignDefault(valueFn(distanceBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(valueFn(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function')\n      return [_distanceBounds(), _angleBounds()]\n\n    return (state?: State) => [_distanceBounds(state), _angleBounds(state)]\n  },\n}\n\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n\n  useTouch(value = false) {\n    const supportsTouch = supportsTouchEvents()\n    const supportsPointer = supportsPointerEvents()\n    if (value && supportsTouch) return true\n    if (supportsTouch && !supportsPointer) return true\n    return false\n  },\n  experimental_preventWindowScrollY(value = false) {\n    return value\n  },\n  threshold(\n    this: InternalDragOptions,\n    v: number | Vector2 | undefined,\n    _k: string,\n    { filterTaps = false, lockDirection = false, axis = undefined }\n  ) {\n    const A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0) as Vector2\n    this.filterTaps = filterTaps\n    return A\n  },\n\n  swipeVelocity(v: number | Vector2 = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v)\n  },\n  swipeDistance(v: number | Vector2 = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v)\n  },\n  swipeDuration(value = DEFAULT_SWIPE_DURATION) {\n    return value\n  },\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n}\n\nexport function getInternalGenericOptions(config: GenericOptions = {}): InternalGenericOptions {\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith<GenericOptions, InternalGenericOptions>(config, InternalGenericOptionsNormalizers)\n}\n\nexport function getInternalGestureOptions<T extends StateKey>(\n  config: GestureOptions<T> = {}\n): InternalGestureOptions<T> {\n  return resolveWith<GestureOptions<T>, InternalGestureOptions<T>>(config, InternalGestureOptionsNormalizers)\n}\n\nexport function getInternalCoordinatesOptions<T extends CoordinatesKey>(\n  config: CoordinatesConfig<T> = {}\n): InternalCoordinatesOptions<T> {\n  return resolveWith<CoordinatesConfig<T>, InternalCoordinatesOptions<T>>(config, InternalCoordinatesOptionsNormalizers)\n}\n\nexport function getInternalDistanceAngleOptions<T extends DistanceAngleKey>(\n  config: DistanceAngleConfig<T> = {}\n): InternalDistanceAngleOptions<T> {\n  return resolveWith<DistanceAngleConfig<T>, InternalDistanceAngleOptions<T>>(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  )\n}\n\nexport function getInternalDragOptions(config: DragConfig = {}): InternalDragOptions {\n  return resolveWith<DragConfig, InternalDragOptions>(config, InternalDragOptionsNormalizers)\n}\n","import {\n  InternalConfig,\n  UseMoveConfig,\n  UseHoverConfig,\n  UseDragConfig,\n  UsePinchConfig,\n  UseScrollConfig,\n  UseWheelConfig,\n} from '../types'\n\nimport {\n  getInternalGenericOptions,\n  getInternalCoordinatesOptions,\n  getInternalDragOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\n\nimport { UseGestureConfig } from '../types'\n\nexport function _buildMoveConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseMoveConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.move = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildHoverConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseHoverConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.hover = { enabled: true, ...rest }\n  return opts\n}\n\nexport function _buildDragConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseDragConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.drag = getInternalDragOptions(rest)\n  return opts\n}\n\nexport function _buildPinchConfig({ domTarget, eventOptions, window, enabled, ...rest }: UsePinchConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.pinch = getInternalDistanceAngleOptions(rest)\n  return opts\n}\n\nexport function _buildScrollConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseScrollConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.scroll = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildWheelConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseWheelConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.wheel = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function buildComplexConfig(config: UseGestureConfig = {}, actions: Set<string> = new Set()) {\n  const { drag, wheel, move, scroll, pinch, hover, eventOptions, window, transform, domTarget, enabled } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    transform,\n    window,\n    enabled,\n  })\n\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag)\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move)\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  if (actions.has('onHover')) mergedConfig.hover = { enabled: true, ...hover }\n\n  return mergedConfig\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2, DragState, PinchState } from '../types'\n\nfunction getInitial<T>(mixed: T): T & CommonGestureState {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity],\n    ],\n    _threshold: [0, 0],\n    _lastEventType: undefined,\n    _dragStarted: false,\n    _dragPreventScroll: false,\n    _dragIsTap: true,\n    _dragDelayed: false,\n    event: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n    ...mixed,\n  }\n}\n\nexport function getInitialState(): State {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n    locked: false,\n  }\n\n  const drag = getInitial<DragState & Coordinates>({\n    _pointerId: undefined,\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n    tap: false,\n    swipe: [0, 0],\n  })\n\n  const pinch = getInitial<DistanceAngle & PinchState>({\n    // @ts-expect-error when used _pointerIds we can assert its type will be [number, number]\n    _pointerIds: [],\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    // @ts-expect-error origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0,\n  })\n\n  const wheel = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const move = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const scroll = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  return { shared, drag, pinch, wheel, move, scroll }\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  IngKey,\n  InternalConfig,\n  GestureKey,\n  GestureState,\n  EventTypes,\n  PartialGestureState,\n  Vector2,\n  FullGestureState,\n  RecognizerClass,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { rubberbandIfOutOfBounds } from '../utils/rubberband'\nimport { subV, addV, sign } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\nexport const RecognizersMap = new Map<GestureKey, RecognizerClass>()\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * @private\n * Recognizer abstract class.\n */\nexport default abstract class Recognizer<T extends StateKey = StateKey> {\n  abstract readonly ingKey: IngKey // dragging, scrolling, etc.\n  protected debounced: Boolean = true\n  abstract readonly stateKey: T\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(readonly controller: Controller, readonly args: any[] = []) {\n    this.controller = controller\n    this.args = args\n  }\n\n  // Returns the gesture config\n  get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  get transform() {\n    return this.config.transform || this.controller.config.transform || identity\n  }\n\n  // Convenience method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Convenience method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  protected abstract getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T>\n\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n\n  protected abstract mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'>\n\n  public abstract addBindings(bindings: any): void\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2): PartialGestureState<T> {\n    const { rubberband } = this.config\n\n    const {\n      _bounds,\n      _initial,\n      _active,\n      _intentional: wasIntentional,\n      lastOffset,\n      movement: prevMovement,\n      _threshold: _T,\n    } = this.state\n    const M = this.getInternalMovement(values, this.state)\n\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], _T[0]) : wasIntentional[0]\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], _T[1]) : wasIntentional[1]\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M)\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] }\n    }\n\n    const _intentional = intentionalityCheck._intentional!\n    const _movement = M\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement: Vector2 = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : 0,\n      _intentional[1] !== false ? M[1] - _intentional[1] : 0,\n    ]\n\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband)\n\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n  }\n\n  /**\n   * Fires the gesture handler\n   */\n  protected fireGestureHandler = (forceFlag: boolean = false): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      // we need debounced gestures to end by themselves\n      if (!this.debounced) {\n        this.state._active = false\n        this.clean()\n      }\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't fire the handler.\n    if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents) return null\n\n    if (this.state.intentional) {\n      const prev_active = this.state.active\n      const next_active = this.state._active\n\n      this.state.active = next_active\n      this.state.first = next_active && !prev_active\n      this.state.last = prev_active && !next_active\n\n      this.controller.state.shared[this.ingKey] = next_active // Sets dragging, pinching, etc. to the gesture active state\n    }\n    const touches = this.controller.pointerIds.size || this.controller.touchIds.size\n    const down = this.controller.state.shared.buttons > 0 || touches > 0\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n      locked: !!document.pointerLockElement,\n      touches,\n      down,\n    } as FullGestureState<T>\n\n    // @ts-expect-error\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    return state\n  }\n}\n\n//--------------------------------------------\n\nfunction getIntentionalDisplacement(movement: number, threshold: number): number | false {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold\n  } else {\n    return false\n  }\n}\n\nfunction computeRubberband(bounds: [Vector2, Vector2], [Vx, Vy]: Vector2, [Rx, Ry]: Vector2): Vector2 {\n  const [[X1, X2], [Y1, Y2]] = bounds\n\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)]\n}\n\n/**\n * Returns a generic, common payload for all gestures from an event.\n */\nexport function getGenericPayload<T extends StateKey>(\n  { state }: Recognizer<T>,\n  event: EventTypes[T],\n  isStartEvent?: boolean\n) {\n  const { timeStamp, type: _lastEventType } = event\n  const previous = state.values\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime!\n  return { _lastEventType, event, timeStamp, elapsedTime, previous }\n}\n\n/**\n * Returns the reinitialized start state for the gesture.\n * Should be common to all gestures.\n */\nexport function getStartGestureState<T extends StateKey>(\n  { state, config, stateKey, args, transform }: Recognizer<T>,\n  values: Vector2,\n  event: EventTypes[T],\n  initial?: Vector2\n) {\n  const offset = state.offset\n  const startTime = event.timeStamp\n\n  const { initial: initialFn, bounds, threshold } = config\n\n  // the _threshold is the difference between a [0,0] offset converted to\n  // its new space coordinates\n  const _threshold = subV(transform(threshold), transform([0, 0])).map(Math.abs)\n\n  const _state = {\n    ...getInitialState()[stateKey],\n    _active: true,\n    args,\n    values,\n    initial: initial ?? values,\n    _threshold,\n    offset,\n    lastOffset: offset,\n    startTime,\n  }\n\n  return { ..._state, _initial: valueFn(initialFn, _state), _bounds: valueFn(bounds, _state) }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n  RecognizerClass,\n} from './types'\nimport { supportsTouchEvents, supportsGestureEvents, getTouchIds } from './utils/event'\nimport { getInitialState } from './utils/state'\nimport { chainFns } from './utils/utils'\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n */\nexport default class Controller {\n  public nativeRefs!: any\n  public config!: InternalConfig\n  public handlers!: InternalHandlers\n  public state: State // state for all gestures\n  public timeouts: { [stateKey in StateKey]?: number } // tracks timeouts of debounced gestures\n  public domListeners: [string, Fn][] // when config.domTarget is set, we attach events directly to the dom\n  public windowListeners: { [stateKey in StateKey]?: [string, Function][] } // keeps track of window listeners added by gestures (drag only at the moment)\n\n  public pointerIds = new Set<number>() // register Pointer Events pointerIds\n  public touchIds = new Set<number>() // register Touch Events identifiers\n  public supportsTouchEvents = supportsTouchEvents()\n  public supportsGestureEvents = supportsGestureEvents()\n\n  constructor(private classes: Set<RecognizerClass>) {\n    this.classes = classes\n    this.state = getInitialState()\n    this.timeouts = {}\n    this.domListeners = []\n    this.windowListeners = {}\n  }\n\n  public bind = (...args: any[]) => {\n    const bindings: { [key: string]: Function[] } = {}\n\n    for (let RecognizerClass of this.classes) new RecognizerClass(this, args).addBindings(bindings)\n\n    // // we also add event bindings for native handlers\n    for (let eventKey in this.nativeRefs) {\n      addBindings(bindings, eventKey, (event: any) => this.nativeRefs[eventKey]({ ...this.state.shared, event, args }))\n    }\n\n    if (this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(this, bindings)\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(this, bindings)\n    }\n  }\n\n  public effect = () => {\n    if (this.config.domTarget) this.bind()\n    return this.clean\n  }\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    const domTarget = getDomTargetFromConfig(this.config)\n    const { eventOptions } = this.config\n    if (domTarget) removeListeners(domTarget, takeAll(this.domListeners), eventOptions)\n    Object.values(this.timeouts).forEach(clearTimeout)\n    clearAllWindowListeners(this)\n  }\n}\n\nexport function addEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  if ('pointerId' in event) {\n    controller.pointerIds.add(event.pointerId)\n  } else {\n    controller.touchIds = new Set(getTouchIds(event))\n  }\n}\n\nexport function removeEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  if ('pointerId' in event) {\n    controller.pointerIds.delete(event.pointerId)\n  } else {\n    getTouchIds(event).forEach(id => controller.touchIds.delete(id))\n  }\n}\n\nexport function clearAllWindowListeners(controller: Controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners,\n  } = controller\n  if (!el) return\n\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey as StateKey]\n    removeListeners(el, handlers, eventOptions)\n  }\n\n  controller.windowListeners = {}\n}\n\nexport function clearWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  delete windowListeners[stateKey]\n}\n\nexport function updateWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  listeners: [string, Fn][] = [],\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  addListeners(config.window, (windowListeners[stateKey] = listeners), options)\n}\n\nfunction updateDomListeners({ config, domListeners }: Controller, bindings: { [key: string]: Function[] }) {\n  const domTarget = getDomTargetFromConfig(config)\n  if (!domTarget) throw new Error('domTarget must be defined')\n  const { eventOptions } = config\n\n  removeListeners(domTarget, takeAll(domListeners), eventOptions)\n\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase()\n    domListeners.push([name, chainFns(...fns)])\n  }\n\n  addListeners(domTarget, domListeners, eventOptions)\n}\n\nfunction getPropsListener({ config }: Controller, bindings: { [key: string]: Function[] }) {\n  const props: ReactEventHandlers = {}\n  const captureString = config.eventOptions.capture ? 'Capture' : ''\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns]\n    const key = (event + captureString) as ReactEventHandlerKey\n    props[key] = chainFns(...(fnsArray as Fn[]))\n  }\n  return props\n}\n\nfunction takeAll<T>(array: Array<T> = []) {\n  return array.splice(0, array.length)\n}\n\nfunction getDomTargetFromConfig({ domTarget }: InternalConfig) {\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget\n}\n\n/**\n * bindings is an object which keys match ReactEventHandlerKeys.\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n * that key.\n */\nexport function addBindings(bindings: any, name: string, fn: Fn): void {\n  if (!bindings[name]) bindings[name] = []\n  bindings[name]!.push(fn)\n}\n\nfunction addListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options)\n  }\n}\n\nfunction removeListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options)\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  GenericOptions,\n  RecognizerClass,\n  NativeHandlers,\n} from '../types'\n\n/**\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param handlers\n * @param classes\n * @param config\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  config: InternalConfig,\n  nativeHandlers: Partial<NativeHandlers> = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const classes = resolveClasses(handlers)\n\n  const controller = React.useMemo(() => new Controller(classes), [])\n  controller!.config = config\n  controller!.handlers = handlers\n  controller!.nativeRefs = nativeHandlers\n\n  React.useEffect(controller.effect, [])\n\n  // @ts-ignore\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget\n  // @ts-ignore\n  return controller.bind\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Deprecation notice: When the \\`domTarget\\` option is specified, you don't need to write \\`useEffect(bind, [bind])\\` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when \\`domTarget\\` is provided, therefore your code will break if you try to call \\`useEffect\\`.`\n    )\n  }\n}\n\nfunction resolveClasses(internalHandlers: Partial<InternalHandlers>) {\n  const classes = new Set<RecognizerClass>()\n\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag')!)\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel')!)\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll')!)\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move')!)\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch')!)\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover')!)\n\n  return classes\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into account)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis } as PartialGestureState<T>\n    }\n    const [absX, absY] = _movement.map(Math.abs)\n    const axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n    if (!this.config.axis && !this.config.lockDirection) return { _intentional, _blocked: false, axis } as any\n    if (!axis) return { _intentional: [false, false], _blocked: false, axis } as any\n    if (!!this.config.axis && axis !== this.config.axis) return { _intentional, _blocked: true, axis } as any\n    _intentional![axis === 'x' ? 1 : 0] = false\n    return { _intentional, _blocked: false, axis } as any\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp!\n      Object.assign(state, calculateAllKinematics(state.movement!, state.delta!, dt))\n    }\n    return state\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { xy: state.values, vxvy: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getPointerEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateDistance, sign } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, updateWindowListeners, clearWindowListeners, addEventIds, removeEventIds } from '../Controller'\n\nexport const TAP_DISTANCE_THRESHOLD = 3\nexport const SWIPE_MAX_ELAPSED_TIME = 220\n\nfunction persistEvent(event: React.PointerEvent | PointerEvent) {\n  'persist' in event && typeof event.persist === 'function' && event.persist()\n}\n\nexport class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  readonly ingKey = 'dragging'\n  readonly stateKey = 'drag'\n\n  // TODO add back when setPointerCapture is widely wupported\n  // https://caniuse.com/#search=setPointerCapture\n  private setPointerCapture = (event: React.PointerEvent | PointerEvent) => {\n    // don't perform pointere capture when user wants to use touch events or\n    // when a pointerLockElement exists as this would throw an error\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { target, pointerId } = event\n    if (target && 'setPointerCapture' in target) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.addEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      // @ts-expect-error\n      target.setPointerCapture(pointerId)\n    }\n    this.updateGestureState({ _dragTarget: target, _dragPointerId: pointerId })\n  }\n\n  private releasePointerCapture = () => {\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { _dragTarget, _dragPointerId } = this.state\n    if (_dragPointerId && _dragTarget && 'releasePointerCapture' in _dragTarget) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.removeEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      if (!('hasPointerCapture' in _dragTarget) || _dragTarget.hasPointerCapture(_dragPointerId))\n        try {\n          _dragTarget.releasePointerCapture(_dragPointerId)\n        } catch (e) {}\n    }\n  }\n\n  private preventScroll = (event: TouchEvent) => {\n    if (this.state._dragPreventScroll && event.cancelable) {\n      event.preventDefault()\n    }\n  }\n\n  private getEventId = (event: any): number => {\n    if (this.config.useTouch) return event.changedTouches[0].identifier\n    return event.pointerId\n  }\n\n  private isValidEvent = (event: any) => {\n    // if we were using pointer events only event.isPrimary === 1 would suffice\n    return this.state._pointerId === this.getEventId(event)\n  }\n\n  private shouldPreventWindowScrollY =\n    this.config.experimental_preventWindowScrollY && this.controller.supportsTouchEvents\n\n  private setUpWindowScrollDetection = (event: React.PointerEvent | PointerEvent) => {\n    persistEvent(event)\n    // we add window listeners that will prevent the scroll when the user has started dragging\n    updateWindowListeners(\n      this.controller,\n      this.stateKey,\n      [\n        ['touchmove', this.preventScroll],\n        ['touchend', this.clean.bind(this)],\n        ['touchcancel', this.clean.bind(this)],\n      ],\n      { passive: false }\n    )\n    this.setTimeout(this.startDrag.bind(this), 250, event)\n  }\n\n  private setUpDelayedDragTrigger = (event: React.PointerEvent | PointerEvent) => {\n    this.state._dragDelayed = true\n    persistEvent(event)\n    this.setTimeout(this.startDrag.bind(this), this.config.delay, event)\n  }\n\n  private setStartState = (event: React.PointerEvent | PointerEvent) => {\n    const values = getPointerEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerId: this.getEventId(event), // setting pointerId locks the gesture to this specific event\n    })\n\n    this.updateGestureState(this.getMovement(values))\n  }\n\n  onDragStart = (event: React.PointerEvent | PointerEvent): void => {\n    addEventIds(this.controller, event)\n    if (!this.enabled || this.state._active) return\n\n    this.setStartState(event)\n    this.setPointerCapture(event as PointerEvent)\n\n    if (this.shouldPreventWindowScrollY) this.setUpWindowScrollDetection(event)\n    else if (this.config.delay > 0) this.setUpDelayedDragTrigger(event)\n    else this.startDrag(event, true) // we pass the values to the startDrag event\n  }\n\n  startDrag(event: React.PointerEvent | PointerEvent, onDragIsStart: boolean = false) {\n    // startDrag can happen after a timeout, so we need to check if the gesture is still active\n    // as the user might have lift up the pointer in between.\n\n    if (\n      // if the gesture isn't active (probably means)\n      !this.state._active ||\n      // if the drag has already started we should ignore subsequent attempts\n      this.state._dragStarted\n    )\n      return\n\n    if (!onDragIsStart) this.setStartState(event)\n    this.updateGestureState({ _dragStarted: true, _dragPreventScroll: true, cancel: this.onCancel })\n    this.clearTimeout()\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: PointerEvent): void => {\n    if (\n      // if the gesture was canceled or\n      this.state.canceled ||\n      // if onDragStart wasn't fired or\n      !this.state._active ||\n      // if the event pointerId doesn't match the one that initiated the drag\n      !this.isValidEvent(event) ||\n      // if the event has the same timestamp as the previous event\n      // note that checking type equality is ONLY for tests ¯\\_(ツ)_/¯\n      (this.state._lastEventType === event.type && event.timeStamp === this.state.timeStamp)\n    )\n      return\n\n    let values\n\n    if (document.pointerLockElement) {\n      const { movementX, movementY } = event\n      values = addV(this.transform([movementX, movementY]), this.state.values)\n    } else values = getPointerEventValues(event, this.transform)\n\n    const kinematics = this.getKinematics(values, event)\n\n    // if startDrag hasn't fired\n    if (!this.state._dragStarted) {\n      // If the gesture isn't active then respond to the event only if\n      // it's been delayed via the `delay` option, in which case start\n      // the gesture immediately.\n      if (this.state._dragDelayed) {\n        this.startDrag(event)\n        return\n      }\n      // if the user wants to prevent vertical window scroll when user starts dragging\n      if (this.shouldPreventWindowScrollY) {\n        if (!this.state._dragPreventScroll && kinematics.axis) {\n          // if the user is dragging horizontally then we should allow the drag\n          if (kinematics.axis === 'x') {\n            this.startDrag(event)\n          } else {\n            this.state._active = false\n            return\n          }\n        } else return\n      } else return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n    const genericPayload = getGenericPayload(this, event)\n\n    // This verifies if the drag can be assimilated to a tap by checking\n    // if the real distance of the drag (ie not accounting for the threshold) is\n    // greater than the TAP_DISTANCE_THRESHOLD.\n    const realDistance = calculateDistance(kinematics._movement!)\n    let { _dragIsTap } = this.state\n    if (_dragIsTap && realDistance >= TAP_DISTANCE_THRESHOLD) _dragIsTap = false\n\n    this.updateGestureState({ ...genericPayload, ...kinematics, _dragIsTap })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: PointerEvent): void => {\n    removeEventIds(this.controller, event)\n\n    // if the event pointerId doesn't match the one that initiated the drag\n    // we don't want to end the drag\n    if (!this.isValidEvent(event)) return\n    this.clean()\n\n    // if the gesture is no longer active (ie canceled)\n    // don't do anything\n    if (!this.state._active) return\n    this.state._active = false\n\n    const tap = this.state._dragIsTap\n    const [vx, vy] = this.state.velocities\n    const [mx, my] = this.state.movement\n    const [ix, iy] = this.state._intentional\n    const [svx, svy] = this.config.swipeVelocity\n    const [sx, sy] = this.config.swipeDistance\n    const sd = this.config.swipeDuration\n\n    const endState = {\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    }\n\n    const swipe: [number, number] = [0, 0]\n\n    if (endState.elapsedTime < sd) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy)\n    }\n\n    this.updateSharedState({ buttons: 0 })\n    this.updateGestureState({ ...endState, tap, swipe })\n    this.fireGestureHandler(this.config.filterTaps && tap === true)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._dragStarted = false\n    this.releasePointerCapture()\n    clearWindowListeners(this.controller, this.stateKey)\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ canceled: true, _active: false })\n    this.updateSharedState({ buttons: 0 })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n\n  onClick = (event: React.UIEvent | UIEvent): void => {\n    if (!this.state._dragIsTap) event.stopPropagation()\n  }\n\n  addBindings(bindings: any): void {\n    if (this.config.useTouch) {\n      addBindings(bindings, 'onTouchStart', this.onDragStart)\n      addBindings(bindings, 'onTouchMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onTouchEnd', this.onDragEnd)\n      addBindings(bindings, 'onTouchCancel', this.onDragEnd)\n    } else {\n      addBindings(bindings, 'onPointerDown', this.onDragStart)\n      addBindings(bindings, 'onPointerMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onPointerUp', this.onDragEnd)\n      addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n    }\n\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture'\n      addBindings(bindings, handler, this.onClick)\n    }\n  }\n}\n","/**\n * Inlined from https://github.com/alexreardon/memoize-one\n */\n\nexport type EqualityFn = (newArgs: any[], lastArgs: any[]) => boolean\n\nexport default function memoizeOne<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  resultFn: ResultFn,\n  isEqual: EqualityFn\n): ResultFn {\n  let lastThis: unknown\n  let lastArgs: unknown[] = []\n  let lastResult: ReturnType<ResultFn>\n  let calledOnce: boolean = false\n\n  function memoized(this: unknown, ...newArgs: unknown[]): ReturnType<ResultFn> {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult\n    }\n\n    lastResult = resultFn.apply(this, newArgs)\n    calledOnce = true\n    lastThis = this\n    lastArgs = newArgs\n    return lastResult\n  }\n\n  return memoized as ResultFn\n}\n","/**\n * Taken from https://github.com/FormidableLabs/react-fast-compare\n *\n * Dropped comments and ArrayBuffer handling\n */\n\nfunction equal(a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false\n      return true\n    }\n\n    let it\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false\n      return true\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      return true\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false\n\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === '_owner' && a.$$typeof) continue\n      if (!equal(a[keys[i]], b[keys[i]])) return false\n    }\n    return true\n  }\n\n  // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport default function isEqual(a: any, b: any) {\n  try {\n    return equal(a, b)\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      // eslint-disable-next-line no-console\n      console.warn('react-fast-compare cannot handle circular refs')\n      return false\n    }\n    throw error\n  }\n}\n","import { UseDragConfig, Handler, EventTypes } from '../types'\nimport { _buildDragConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Drag hook.\n *\n * @param handler - the function fired every time the drag gesture updates\n * @param [config={}] - the config object including generic options and drag options\n */\nexport function useDrag<K = EventTypes['drag']>(handler: Handler<'drag', K>, config: UseDragConfig | {} = {}) {\n  RecognizersMap.set('drag', DragRecognizer)\n  const buildDragConfig = useRef<any>()\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoize(_buildDragConfig, isEqual)\n  }\n  return useRecognizers<UseDragConfig>({ drag: handler }, buildDragConfig.current(config))\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, sign, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  protected getInternalMovement(values: [number, number?], state: GestureState<T>): Vector2 {\n    const prev_a = state.values[1]\n    // not be defined if ctrl+wheel is used for zoom only\n    let [d, a = prev_a] = values\n\n    let delta_a = a - prev_a\n    let next_turns = state.turns\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a)\n    return subV([d, a - 360 * next_turns], state.initial)\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    const turns = (values[1] - state._movement![1] - this.state.initial[1]) / 360\n    const dt = event.timeStamp - this.state.timeStamp!\n    const { distance, velocity, ...kinematics } = calculateAllKinematics(state.movement!, state.delta!, dt)\n    return { turns, ...state, ...kinematics }\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { da: state.values, vdva: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n\n/**\n * @param dangle is a small change of variable on \"lifting\" of the circle.\n * It's expected to be small and cannot be greater than 270 or under -270\n */\nexport function fixContinuity(dangle: number) {\n  dangle -= Math.round(dangle / 360) * 360\n  if (dangle > 270) return dangle - 360\n  if (dangle < -270) return dangle + 360\n  return dangle\n}\n","import DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport { Vector2, WebKitGestureEvent } from '../types'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventValues,\n  getWheelEventValues,\n  getWebkitGestureEventValues,\n  getTouchIds,\n} from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, addEventIds, removeEventIds } from '../Controller'\n\nconst ZOOM_CONSTANT = 7\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\nexport class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  readonly ingKey = 'pinching'\n  readonly stateKey = 'pinch'\n\n  onPinchStart = (event: React.TouchEvent | TouchEvent) => {\n    addEventIds(this.controller, event)\n    const touchIds = this.controller.touchIds\n\n    if (!this.enabled) return\n\n    if (this.state._active) {\n      // check that the pointerIds that initiated the gesture\n      // are still enabled. This is useful for when the page\n      // loses track of the pointers (minifying gesture on iPad).\n      if (this.state._pointerIds.every(id => touchIds.has(id))) return\n      // something was wrong with the pointers but we let it go.\n    }\n    // until we reach two fingers on the target don't react\n    if (touchIds.size < 2) return\n    const _pointerIds = Array.from(touchIds).slice(0, 2) as [number, number]\n\n    const { values, origin } = getTwoTouchesEventValues(event, _pointerIds, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerIds,\n      cancel: this.onCancel,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: React.TouchEvent | TouchEvent): void => {\n    const { canceled, _active } = this.state\n    if (\n      canceled ||\n      !_active ||\n      // if the event has the same timestamp as the previous event\n      event.timeStamp === this.state.timeStamp\n    )\n      return\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n    try {\n      const { values, origin } = getTwoTouchesEventValues(event, this.state._pointerIds, this.transform)\n      const kinematics = this.getKinematics(values, event)\n\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...kinematics,\n        origin,\n      })\n\n      this.fireGestureHandler()\n    } catch (e) {\n      this.onPinchEnd(event)\n    }\n  }\n\n  onPinchEnd = (event: React.TouchEvent | TouchEvent): void => {\n    removeEventIds(this.controller, event)\n    const pointerIds = getTouchIds(event)\n\n    // if none of the lifted pointerIds is in the state pointerIds don't do anything\n    if (this.state._pointerIds.every(id => !pointerIds.includes(id))) return\n\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ _active: false, canceled: true })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault()\n\n    const values = getWebkitGestureEventValues(event, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    // this normalizes the values of the Safari's WebKitEvent by calculating\n    // the delta and then multiplying it by a constant.\n    const values = getWebkitGestureEventValues(event, this.transform)\n    values[0] =\n      (values[0] - (this.state.event as WebKitGestureEvent).scale) * WEBKIT_DISTANCE_SCALE_FACTOR + this.state.values[0]\n\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n    this.fireGestureHandler()\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: React.WheelEvent | WheelEvent) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: React.WheelEvent | WheelEvent) => {\n    const [, delta_d] = getWheelEventValues(event, this.transform)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    // ZOOM_CONSTANT is based on Safari trackpad natural zooming\n    const _delta_d = -delta_d * ZOOM_CONSTANT\n    // new distance is the previous state distance added to the delta\n    const d = prev_d + _delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [_delta_d, a] as Vector2,\n    }\n  }\n\n  onWheel = (event: React.WheelEvent | WheelEvent): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: React.WheelEvent | WheelEvent): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (event.cancelable) event.preventDefault()\n    else if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event, this.state.values),\n      ...getGenericPayload(this, event, true),\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.cancelable) event.preventDefault()\n\n    this.updateSharedState(getGenericEventData(event))\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (\n      this.controller.config.domTarget &&\n      !this.controller.supportsTouchEvents &&\n      this.controller.supportsGestureEvents\n    ) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart)\n      addBindings(bindings, 'onGestureChange', this.onGestureChange)\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd)\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart)\n      addBindings(bindings, 'onTouchMove', this.onPinchChange)\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd)\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd)\n      addBindings(bindings, 'onWheel', this.onWheel)\n    }\n  }\n}\n","import { UsePinchConfig, Handler, EventTypes } from '../types'\nimport { _buildPinchConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Pinch hook.\n *\n * @param handler - the function fired every time the pinch gesture updates\n * @param [config={}] - the config object including generic options and pinch options\n */\nexport function usePinch<K = EventTypes['pinch']>(handler: Handler<'pinch', K>, config: UsePinchConfig | {} = {}) {\n  RecognizersMap.set('pinch', PinchRecognizer)\n  const buildPinchConfig = useRef<any>()\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoize(_buildPinchConfig, isEqual)\n  }\n  return useRecognizers<UsePinchConfig>({ pinch: handler }, buildPinchConfig.current(config))\n}\n","import { WheelEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  readonly ingKey = 'wheeling'\n  readonly stateKey = 'wheel'\n  debounced = true\n\n  handleEvent = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return\n    if (!this.enabled) return\n\n    this.setTimeout(this.onEnd)\n    this.updateSharedState(getGenericEventData(event))\n\n    const values = addV(getWheelEventValues(event, this.transform), this.state.values)\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event, this.state.values),\n        ...getGenericPayload(this, event, true),\n      })\n\n      const movement = this.getMovement(values)\n      const geometry = calculateAllGeometry(movement.delta!)\n\n      this.updateGestureState(movement)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const movement = this.getMovement(this.state.values)\n    this.updateGestureState(movement)\n    this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onWheel', this.handleEvent)\n  }\n}\n","import { UseWheelConfig, Handler, EventTypes } from '../types'\nimport { _buildWheelConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Wheel hook.\n *\n * @param handler - the function fired every time the wheel gesture updates\n * @param the config object including generic options and wheel options\n */\nexport function useWheel<K = EventTypes['wheel']>(handler: Handler<'wheel', K>, config: UseWheelConfig | {} = {}) {\n  RecognizersMap.set('wheel', WheelRecognizer)\n  const buildWheelConfig = useRef<any>()\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoize(_buildWheelConfig, isEqual)\n  }\n  return useRecognizers<UseWheelConfig>({ wheel: handler }, buildWheelConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  readonly ingKey = 'moving'\n  readonly stateKey = 'move'\n\n  debounced = true\n\n  onMove = (event: React.PointerEvent | PointerEvent): void => {\n    if (!this.enabled) return\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const values = this.state.values\n    this.updateGestureState(this.getMovement(values))\n    this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false })\n    this.fireGestureHandler()\n  }\n\n  hoverTransform = () => {\n    return this.controller.config.hover!.transform || this.controller.config.transform\n  }\n\n  onPointerEnter = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n\n    if (this.controller.config.hover!.enabled) {\n      const values = getPointerEventValues(event, this.hoverTransform())\n\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event, true),\n        args: this.args,\n        values,\n        active: true,\n        hovering: true,\n      }\n\n      this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n    }\n\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n  }\n\n  onPointerLeave = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n    if (!this.controller.config.hover!.enabled) return\n\n    const values = getPointerEventValues(event, this.hoverTransform())\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...getGenericPayload(this, event),\n      args: this.args,\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(bindings: any): void {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove)\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter)\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave)\n    }\n  }\n}\n","import { UseMoveConfig, Handler, EventTypes } from '../types'\nimport { _buildMoveConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Move hook.\n *\n * @param handler - the function fired every time the move gesture updates\n * @param [config={}] - the config object including generic options and move options\n */\nexport function useMove<K = EventTypes['move']>(handler: Handler<'move', K>, config: UseMoveConfig | {} = {}) {\n  RecognizersMap.set('move', MoveRecognizer)\n  const buildMoveConfig = useRef<any>()\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoize(_buildMoveConfig, isEqual)\n  }\n  return useRecognizers<UseMoveConfig>({ move: handler }, buildMoveConfig.current(config))\n}\n","import { Handler, UseHoverConfig, EventTypes } from '../types'\nimport { _buildHoverConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Hover hook.\n *\n * @param handler - the function fired every time the hover gesture updates\n * @param [config={}] - the config object including generic options and hover options\n */\nexport function useHover<K = EventTypes['hover']>(handler: Handler<'hover', K>, config: UseHoverConfig | {} = {}) {\n  RecognizersMap.set('hover', MoveRecognizer)\n  const buildHoverConfig = useRef<any>()\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoize(_buildHoverConfig, isEqual)\n  }\n  return useRecognizers<UseHoverConfig>({ hover: handler }, buildHoverConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  readonly ingKey = 'scrolling'\n  readonly stateKey = 'scroll'\n  debounced = true\n\n  handleEvent = (event: React.UIEvent | UIEvent): void => {\n    if (!this.enabled) return\n\n    this.clearTimeout()\n    this.setTimeout(this.onEnd)\n\n    const values = getScrollEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event, this.state.values),\n        ...getGenericPayload(this, event, true),\n      })\n\n      const movementDetection = this.getMovement(values)\n      const geometry = calculateAllGeometry(movementDetection.delta!)\n\n      this.updateGestureState(movementDetection)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.updateGestureState({ ...this.getMovement(this.state.values), _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onScroll', this.handleEvent)\n  }\n}\n","import { UseScrollConfig, Handler, EventTypes } from '../types'\nimport { _buildScrollConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Scroll hook.\n *\n * @param handler - the function fired every time the scroll gesture updates\n * @param [config={}] - the config object including generic options and scroll options\n */\nexport function useScroll<K = EventTypes['scroll']>(handler: Handler<'scroll', K>, config: UseScrollConfig | {} = {}) {\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  const buildScrollConfig = useRef<any>()\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoize(_buildScrollConfig, isEqual)\n  }\n  return useRecognizers<UseScrollConfig>({ scroll: handler }, buildScrollConfig.current(config))\n}\n","import useRecognizers from './useRecognizers'\nimport { buildComplexConfig } from './buildConfig'\nimport {\n  InternalConfig,\n  InternalHandlers,\n  UserHandlers,\n  UseGestureConfig,\n  Handlers,\n  EventTypes,\n  AnyGestureEventTypes,\n} from '../types'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\n\nexport function wrapStart(fn: Function) {\n  return function (this: any, { first }: any) {\n    if (first) fn.apply(this, arguments)\n  }\n}\n\nexport function wrapEnd(fn: Function) {\n  return function (this: any, { last }: any) {\n    if (last) fn.apply(this, arguments)\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/\n\nfunction sortHandlers(handlers: object) {\n  const native: any = {}\n  const handle: any = {}\n  const actions = new Set()\n\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch)\n      handle[key] = (handlers as any)[key]\n    } else {\n      native[key] = (handlers as any)[key]\n    }\n  }\n\n  return [handle, native, actions]\n}\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<T extends AnyGestureEventTypes = EventTypes>(\n  _handlers: Handlers<T>,\n  config: UseGestureConfig = {}\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers)\n\n  RecognizersMap.set('drag', DragRecognizer)\n  RecognizersMap.set('hover', MoveRecognizer)\n  RecognizersMap.set('move', MoveRecognizer)\n  RecognizersMap.set('pinch', PinchRecognizer)\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  RecognizersMap.set('wheel', WheelRecognizer)\n\n  const mergedConfig: InternalConfig = buildComplexConfig(config, actions)\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag')\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel')\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll')\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove')\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch')\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover\n\n  return useRecognizers<UseGestureConfig>(internalHandlers, mergedConfig, nativeHandlers)\n}\n\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover'\nfunction includeStartEndHandlers(handlers: Partial<UserHandlers>, handlerKey: HandlerKey) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}