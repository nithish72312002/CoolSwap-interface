{"ast":null,"code":"import _toConsumableArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray(items, maxChunkSize) {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\n  if (items.length <= maxChunkSize) return [items];\n  var numChunks = Math.ceil(items.length / maxChunkSize);\n  var chunkSize = Math.ceil(items.length / numChunks);\n  return _toConsumableArray(Array(numChunks).keys()).map(function (ix) {\n    return items.slice(ix * chunkSize, ix * chunkSize + chunkSize);\n  });\n}","map":{"version":3,"names":["chunkArray","items","maxChunkSize","Error","length","numChunks","Math","ceil","chunkSize","_toConsumableArray","Array","keys","map","ix","slice"],"sources":["E:/testprojects/CoolSwap-interface/src/utils/chunkArray.ts"],"sourcesContent":["// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\r\n  if (items.length <= maxChunkSize) return [items];\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize);\r\n  const chunkSize = Math.ceil(items.length / numChunks);\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize));\r\n}\r\n"],"mappings":";AAAA;AACA;AACA,eAAe,SAASA,UAAUA,CAAIC,KAAU,EAAEC,YAAoB,EAAS;EAC7E,IAAIA,YAAY,GAAG,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EACnE,IAAIF,KAAK,CAACG,MAAM,IAAIF,YAAY,EAAE,OAAO,CAACD,KAAK,CAAC;EAEhD,IAAMI,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACN,KAAK,CAACG,MAAM,GAAGF,YAAY,CAAC;EAChE,IAAMM,SAAS,GAAGF,IAAI,CAACC,IAAI,CAACN,KAAK,CAACG,MAAM,GAAGC,SAAS,CAAC;EAErD,OAAOI,kBAAA,CAAIC,KAAK,CAACL,SAAS,CAAC,CAACM,IAAI,CAAC,CAAC,EAAEC,GAAG,CAAC,UAACC,EAAE;IAAA,OAAKZ,KAAK,CAACa,KAAK,CAACD,EAAE,GAAGL,SAAS,EAAEK,EAAE,GAAGL,SAAS,GAAGA,SAAS,CAAC;EAAA,EAAC;AAC1G"},"metadata":{},"sourceType":"module"}