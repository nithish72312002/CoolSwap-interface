{"ast":null,"code":"import { DEFAULT_LIST_OF_LISTS } from './../constants/lists';\n\n// use ordering of default list of lists to assign priority\nexport default function sortByListPriority(urlA, urlB) {\n  var first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER;\n  var second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER;\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1;else if (first > second) return -1;\n  return 0;\n}","map":{"version":3,"names":["DEFAULT_LIST_OF_LISTS","sortByListPriority","urlA","urlB","first","includes","indexOf","Number","MAX_SAFE_INTEGER","second"],"sources":["E:/testprojects/CoolSwap-interface/src/utils/listSort.ts"],"sourcesContent":["import { DEFAULT_LIST_OF_LISTS } from './../constants/lists';\r\n\r\n// use ordering of default list of lists to assign priority\r\nexport default function sortByListPriority(urlA: string, urlB: string) {\r\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER;\r\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER;\r\n\r\n  // need reverse order to make sure mapping includes top priority last\r\n  if (first < second) return 1;\r\n  else if (first > second) return -1;\r\n  return 0;\r\n}\r\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,sBAAsB;;AAE5D;AACA,eAAe,SAASC,kBAAkBA,CAACC,IAAY,EAAEC,IAAY,EAAE;EACrE,IAAMC,KAAK,GAAGJ,qBAAqB,CAACK,QAAQ,CAACH,IAAI,CAAC,GAAGF,qBAAqB,CAACM,OAAO,CAACJ,IAAI,CAAC,GAAGK,MAAM,CAACC,gBAAgB;EAClH,IAAMC,MAAM,GAAGT,qBAAqB,CAACK,QAAQ,CAACF,IAAI,CAAC,GAAGH,qBAAqB,CAACM,OAAO,CAACH,IAAI,CAAC,GAAGI,MAAM,CAACC,gBAAgB;;EAEnH;EACA,IAAIJ,KAAK,GAAGK,MAAM,EAAE,OAAO,CAAC,CAAC,KACxB,IAAIL,KAAK,GAAGK,MAAM,EAAE,OAAO,CAAC,CAAC;EAClC,OAAO,CAAC;AACV"},"metadata":{},"sourceType":"module"}