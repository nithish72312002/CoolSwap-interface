{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n  return function (source) {\n    return source.lift(new EveryOperator(predicate, thisArg, source));\n  };\n}\nvar EveryOperator = /*@__PURE__*/function () {\n  function EveryOperator(predicate, thisArg, source) {\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.source = source;\n  }\n  EveryOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  };\n  return EveryOperator;\n}();\nvar EverySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(EverySubscriber, _super);\n  function EverySubscriber(destination, predicate, thisArg, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.thisArg = thisArg;\n    _this.source = source;\n    _this.index = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n  EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  };\n  EverySubscriber.prototype._next = function (value) {\n    var result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  };\n  EverySubscriber.prototype._complete = function () {\n    this.notifyComplete(true);\n  };\n  return EverySubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","every","predicate","thisArg","source","lift","EveryOperator","prototype","call","observer","subscribe","EverySubscriber","_super","__extends","destination","_this","index","notifyComplete","everyValueMatch","next","complete","_next","value","result","err","error","_complete"],"sources":["../../../src/internal/operators/every.ts"],"sourcesContent":[null],"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAwB3B,SAAMC,UAAU,QAAS,eACa;OACpC,SAAOC,KAACA,CAAAC,SAA0B,EAAAC,OAAA;EACnC,iBAAAC,MAAA;IAAA,OAAAA,MAAA,CAAAC,IAAA,KAAAC,aAAA,CAAAJ,SAAA,EAAAC,OAAA,EAAAC,MAAA;EAAA;AAED;IACEE,aAAA,gBAAoB,YAEA;WAFAA,cAAAJ,SAAsE,EAAAC,OAAA,EAAAC,MAAA;IACtE,KAAAF,SAAO,GAAPA,SAAa;IACb,KAAAC,OAAM,GAANA,OAAsB;IACzC,KAAAC,MAAA,GAAAA,MAAA;EAED;eACS,CAAAG,SAAO,CAAAC,IAAU,aAAIC,QAAgB,EAAAL,MAAQ,EAAE;IACvD,OAAAA,MAAA,CAAAM,SAAA,KAAAC,eAAA,CAAAF,QAAA,OAAAP,SAAA,OAAAC,OAAA,OAAAC,MAAA;EACH;EATA,OASCE,aAAA;AAOD;IAAiCK,eAAA,0BAAaC,MAAA;EAG5Cb,OAAA,CAAAc,SAAA,CAAAF,eAAY,EAAAC,MACQ;WADpBD,eAIEA,CAAAG,WAAM,EAAAZ,SAAY,EAAAC,OAEnB,EAAAC,MAAA;IALmB,IAAAW,KAAA,GAAAH,MAAA,CAAAJ,IAAA,KAAsE,EAAAM,WAAA;IACtEC,KAAA,CAAAb,SAAO,GAAPA,SAAY;IACZa,KAAA,CAAAZ,OAAM,GAANA,OAAsB;IALlCY,KAAA,CAAAX,MAAK,GAAYA,MAAC;IAOxBW,KAAI,CAACC,KAAA,GAAO;;IACb,OAAAD,KAAA;EAEO;iBACD,CAAAR,SAAgB,CAACU,cAAA,GAAiB,UAAAC,eAAA;IACvC,IAAI,CAACJ,WAAW,CAACK,IAAA,CAAAD,eAAW;IAC7B,KAAAJ,WAAA,CAAAM,QAAA;EAES;iBACE,CAAAb,SAAS,CAAAc,KAAA,aAAAC,KAAA;IACnB,IAAIC,MAAA;QACF;MACDA,MAAA,QAAArB,SAAA,CAAAM,IAAA,MAAAL,OAAA,EAAAmB,KAAA,OAAAN,KAAA,SAAAZ,MAAA;IAAC,E,OACAoB,GAAK;MACL,KAAAV,WAAO,CAAAW,KAAA,CAAAD,GAAA;MACR;IAED;QACE,CAAAD,MAAK;MACN,KAAAN,cAAA;IACF;EAES;iBACH,CAAAV,SAAe,CAAAmB,SAAM;IAC3B,KAAAT,cAAA;EACH;EAjCiC,OAAAN,eAiChC"},"metadata":{},"sourceType":"module"}