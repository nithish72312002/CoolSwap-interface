{"ast":null,"code":"import _slicedToArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\n\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\nexport default function useLast(value, filterFn) {\n  var _useState = useState(filterFn && filterFn(value) ? value : undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    last = _useState2[0],\n    setLast = _useState2[1];\n  useEffect(function () {\n    setLast(function (last) {\n      var shouldUse = filterFn ? filterFn(value) : true;\n      if (shouldUse) return value;\n      return last;\n    });\n  }, [filterFn, value]);\n  return last;\n}\nfunction isDefined(x) {\n  return x !== null && x !== undefined;\n}\n\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\nexport function useLastTruthy(value) {\n  return useLast(value, isDefined);\n}","map":{"version":3,"names":["useEffect","useState","useLast","value","filterFn","_useState","undefined","_useState2","_slicedToArray","last","setLast","shouldUse","isDefined","x","useLastTruthy"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useLast.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nexport default function useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined);\r\n  useEffect(() => {\r\n    setLast((last) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true;\r\n      if (shouldUse) return value;\r\n      return last;\r\n    });\r\n  }, [filterFn, value]);\r\n  return last;\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined;\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined);\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAC7BC,KAA2B,EAC3BC,QAAmD,EAC7B;EACtB,IAAAC,SAAA,GAAwBJ,QAAQ,CAAuBG,QAAQ,IAAIA,QAAQ,CAACD,KAAK,CAAC,GAAGA,KAAK,GAAGG,SAAS,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAhGI,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpBP,SAAS,CAAC,YAAM;IACdU,OAAO,CAAC,UAACD,IAAI,EAAK;MAChB,IAAME,SAAkB,GAAGP,QAAQ,GAAGA,QAAQ,CAACD,KAAK,CAAC,GAAG,IAAI;MAC5D,IAAIQ,SAAS,EAAE,OAAOR,KAAK;MAC3B,OAAOM,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,QAAQ,EAAED,KAAK,CAAC,CAAC;EACrB,OAAOM,IAAI;AACb;AAEA,SAASG,SAASA,CAAIC,CAAuB,EAAU;EACrD,OAAOA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKP,SAAS;AACtC;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASQ,aAAaA,CAAIX,KAA2B,EAAwB;EAClF,OAAOD,OAAO,CAACC,KAAK,EAAES,SAAS,CAAC;AAClC"},"metadata":{},"sourceType":"module"}