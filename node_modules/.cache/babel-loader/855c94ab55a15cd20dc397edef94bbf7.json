{"ast":null,"code":"import { namehash } from 'ethers/lib/utils';\nimport { useMemo } from 'react';\nimport { useSingleCallResult } from '../state/multicall/hooks';\nimport isZero from '../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\nimport useDebounce from './useDebounce';\n\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\nexport default function useENSAddress(ensName) {\n  var _resolverAddress$resu, _addr$result$, _addr$result;\n  var debouncedName = useDebounce(ensName, 200);\n  var ensNodeArgument = useMemo(function () {\n    if (!debouncedName) return [undefined];\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined];\n    } catch (error) {\n      return [undefined];\n    }\n  }, [debouncedName]);\n  var registrarContract = useENSRegistrarContract(false);\n  var resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  var resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  var resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  var addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\n  var changed = debouncedName !== ensName;\n  return {\n    address: changed ? null : (_addr$result$ = (_addr$result = addr.result) === null || _addr$result === void 0 ? void 0 : _addr$result[0]) !== null && _addr$result$ !== void 0 ? _addr$result$ : null,\n    loading: changed || resolverAddress.loading || addr.loading\n  };\n}","map":{"version":3,"names":["namehash","useMemo","useSingleCallResult","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","ensName","_resolverAddress$resu","_addr$result$","_addr$result","debouncedName","ensNodeArgument","undefined","error","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","addr","changed","address","loading"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useENSAddress.ts"],"sourcesContent":["import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\nimport isZero from '../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\r\nimport useDebounce from './useDebounce';\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200);\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined];\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined];\r\n    } catch (error) {\r\n      return [undefined];\r\n    }\r\n  }, [debouncedName]);\r\n  const registrarContract = useENSRegistrarContract(false);\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n  const resolverAddressResult = resolverAddress.result?.[0];\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false\r\n  );\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\r\n\r\n  const changed = debouncedName !== ensName;\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,uBAAuB,EAAEC,sBAAsB,QAAQ,eAAe;AAC/E,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA,eAAe,SAASC,aAAaA,CAACC,OAAuB,EAAgD;EAAA,IAAAC,qBAAA,EAAAC,aAAA,EAAAC,YAAA;EAC3G,IAAMC,aAAa,GAAGN,WAAW,CAACE,OAAO,EAAE,GAAG,CAAC;EAC/C,IAAMK,eAAe,GAAGZ,OAAO,CAAC,YAAM;IACpC,IAAI,CAACW,aAAa,EAAE,OAAO,CAACE,SAAS,CAAC;IACtC,IAAI;MACF,OAAOF,aAAa,GAAG,CAACZ,QAAQ,CAACY,aAAa,CAAC,CAAC,GAAG,CAACE,SAAS,CAAC;IAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,CAACD,SAAS,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EACnB,IAAMI,iBAAiB,GAAGZ,uBAAuB,CAAC,KAAK,CAAC;EACxD,IAAMa,eAAe,GAAGf,mBAAmB,CAACc,iBAAiB,EAAE,UAAU,EAAEH,eAAe,CAAC;EAC3F,IAAMK,qBAAqB,IAAAT,qBAAA,GAAGQ,eAAe,CAACE,MAAM,cAAAV,qBAAA,uBAAtBA,qBAAA,CAAyB,CAAC,CAAC;EACzD,IAAMW,gBAAgB,GAAGf,sBAAsB,CAC7Ca,qBAAqB,IAAI,CAACf,MAAM,CAACe,qBAAqB,CAAC,GAAGA,qBAAqB,GAAGJ,SAAS,EAC3F,KACF,CAAC;EACD,IAAMO,IAAI,GAAGnB,mBAAmB,CAACkB,gBAAgB,EAAE,MAAM,EAAEP,eAAe,CAAC;EAE3E,IAAMS,OAAO,GAAGV,aAAa,KAAKJ,OAAO;EACzC,OAAO;IACLe,OAAO,EAAED,OAAO,GAAG,IAAI,IAAAZ,aAAA,IAAAC,YAAA,GAAGU,IAAI,CAACF,MAAM,cAAAR,YAAA,uBAAXA,YAAA,CAAc,CAAC,CAAC,cAAAD,aAAA,cAAAA,aAAA,GAAI,IAAI;IAClDc,OAAO,EAAEF,OAAO,IAAIL,eAAe,CAACO,OAAO,IAAIH,IAAI,CAACG;EACtD,CAAC;AACH"},"metadata":{},"sourceType":"module"}