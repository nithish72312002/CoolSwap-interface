{"ast":null,"code":"import _toConsumableArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\pages\\\\AddLiquidity\\\\index.tsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { ETHER } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonPrimary } from '../../components/Button';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\nexport default function AddLiquidity(_ref) {\n  var _parsedAmounts$depend,\n    _parsedAmounts$depend2,\n    _formattedAmounts,\n    _this = this,\n    _parsedAmounts$Field$,\n    _currencies$Field$CUR5,\n    _parsedAmounts$Field$2,\n    _currencies$Field$CUR6,\n    _currencies$Field$CUR7,\n    _currencies$Field$CUR8,\n    _currencies$Field$CUR9,\n    _currencies$Field$CUR10;\n  var _ref$match$params = _ref.match.params,\n    currencyIdA = _ref$match$params.currencyIdA,\n    currencyIdB = _ref$match$params.currencyIdB,\n    history = _ref.history;\n  var _useActiveWeb3React = useActiveWeb3React(),\n    account = _useActiveWeb3React.account,\n    chainId = _useActiveWeb3React.chainId,\n    library = _useActiveWeb3React.library;\n  var theme = useContext(ThemeContext);\n  var currencyA = useCurrency(currencyIdA);\n  var currencyB = useCurrency(currencyIdB);\n  var toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  var expertMode = useIsExpertMode();\n\n  // mint state\n  var _useMintState = useMintState(),\n    independentField = _useMintState.independentField,\n    typedValue = _useMintState.typedValue,\n    otherTypedValue = _useMintState.otherTypedValue;\n  var _useDerivedMintInfo = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined),\n    dependentField = _useDerivedMintInfo.dependentField,\n    currencies = _useDerivedMintInfo.currencies,\n    pairState = _useDerivedMintInfo.pairState,\n    currencyBalances = _useDerivedMintInfo.currencyBalances,\n    parsedAmounts = _useDerivedMintInfo.parsedAmounts,\n    price = _useDerivedMintInfo.price,\n    noLiquidity = _useDerivedMintInfo.noLiquidity,\n    liquidityMinted = _useDerivedMintInfo.liquidityMinted,\n    poolTokenPercentage = _useDerivedMintInfo.poolTokenPercentage,\n    error = _useDerivedMintInfo.error;\n  var _useMintActionHandler = useMintActionHandlers(noLiquidity),\n    onFieldAInput = _useMintActionHandler.onFieldAInput,\n    onFieldBInput = _useMintActionHandler.onFieldBInput;\n  var isValid = !error;\n\n  // modal and loading\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showConfirm = _useState2[0],\n    setShowConfirm = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    attemptingTxn = _useState4[0],\n    setAttemptingTxn = _useState4[1]; // clicked confirm\n\n  // txn values\n  var deadline = useTransactionDeadline(); // custom from users settings\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n    _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n    allowedSlippage = _useUserSlippageToler2[0]; // custom from users\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    txHash = _useState6[0],\n    setTxHash = _useState6[1];\n\n  // get formatted amounts\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts);\n\n  // get the max amounts user can add\n  var maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(function (accumulator, field) {\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, field, maxAmountSpend(currencyBalances[field])));\n  }, {});\n  var atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(function (accumulator, field) {\n    var _maxAmounts$field, _parsedAmounts$field;\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, field, (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')));\n  }, {});\n\n  // check whether the user has approved the router on the tokens\n  var _useApproveCallback = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS),\n    _useApproveCallback2 = _slicedToArray(_useApproveCallback, 2),\n    approvalA = _useApproveCallback2[0],\n    approveACallback = _useApproveCallback2[1];\n  var _useApproveCallback3 = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS),\n    _useApproveCallback4 = _slicedToArray(_useApproveCallback3, 2),\n    approvalB = _useApproveCallback4[0],\n    approveBCallback = _useApproveCallback4[1];\n  var addTransaction = useTransactionAdder();\n  function onAdd() {\n    return _onAdd.apply(this, arguments);\n  }\n  function _onAdd() {\n    _onAdd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _amountsMin;\n      var router, parsedAmountA, parsedAmountB, amountsMin, estimate, method, args, value, _wrappedCurrency$addr, _wrappedCurrency, tokenBIsETH, _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!chainId || !library || !account)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 2:\n            router = getRouterContract(chainId, library, account);\n            parsedAmountA = parsedAmounts[Field.CURRENCY_A], parsedAmountB = parsedAmounts[Field.CURRENCY_B];\n            if (!(!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline)) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 6:\n            amountsMin = (_amountsMin = {}, _defineProperty(_amountsMin, Field.CURRENCY_A, calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0]), _defineProperty(_amountsMin, Field.CURRENCY_B, calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]), _amountsMin);\n            if (currencyA === ETHER || currencyB === ETHER) {\n              tokenBIsETH = currencyB === ETHER;\n              estimate = router.estimateGas.addLiquidityETH;\n              method = router.addLiquidityETH;\n              args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '',\n              // token\n              (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(),\n              // token desired\n              amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n              // token min\n              amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n              // eth min\n              account, deadline.toHexString()];\n              value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n            } else {\n              estimate = router.estimateGas.addLiquidity;\n              method = router.addLiquidity;\n              args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n              value = null;\n            }\n            setAttemptingTxn(true);\n            _context.next = 11;\n            return estimate.apply(void 0, _toConsumableArray(args).concat([value ? {\n              value: value\n            } : {}])).then(function (estimatedGasLimit) {\n              return method.apply(void 0, _toConsumableArray(args).concat([_objectSpread(_objectSpread({}, value ? {\n                value: value\n              } : {}), {}, {\n                gasLimit: calculateGasMargin(estimatedGasLimit)\n              })])).then(function (response) {\n                var _parsedAmounts$Field$3, _currencies$Field$CUR11, _parsedAmounts$Field$4, _currencies$Field$CUR12;\n                setAttemptingTxn(false);\n                addTransaction(response, {\n                  summary: 'Add ' + ((_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(3)) + ' ' + ((_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol) + ' and ' + ((_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(3)) + ' ' + ((_currencies$Field$CUR12 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol)\n                });\n                setTxHash(response.hash);\n              });\n            }).catch(function (error) {\n              setAttemptingTxn(false);\n              // we only care if the error is something _other_ than the user rejected the tx\n              if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                console.error(error);\n              }\n            });\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _onAdd.apply(this, arguments);\n  }\n  var modalHeader = function modalHeader() {\n    var _currencies$Field$CUR, _currencies$Field$CUR2, _currencies$Field$CUR3, _currencies$Field$CUR4;\n    return noLiquidity ? /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightCard, {\n      mt: \"20px\",\n      borderRadius: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, ((_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol) + '/' + ((_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    })))) : /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      style: {\n        marginTop: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"24px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, ((_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol) + '/' + ((_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol) + ' Pool Tokens')), /*#__PURE__*/React.createElement(TYPE.italic, {\n      fontSize: 12,\n      textAlign: \"left\",\n      padding: '8px 0 0 0 ',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, \"Output is estimated. If the price changes by more than \".concat(allowedSlippage / 100, \"% your transaction will revert.\")));\n  };\n  var modalBottom = function modalBottom() {\n    return /*#__PURE__*/React.createElement(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    });\n  };\n  var pendingText = \"Supplying \".concat((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6), \" \").concat((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol, \" and \").concat((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6), \" \").concat((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol);\n  var handleCurrencyASelect = useCallback(function (currencyA) {\n    var newCurrencyIdA = currencyId(currencyA);\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(\"/add/\".concat(currencyIdB, \"/\").concat(currencyIdA));\n    } else {\n      history.push(\"/add/\".concat(newCurrencyIdA, \"/\").concat(currencyIdB));\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  var handleCurrencyBSelect = useCallback(function (currencyB) {\n    var newCurrencyIdB = currencyId(currencyB);\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(\"/add/\".concat(currencyIdB, \"/\").concat(newCurrencyIdB));\n      } else {\n        history.push(\"/add/\".concat(newCurrencyIdB));\n      }\n    } else {\n      history.push(\"/add/\".concat(currencyIdA ? currencyIdA : 'ETH', \"/\").concat(newCurrencyIdB));\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  var handleDismissConfirmation = useCallback(function () {\n    setShowConfirm(false);\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('');\n    }\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  var isCreate = history.location.pathname.includes('/create');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddRemoveTabs, {\n    creating: isCreate,\n    adding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: showConfirm,\n    onDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: function content() {\n      return /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n        title: noLiquidity ? 'You are creating a pool' : 'You will receive',\n        onDismiss: handleDismissConfirmation,\n        topContent: modalHeader,\n        bottomContent: modalBottom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }\n      });\n    },\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, noLiquidity || (isCreate ? /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 600,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }\n  }, \"You are the first liquidity provider.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, \"The ratio of tokens you add will set the price of this pool.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  }, \"Once you are happy with the rate click supply to review.\")))) : /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, \"Tip:\"), \" When you add liquidity, you will receive pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.\"))))), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_A],\n    onUserInput: onFieldAInput,\n    onMax: function onMax() {\n      var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n      onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n    },\n    onCurrencySelect: handleCurrencyASelect,\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n    currency: currencies[Field.CURRENCY_A],\n    id: \"add-liquidity-input-tokena\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_B],\n    onUserInput: onFieldBInput,\n    onCurrencySelect: handleCurrencyBSelect,\n    onMax: function onMax() {\n      var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n      onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n    },\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n    currency: currencies[Field.CURRENCY_B],\n    id: \"add-liquidity-input-tokenb\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"0px\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    padding: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, noLiquidity ? 'Initial prices' : 'Prices', \" and pool share\")), ' ', /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"1rem\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PoolPriceBar, {\n    currencies: currencies,\n    poolTokenPercentage: poolTokenPercentage,\n    noLiquidity: noLiquidity,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  })))), !account ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, approvalA !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveACallback,\n    disabled: approvalA === ApprovalState.PENDING,\n    width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, approvalA === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol) : 'Approve ' + ((_currencies$Field$CUR8 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol)), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveBCallback,\n    disabled: approvalB === ApprovalState.PENDING,\n    width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, approvalB === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR9 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR9 === void 0 ? void 0 : _currencies$Field$CUR9.symbol) : 'Approve ' + ((_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol))), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: function onClick() {\n      expertMode ? onAdd() : setShowConfirm(true);\n    },\n    disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n    error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 19\n    }\n  }, error !== null && error !== void 0 ? error : 'Supply')))))));\n}","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","BigNumber","ETHER","React","useCallback","useContext","useState","Plus","Text","ThemeContext","ButtonError","ButtonPrimary","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","AddLiquidity","_ref","_parsedAmounts$depend","_parsedAmounts$depend2","_formattedAmounts","_this","_parsedAmounts$Field$","_currencies$Field$CUR5","_parsedAmounts$Field$2","_currencies$Field$CUR6","_currencies$Field$CUR7","_currencies$Field$CUR8","_currencies$Field$CUR9","_currencies$Field$CUR10","_ref$match$params","match","params","currencyIdA","currencyIdB","history","_useActiveWeb3React","account","chainId","library","theme","currencyA","currencyB","toggleWalletModal","expertMode","_useMintState","independentField","typedValue","otherTypedValue","_useDerivedMintInfo","undefined","dependentField","currencies","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","_useMintActionHandler","onFieldAInput","onFieldBInput","isValid","_useState","_useState2","_slicedToArray","showConfirm","setShowConfirm","_useState3","_useState4","attemptingTxn","setAttemptingTxn","deadline","_useUserSlippageToler","_useUserSlippageToler2","allowedSlippage","_useState5","_useState6","txHash","setTxHash","formattedAmounts","_defineProperty","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","_objectSpread","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","_useApproveCallback","_useApproveCallback2","approvalA","approveACallback","_useApproveCallback3","_useApproveCallback4","approvalB","approveBCallback","addTransaction","onAdd","_onAdd","apply","arguments","_asyncToGenerator","_callee","_amountsMin","router","parsedAmountA","parsedAmountB","amountsMin","estimate","args","_wrappedCurrency$addr","_wrappedCurrency","tokenBIsETH","_wrappedCurrency$addr2","_wrappedCurrency2","_wrappedCurrency$addr3","_wrappedCurrency3","_callee$","_context","estimateGas","addLiquidityETH","address","raw","toString","toHexString","from","addLiquidity","_toConsumableArray","concat","estimatedGasLimit","gasLimit","response","_parsedAmounts$Field$3","_currencies$Field$CUR11","_parsedAmounts$Field$4","_currencies$Field$CUR12","summary","symbol","hash","code","console","modalHeader","_currencies$Field$CUR","_currencies$Field$CUR2","_currencies$Field$CUR3","_currencies$Field$CUR4","createElement","gap","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mt","borderRadius","fontSize","fontWeight","lineHeight","marginRight","currency0","currency1","size","style","marginTop","italic","textAlign","padding","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","location","pathname","includes","Fragment","creating","adding","isOpen","onDismiss","content","title","topContent","bottomContent","link","color","onUserInput","onMax","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","onCurrencySelect","showMaxButton","currency","id","showCommonBases","text2","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","INVALID","subHeader","onClick","NOT_APPROVED","PENDING","APPROVED","disabled","width"],"sources":["E:/testprojects/CoolSwap-interface/src/pages/AddLiquidity/index.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\r\nimport { TransactionResponse } from '@ethersproject/providers';\r\nimport { Currency, ETHER, TokenAmount } from '@uniswap/sdk';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { Plus } from 'react-feather';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Text } from 'rebass';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { ButtonError, ButtonPrimary } from '../../components/Button';\r\nimport { LightCard } from '../../components/Card';\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\r\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\r\n\r\nimport { ROUTER_ADDRESS } from '../../constants';\r\nimport { PairState } from '../../data/Reserves';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useCurrency } from '../../hooks/Tokens';\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\r\nimport { useWalletModalToggle } from '../../state/application/hooks';\r\nimport { Field } from '../../state/mint/actions';\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\r\nimport { TYPE } from '../../theme';\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\r\nimport AppBody from '../AppBody';\r\nimport { Dots, Wrapper } from '../Pool/styleds';\r\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\r\nimport { currencyId } from '../../utils/currencyId';\r\nimport { PoolPriceBar } from './PoolPriceBar';\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React();\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const currencyA = useCurrency(currencyIdA);\r\n  const currencyB = useCurrency(currencyIdB);\r\n\r\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\r\n\r\n  const expertMode = useIsExpertMode();\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState();\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined);\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity);\r\n\r\n  const isValid = !error;\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false);\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false); // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline(); // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\r\n  const [txHash, setTxHash] = useState<string>('');\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  };\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      };\r\n    },\r\n    {}\r\n  );\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      };\r\n    },\r\n    {}\r\n  );\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return;\r\n    const router = getRouterContract(chainId, library, account);\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts;\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return;\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    };\r\n\r\n    let estimate,\r\n      method: (...args: any) => Promise<TransactionResponse>,\r\n      args: Array<string | string[] | number>,\r\n      value: BigNumber | null;\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER;\r\n      estimate = router.estimateGas.addLiquidityETH;\r\n      method = router.addLiquidityETH;\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ];\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity;\r\n      method = router.addLiquidity;\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ];\r\n      value = null;\r\n    }\r\n\r\n    setAttemptingTxn(true);\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n        }).then((response) => {\r\n          setAttemptingTxn(false);\r\n\r\n          addTransaction(response, {\r\n            summary:\r\n              'Add ' +\r\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\r\n              ' ' +\r\n              currencies[Field.CURRENCY_A]?.symbol +\r\n              ' and ' +\r\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\r\n              ' ' +\r\n              currencies[Field.CURRENCY_B]?.symbol,\r\n          });\r\n\r\n          setTxHash(response.hash);\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        setAttemptingTxn(false);\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (error?.code !== 4001) {\r\n          console.error(error);\r\n        }\r\n      });\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <AutoColumn gap=\"20px\">\r\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\r\n          <RowFlat>\r\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\r\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\r\n            </Text>\r\n            <DoubleCurrencyLogo\r\n              currency0={currencies[Field.CURRENCY_A]}\r\n              currency1={currencies[Field.CURRENCY_B]}\r\n              size={30}\r\n            />\r\n          </RowFlat>\r\n        </LightCard>\r\n      </AutoColumn>\r\n    ) : (\r\n      <AutoColumn gap=\"20px\">\r\n        <RowFlat style={{ marginTop: '20px' }}>\r\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </RowFlat>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\r\n          </Text>\r\n        </Row>\r\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\r\n          {`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </TYPE.italic>\r\n      </AutoColumn>\r\n    );\r\n  };\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    );\r\n  };\r\n\r\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencies[Field.CURRENCY_A]?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`;\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA);\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`);\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA]\r\n  );\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB);\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`);\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB]\r\n  );\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false);\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('');\r\n    }\r\n    setTxHash('');\r\n  }, [onFieldAInput, txHash]);\r\n\r\n  const isCreate = history.location.pathname.includes('/create');\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs creating={isCreate} adding={true} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity ||\r\n              (isCreate ? (\r\n                <ColumnCenter>\r\n                  <LightCard>\r\n                    <AutoColumn gap=\"10px\">\r\n                      <TYPE.link fontWeight={600} color={'primaryText1'}>\r\n                        You are the first liquidity provider.\r\n                      </TYPE.link>\r\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\r\n                        The ratio of tokens you add will set the price of this pool.\r\n                      </TYPE.link>\r\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\r\n                        Once you are happy with the rate click supply to review.\r\n                      </TYPE.link>\r\n                    </AutoColumn>\r\n                  </LightCard>\r\n                </ColumnCenter>\r\n              ) : (\r\n                <ColumnCenter>\r\n                  <LightCard>\r\n                    <AutoColumn gap=\"10px\">\r\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\r\n                        <b>Tip:</b> When you add liquidity, you will receive pool tokens representing your position.\r\n                        These tokens automatically earn fees proportional to your share of the pool, and can be redeemed\r\n                        at any time.\r\n                      </TYPE.link>\r\n                    </AutoColumn>\r\n                  </LightCard>\r\n                </ColumnCenter>\r\n              ))}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '');\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <Plus size=\"16\" color={theme.text2} />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '');\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius={'20px'}>\r\n                  <RowBetween padding=\"1rem\">\r\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\r\n                      {noLiquidity ? 'Initial prices' : 'Prices'} and pool share\r\n                    </TYPE.subHeader>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {!account ? (\r\n              <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\r\n            ) : (\r\n              <AutoColumn gap={'md'}>\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <ButtonPrimary\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\r\n                          ) : (\r\n                            'Approve ' + currencies[Field.CURRENCY_A]?.symbol\r\n                          )}\r\n                        </ButtonPrimary>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <ButtonPrimary\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\r\n                          ) : (\r\n                            'Approve ' + currencies[Field.CURRENCY_B]?.symbol\r\n                          )}\r\n                        </ButtonPrimary>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <ButtonError\r\n                  onClick={() => {\r\n                    expertMode ? onAdd() : setShowConfirm(true);\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                >\r\n                  <Text fontSize={20} fontWeight={500}>\r\n                    {error ?? 'Supply'}\r\n                  </Text>\r\n                </ButtonError>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}