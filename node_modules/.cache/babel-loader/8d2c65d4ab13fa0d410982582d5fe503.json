{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\pages\\\\Swap\\\\redirects.tsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions';\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly(_ref) {\n  var location = _ref.location;\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: _objectSpread(_objectSpread({}, location), {}, {\n      pathname: '/swap'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  });\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props) {\n  var search = props.location.search,\n    outputCurrency = props.match.params.outputCurrency;\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: _objectSpread(_objectSpread({}, props.location), {}, {\n      pathname: '/swap',\n      search: search && search.length > 1 ? \"\".concat(search, \"&outputCurrency=\").concat(outputCurrency) : \"?outputCurrency=\".concat(outputCurrency)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n}\nexport function OpenClaimAddressModalAndRedirectToSwap(props) {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM));\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(RedirectPathToSwapOnly, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"names":["React","useEffect","useDispatch","Redirect","ApplicationModal","setOpenModal","RedirectPathToSwapOnly","_ref","location","createElement","to","_objectSpread","pathname","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","RedirectToSwap","props","search","outputCurrency","match","params","length","concat","OpenClaimAddressModalAndRedirectToSwap","dispatch","ADDRESS_CLAIM","Object","assign"],"sources":["E:/testprojects/CoolSwap-interface/src/pages/Swap/redirects.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\r\nimport { AppDispatch } from '../../state';\r\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions';\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />;\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props;\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...props.location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function OpenClaimAddressModalAndRedirectToSwap(props: RouteComponentProps) {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  useEffect(() => {\r\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM));\r\n  }, [dispatch]);\r\n  return <RedirectPathToSwapOnly {...props} />;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAA6B,kBAAkB;AAEhE,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,iCAAiC;;AAEhF;AACA,OAAO,SAASC,sBAAsBA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC/C,oBAAOR,KAAA,CAAAS,aAAA,CAACN,QAAQ;IAACO,EAAE,EAAAC,aAAA,CAAAA,aAAA,KAAOH,QAAQ;MAAEI,QAAQ,EAAE;IAAO,EAAG;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAC7D;;AAEA;AACA,OAAO,SAASC,cAAcA,CAACC,KAAsD,EAAE;EACrF,IACcC,MAAM,GAIhBD,KAAK,CAJPZ,QAAQ,CAAIa,MAAM;IAENC,cAAc,GAExBF,KAAK,CAHPG,KAAK,CACHC,MAAM,CAAIF,cAAc;EAI5B,oBACEtB,KAAA,CAAAS,aAAA,CAACN,QAAQ;IACPO,EAAE,EAAAC,aAAA,CAAAA,aAAA,KACGS,KAAK,CAACZ,QAAQ;MACjBI,QAAQ,EAAE,OAAO;MACjBS,MAAM,EACJA,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,MAAAC,MAAA,CACpBL,MAAM,sBAAAK,MAAA,CAAmBJ,cAAc,uBAAAI,MAAA,CACvBJ,cAAc;IAAE,EACzC;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC;AAEN;AAEA,OAAO,SAASS,sCAAsCA,CAACP,KAA0B,EAAE;EACjF,IAAMQ,QAAQ,GAAG1B,WAAW,CAAc,CAAC;EAC3CD,SAAS,CAAC,YAAM;IACd2B,QAAQ,CAACvB,YAAY,CAACD,gBAAgB,CAACyB,aAAa,CAAC,CAAC;EACxD,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EACd,oBAAO5B,KAAA,CAAAS,aAAA,CAACH,sBAAsB,EAAAwB,MAAA,CAAAC,MAAA,KAAKX,KAAK;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAAC;AAC9C"},"metadata":{},"sourceType":"module"}