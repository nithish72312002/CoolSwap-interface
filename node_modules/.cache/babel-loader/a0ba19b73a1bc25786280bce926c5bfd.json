{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { from } from './from';\nexport function forkJoin() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  if (sources.length === 1) {\n    var first_1 = sources[0];\n    if (isArray(first_1)) {\n      return forkJoinInternal(first_1, null);\n    }\n    if (isObject(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {\n      var keys = Object.keys(first_1);\n      return forkJoinInternal(keys.map(function (key) {\n        return first_1[key];\n      }), keys);\n    }\n  }\n  if (typeof sources[sources.length - 1] === 'function') {\n    var resultSelector_1 = sources.pop();\n    sources = sources.length === 1 && isArray(sources[0]) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(map(function (args) {\n      return resultSelector_1.apply(void 0, args);\n    }));\n  }\n  return forkJoinInternal(sources, null);\n}\nfunction forkJoinInternal(sources, keys) {\n  return new Observable(function (subscriber) {\n    var len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    var values = new Array(len);\n    var completed = 0;\n    var emitted = 0;\n    var _loop_1 = function _loop_1(i) {\n      var source = from(sources[i]);\n      var hasValue = false;\n      subscriber.add(source.subscribe({\n        next: function next(value) {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: function error(err) {\n          return subscriber.error(err);\n        },\n        complete: function complete() {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ? keys.reduce(function (result, key, i) {\n                return result[key] = values[i], result;\n              }, {}) : values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    };\n    for (var i = 0; i < len; i++) {\n      _loop_1(i);\n    }\n  });\n}","map":{"version":3,"names":["Observable","isArray","map","isObject","from","forkJoin","_i","arguments","length","sources","first_1","forkJoinInternal","Object","getPrototypeOf","prototype","keys","key","resultSelector_1","pop","pipe","args","apply","subscriber","len","complete","values","Array","completed","_loop_1","i","source","hasValue","add","subscribe","next","value","emitted","error","err","reduce","result"],"sources":["../../../src/internal/observable/forkJoin.ts"],"sourcesContent":[null],"mappings":"AAAA;AAEA,SAASA,UAAS,QAAM,eAAkB;AAC1C,SAASC,OAAK,QAAM,iBAAmB;AACvC,SAASC,GAAA,QAAU,kBAAM;AAEzB,SAASC,QAAM,QAAM,kBAAS;AAsI9B,SAAMC,IAAA,QAAU,QAAQ;OACtB,SAAAC,QAAiBA,CAAA;aAAjB,KAAiB;OAAjB,IAAAC,EAAA,MAAAA,EAAA,GAAAC,SAAA,CAAiBC,MAAA,EAAAF,EAAA;;EAEjB;MACEG,OAAM,CAAAD,MAAQ,QAAQ;IACtB,IAAIE,OAAO,GAACD,OAAM,CAAE;QAClBR,OAAO,CAAAS,OAAA;MACR,OAAAC,gBAAA,CAAAD,OAAA;IAED;QACEP,QAAU,CAAAO,OAAG,CAAM,IAACE,MAAK,CAAAC,cAAO,CAAAH,OAAA,MAAAE,MAAA,CAAAE,SAAA;MAChC,IAAAC,IAAO,GAAAH,MAAA,CAAAG,IAAA,CAAgBL,OAAM;MAC9B,OAAAC,gBAAA,CAAAI,IAAA,CAAAb,GAAA,WAAAc,GAAA;QAAA,OAAAN,OAAA,CAAAM,GAAA;MAAA,IAAAD,IAAA;IACF;EAGD;MACE,OAAMN,OAAA,CAAAA,OAAc,CAAGD,MAAA,GAAQ,EAAG,KAAe;IACjD,IAAAS,gBAAmB,GAAAR,OAAW,CAACS,GAAA,CAAI;IACnCT,OAAO,GAAAA,OAAA,CAAAD,MAAiB,MAAO,IAAEP,OAAM,CAAIQ,OACrC,OAACA,OAAW,CAAK,KAAAA,OAAA;IAExB,OAAAE,gBAAA,CAAAF,OAAA,QAAAU,IAAA,CAAAjB,GAAA,WAAAkB,IAAA;MAAA,OAAAH,gBAAA,CAAAI,KAAA,SAAAD,IAAA;IAAA;EAED;EACD,OAAAT,gBAAA,CAAAF,OAAA;AAED;SACEE,gBAAqBA,CAACF,OAAA,EAAAM,IAAA;SACpB,IAASf,UAAU,CAAC,UAAOsB,UAAA;IAC3B,IAAIC,GAAG,GAAAd,OAAQ,CAAAD,MAAA;QACbe,GAAA,QAAW;MACXD,UAAO,CAAAE,QAAA;MACR;IACD;IACA,IAAIC,MAAA,GAAS,IAAIC,KAAC,CAAAH,GAAA;IAClB,IAAII,SAAO,GAAK;;QAEdC,OAAM,GAAM,SAAZA,OAAMA,CAAcC,CAAA;MACpB,IAAIC,MAAA,GAAQ1B,IAAG,CAAAK,OAAM,CAAAoB,CAAA;MACrB,IAAAE,QAAW,GAAI;gBACP,CAAAC,GAAA,CAAAF,MAAA,CAAAG,SAAK;YACT,WAAAC,KAAKC,KAAU;cACb,CAAAJ,QAAQ,EAAG;YACXA,QAAO,GAAG;YACXK,OAAA;UACD;UACDX,MAAA,CAAAI,CAAA,IAAAM,KAAA;QACD;QACAE,KAAA,WAAAA,MAAUC,GAAA;UAAA,OAAAhB,UAAA,CAAAe,KAAA,CAAAC,GAAA;QAAA;gBACR,WAAAd,SAAA,EAAY;UACZG,SAAI;cACFA,SAAI,KAAOJ,GAAK,IAAK,CAAAQ,QAAA;gBACnBK,OAAA,KAAWb,GAAI,EAAC;wBACT,CAAAW,IAAM,CAACnB,IAAA,GACZA,IAAA,CAAAwB,MAAQ,WAAAC,MAAA,EAAAxB,GAAA,EAAAa,CAAA;gBAAA,OAAAW,MAAA,CAAAxB,GAAA,IAAAS,MAAA,CAAAI,CAAA,GAAAW,MAAA;cAAA,SACXf,MAAA;YACD;YACDH,UAAA,CAAAE,QAAA;UACF;QACC;MACL;IAxBD;iBAAU,GAAAK,CAAA,GAAAN,GAAA,EAAAM,CAAA;MAwBTD,OAAA,CAAAC,CAAA;IACA;EACJ"},"metadata":{},"sourceType":"module"}