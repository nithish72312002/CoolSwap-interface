{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions';\nvar NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null\n};\nvar initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: _objectSpread({}, DEFAULT_LIST_OF_LISTS.reduce(function (memo, listUrl) {\n    memo[listUrl] = NEW_LIST_STATE;\n    return memo;\n  }, {})),\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(fetchTokenList.pending, function (state, _ref) {\n    var _ref$payload = _ref.payload,\n      requestId = _ref$payload.requestId,\n      url = _ref$payload.url;\n    state.byUrl[url] = _objectSpread(_objectSpread({\n      current: null,\n      pendingUpdate: null\n    }, state.byUrl[url]), {}, {\n      loadingRequestId: requestId,\n      error: null\n    });\n  }).addCase(fetchTokenList.fulfilled, function (state, _ref2) {\n    var _state$byUrl$url, _state$byUrl$url2;\n    var _ref2$payload = _ref2.payload,\n      requestId = _ref2$payload.requestId,\n      tokenList = _ref2$payload.tokenList,\n      url = _ref2$payload.url;\n    var current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n    var loadingRequestId = (_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId;\n\n    // no-op if update does nothing\n    if (current) {\n      var upgradeType = getVersionUpgrade(current.version, tokenList.version);\n      if (upgradeType === VersionUpgrade.NONE) return;\n      if (loadingRequestId === null || loadingRequestId === requestId) {\n        state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n          loadingRequestId: null,\n          error: null,\n          current: current,\n          pendingUpdate: tokenList\n        });\n      }\n    } else {\n      // activate if on default active\n      if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n        var _state$activeListUrls;\n        (_state$activeListUrls = state.activeListUrls) === null || _state$activeListUrls === void 0 ? void 0 : _state$activeListUrls.push(url);\n      }\n      state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n        loadingRequestId: null,\n        error: null,\n        current: tokenList,\n        pendingUpdate: null\n      });\n    }\n  }).addCase(fetchTokenList.rejected, function (state, _ref3) {\n    var _state$byUrl$url3;\n    var _ref3$payload = _ref3.payload,\n      url = _ref3$payload.url,\n      requestId = _ref3$payload.requestId,\n      errorMessage = _ref3$payload.errorMessage;\n    if (((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.loadingRequestId) !== requestId) {\n      // no-op since it's not the latest request\n      return;\n    }\n    state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n      loadingRequestId: null,\n      error: errorMessage,\n      current: null,\n      pendingUpdate: null\n    });\n  }).addCase(addList, function (state, _ref4) {\n    var url = _ref4.payload;\n    if (!state.byUrl[url]) {\n      state.byUrl[url] = NEW_LIST_STATE;\n    }\n  }).addCase(removeList, function (state, _ref5) {\n    var url = _ref5.payload;\n    if (state.byUrl[url]) {\n      delete state.byUrl[url];\n    }\n    // remove list from active urls if needed\n    if (state.activeListUrls && state.activeListUrls.includes(url)) {\n      state.activeListUrls = state.activeListUrls.filter(function (u) {\n        return u !== url;\n      });\n    }\n  }).addCase(enableList, function (state, _ref6) {\n    var url = _ref6.payload;\n    if (!state.byUrl[url]) {\n      state.byUrl[url] = NEW_LIST_STATE;\n    }\n    if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n      state.activeListUrls.push(url);\n    }\n    if (!state.activeListUrls) {\n      state.activeListUrls = [url];\n    }\n  }).addCase(disableList, function (state, _ref7) {\n    var url = _ref7.payload;\n    if (state.activeListUrls && state.activeListUrls.includes(url)) {\n      state.activeListUrls = state.activeListUrls.filter(function (u) {\n        return u !== url;\n      });\n    }\n  }).addCase(acceptListUpdate, function (state, _ref8) {\n    var _state$byUrl$url4;\n    var url = _ref8.payload;\n    if (!((_state$byUrl$url4 = state.byUrl[url]) === null || _state$byUrl$url4 === void 0 ? void 0 : _state$byUrl$url4.pendingUpdate)) {\n      throw new Error('accept list update called without pending update');\n    }\n    state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n      pendingUpdate: null,\n      current: state.byUrl[url].pendingUpdate\n    });\n  }).addCase(updateVersion, function (state) {\n    // state loaded from localStorage, but new lists have never been initialized\n    if (!state.lastInitializedDefaultListOfLists) {\n      state.byUrl = initialState.byUrl;\n      state.activeListUrls = initialState.activeListUrls;\n    } else if (state.lastInitializedDefaultListOfLists) {\n      var lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce(function (s, l) {\n        return s.add(l);\n      }, new Set());\n      var newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce(function (s, l) {\n        return s.add(l);\n      }, new Set());\n      DEFAULT_LIST_OF_LISTS.forEach(function (listUrl) {\n        if (!lastInitializedSet.has(listUrl)) {\n          state.byUrl[listUrl] = NEW_LIST_STATE;\n        }\n      });\n      state.lastInitializedDefaultListOfLists.forEach(function (listUrl) {\n        if (!newListOfListsSet.has(listUrl)) {\n          delete state.byUrl[listUrl];\n        }\n      });\n    }\n    state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS;\n\n    // if no active lists, activate defaults\n    if (!state.activeListUrls) {\n      state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS;\n\n      // for each list on default list, initialize if needed\n      DEFAULT_ACTIVE_LIST_URLS.map(function (listUrl) {\n        if (!state.byUrl[listUrl]) {\n          state.byUrl[listUrl] = NEW_LIST_STATE;\n        }\n        return true;\n      });\n    }\n  });\n});","map":{"version":3,"names":["DEFAULT_ACTIVE_LIST_URLS","createReducer","getVersionUpgrade","VersionUpgrade","DEFAULT_LIST_OF_LISTS","updateVersion","acceptListUpdate","addList","fetchTokenList","removeList","enableList","disableList","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","_objectSpread","reduce","memo","listUrl","activeListUrls","builder","addCase","pending","state","_ref","_ref$payload","payload","requestId","url","fulfilled","_ref2","_state$byUrl$url","_state$byUrl$url2","_ref2$payload","tokenList","upgradeType","version","NONE","includes","_state$activeListUrls","push","rejected","_ref3","_state$byUrl$url3","_ref3$payload","errorMessage","_ref4","_ref5","filter","u","_ref6","_ref7","_ref8","_state$byUrl$url4","Error","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has","map"],"sources":["E:/testprojects/CoolSwap-interface/src/state/lists/reducer.ts"],"sourcesContent":["import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\r\nimport { TokenList } from '@uniswap/token-lists/dist/types';\r\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists';\r\nimport { updateVersion } from '../global/actions';\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions';\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null;\r\n      readonly pendingUpdate: TokenList | null;\r\n      readonly loadingRequestId: string | null;\r\n      readonly error: string | null;\r\n    };\r\n  };\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[];\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined;\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string];\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n};\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] };\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE;\r\n      return memo;\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      };\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current;\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId;\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version);\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return;\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current: current,\r\n            pendingUpdate: tokenList,\r\n          };\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url);\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        };\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return;\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      };\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE;\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url];\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url);\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE;\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url);\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url];\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url);\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update');\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      };\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl;\r\n        state.activeListUrls = initialState.activeListUrls;\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set()\r\n        );\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set());\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE;\r\n          }\r\n        });\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl];\r\n          }\r\n        });\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS;\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS;\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE;\r\n          }\r\n          return true;\r\n        });\r\n      }\r\n    })\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}