{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RxWebSocket = exports.ConnectionState = void 0;\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar ConnectionState;\n(function (ConnectionState) {\n  ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n  ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n  ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n/**\n * Rx-ified WebSocket\n */\nvar RxWebSocket = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param url WebSocket server URL\n   * @param [WebSocketClass] Custom WebSocket implementation\n   */\n  function RxWebSocket(url) {\n    var WebSocketClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebSocket;\n    _classCallCheck(this, RxWebSocket);\n    this.WebSocketClass = WebSocketClass;\n    this.webSocket = null;\n    this.connectionStateSubject = new rxjs_1.BehaviorSubject(ConnectionState.DISCONNECTED);\n    this.incomingDataSubject = new rxjs_1.Subject();\n    this.url = url.replace(/^http/, \"ws\");\n  }\n  /**\n   * Make a websocket connection\n   * @returns an Observable that completes when connected\n   */\n  _createClass(RxWebSocket, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n      if (this.webSocket) {\n        return (0, rxjs_1.throwError)(new Error(\"webSocket object is not null\"));\n      }\n      return new rxjs_1.Observable(function (obs) {\n        var webSocket;\n        try {\n          _this.webSocket = webSocket = new _this.WebSocketClass(_this.url);\n        } catch (err) {\n          obs.error(err);\n          return;\n        }\n        _this.connectionStateSubject.next(ConnectionState.CONNECTING);\n        webSocket.onclose = function (evt) {\n          _this.clearWebSocket();\n          obs.error(new Error(\"websocket error \".concat(evt.code, \": \").concat(evt.reason)));\n          _this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n        };\n        webSocket.onopen = function (_) {\n          obs.next();\n          obs.complete();\n          _this.connectionStateSubject.next(ConnectionState.CONNECTED);\n        };\n        webSocket.onmessage = function (evt) {\n          _this.incomingDataSubject.next(evt.data);\n        };\n      }).pipe((0, operators_1.take)(1));\n    }\n    /**\n     * Disconnect from server\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var webSocket = this.webSocket;\n      if (!webSocket) {\n        return;\n      }\n      this.clearWebSocket();\n      this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n      try {\n        webSocket.close();\n      } catch (_a) {}\n    }\n    /**\n     * Emit current connection state and subsequent changes\n     * @returns an Observable for the connection state\n     */\n  }, {\n    key: \"connectionState$\",\n    get: function get() {\n      return this.connectionStateSubject.asObservable();\n    }\n    /**\n     * Emit incoming data from server\n     * @returns an Observable for the data received\n     */\n  }, {\n    key: \"incomingData$\",\n    get: function get() {\n      return this.incomingDataSubject.asObservable();\n    }\n    /**\n     * Emit incoming JSON data from server. non-JSON data are ignored\n     * @returns an Observable for parsed JSON data\n     */\n  }, {\n    key: \"incomingJSONData$\",\n    get: function get() {\n      return this.incomingData$.pipe((0, operators_1.flatMap)(function (m) {\n        var j;\n        try {\n          j = JSON.parse(m);\n        } catch (err) {\n          return (0, rxjs_1.empty)();\n        }\n        return (0, rxjs_1.of)(j);\n      }));\n    }\n    /**\n     * Send data to server\n     * @param data text to send\n     */\n  }, {\n    key: \"sendData\",\n    value: function sendData(data) {\n      var webSocket = this.webSocket;\n      if (!webSocket) {\n        throw new Error(\"websocket is not connected\");\n      }\n      webSocket.send(data);\n    }\n  }, {\n    key: \"clearWebSocket\",\n    value: function clearWebSocket() {\n      var webSocket = this.webSocket;\n      if (!webSocket) {\n        return;\n      }\n      this.webSocket = null;\n      webSocket.onclose = null;\n      webSocket.onerror = null;\n      webSocket.onmessage = null;\n      webSocket.onopen = null;\n    }\n  }]);\n  return RxWebSocket;\n}();\nexports.RxWebSocket = RxWebSocket;","map":{"version":3,"names":["_classCallCheck","require","_createClass","Object","defineProperty","exports","value","RxWebSocket","ConnectionState","rxjs_1","operators_1","url","WebSocketClass","arguments","length","undefined","WebSocket","webSocket","connectionStateSubject","BehaviorSubject","DISCONNECTED","incomingDataSubject","Subject","replace","key","connect","_this","throwError","Error","Observable","obs","err","error","next","CONNECTING","onclose","evt","clearWebSocket","concat","code","reason","onopen","_","complete","CONNECTED","onmessage","data","pipe","take","disconnect","close","_a","get","asObservable","incomingData$","flatMap","m","j","JSON","parse","empty","of","sendData","send","onerror"],"sources":["E:/testprojects/CoolSwap-interface/node_modules/walletlink/dist/connection/RxWebSocket.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RxWebSocket = exports.ConnectionState = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n/**\n * Rx-ified WebSocket\n */\nclass RxWebSocket {\n    /**\n     * Constructor\n     * @param url WebSocket server URL\n     * @param [WebSocketClass] Custom WebSocket implementation\n     */\n    constructor(url, WebSocketClass = WebSocket) {\n        this.WebSocketClass = WebSocketClass;\n        this.webSocket = null;\n        this.connectionStateSubject = new rxjs_1.BehaviorSubject(ConnectionState.DISCONNECTED);\n        this.incomingDataSubject = new rxjs_1.Subject();\n        this.url = url.replace(/^http/, \"ws\");\n    }\n    /**\n     * Make a websocket connection\n     * @returns an Observable that completes when connected\n     */\n    connect() {\n        if (this.webSocket) {\n            return (0, rxjs_1.throwError)(new Error(\"webSocket object is not null\"));\n        }\n        return new rxjs_1.Observable(obs => {\n            let webSocket;\n            try {\n                this.webSocket = webSocket = new this.WebSocketClass(this.url);\n            }\n            catch (err) {\n                obs.error(err);\n                return;\n            }\n            this.connectionStateSubject.next(ConnectionState.CONNECTING);\n            webSocket.onclose = evt => {\n                this.clearWebSocket();\n                obs.error(new Error(`websocket error ${evt.code}: ${evt.reason}`));\n                this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n            };\n            webSocket.onopen = _ => {\n                obs.next();\n                obs.complete();\n                this.connectionStateSubject.next(ConnectionState.CONNECTED);\n            };\n            webSocket.onmessage = evt => {\n                this.incomingDataSubject.next(evt.data);\n            };\n        }).pipe((0, operators_1.take)(1));\n    }\n    /**\n     * Disconnect from server\n     */\n    disconnect() {\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.clearWebSocket();\n        this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n        try {\n            webSocket.close();\n        }\n        catch (_a) { }\n    }\n    /**\n     * Emit current connection state and subsequent changes\n     * @returns an Observable for the connection state\n     */\n    get connectionState$() {\n        return this.connectionStateSubject.asObservable();\n    }\n    /**\n     * Emit incoming data from server\n     * @returns an Observable for the data received\n     */\n    get incomingData$() {\n        return this.incomingDataSubject.asObservable();\n    }\n    /**\n     * Emit incoming JSON data from server. non-JSON data are ignored\n     * @returns an Observable for parsed JSON data\n     */\n    get incomingJSONData$() {\n        return this.incomingData$.pipe((0, operators_1.flatMap)(m => {\n            let j;\n            try {\n                j = JSON.parse(m);\n            }\n            catch (err) {\n                return (0, rxjs_1.empty)();\n            }\n            return (0, rxjs_1.of)(j);\n        }));\n    }\n    /**\n     * Send data to server\n     * @param data text to send\n     */\n    sendData(data) {\n        const { webSocket } = this;\n        if (!webSocket) {\n            throw new Error(\"websocket is not connected\");\n        }\n        webSocket.send(data);\n    }\n    clearWebSocket() {\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.webSocket = null;\n        webSocket.onclose = null;\n        webSocket.onerror = null;\n        webSocket.onmessage = null;\n        webSocket.onopen = null;\n    }\n}\nexports.RxWebSocket = RxWebSocket;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}