{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar URI_AVAILABLE = 'URI_AVAILABLE';\nvar UserRejectedRequestError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(UserRejectedRequestError, _Error);\n  function UserRejectedRequestError() {\n    var _this;\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    _this.message = 'The user rejected the request.';\n    return _this;\n  }\n  return UserRejectedRequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar WalletConnectConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(WalletConnectConnector, _AbstractConnector);\n  function WalletConnectConnector(_ref) {\n    var _this2;\n    var rpc = _ref.rpc,\n      bridge = _ref.bridge,\n      qrcode = _ref.qrcode,\n      pollingInterval = _ref.pollingInterval;\n    !(Object.keys(rpc).length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '@walletconnect/web3-provider is broken with >1 chainId, please use 1') : invariant(false) : void 0;\n    _this2 = _AbstractConnector.call(this, {\n      supportedChainIds: Object.keys(rpc).map(function (k) {\n        return Number(k);\n      })\n    }) || this;\n    _this2.rpc = rpc;\n    _this2.bridge = bridge;\n    _this2.qrcode = qrcode;\n    _this2.pollingInterval = pollingInterval;\n    _this2.handleChainChanged = _this2.handleChainChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleAccountsChanged = _this2.handleAccountsChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleDisconnect = _this2.handleDisconnect.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  var _proto = WalletConnectConnector.prototype;\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId: chainId\n    });\n  };\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    this.emitUpdate({\n      account: accounts[0]\n    });\n  };\n  _proto.handleDisconnect = function handleDisconnect() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'disconnect' event\");\n    }\n    this.emitDeactivate(); // we have to do this because of a @walletconnect/web3-provider bug\n\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop();\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n      this.walletConnectProvider = undefined;\n    }\n    this.emitDeactivate();\n  };\n  _proto.activate = function activate() {\n    try {\n      var _temp5 = function _temp5() {\n        function _temp2() {\n          return Promise.resolve(_this4.walletConnectProvider.enable().then(function (accounts) {\n            return accounts[0];\n          })[\"catch\"](function (error) {\n            // TODO ideally this would be a better check\n            if (error.message === 'User closed modal') {\n              throw new UserRejectedRequestError();\n            }\n            throw error;\n          })).then(function (account) {\n            _this4.walletConnectProvider.on('disconnect', _this4.handleDisconnect);\n            _this4.walletConnectProvider.on('chainChanged', _this4.handleChainChanged);\n            _this4.walletConnectProvider.on('accountsChanged', _this4.handleAccountsChanged);\n            return {\n              provider: _this4.walletConnectProvider,\n              account: account\n            };\n          });\n        }\n        var _temp = function () {\n          if (!_this4.walletConnectProvider.wc.connected) {\n            return Promise.resolve(_this4.walletConnectProvider.wc.createSession({\n              chainId: Number(Object.keys(_this4.rpc)[0])\n            })).then(function () {\n              _this4.emit(URI_AVAILABLE, _this4.walletConnectProvider.wc.uri);\n            });\n          }\n        }();\n\n        // ensure that the uri is going to be available, and emit an event if there's a new uri\n        return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n      };\n      var _this4 = this;\n      var _temp6 = function () {\n        if (!_this4.walletConnectProvider) {\n          return Promise.resolve(import('@walletconnect/web3-provider')).then(function (_ref2) {\n            var WalletConnectProvider = _ref2[\"default\"];\n            _this4.walletConnectProvider = new WalletConnectProvider({\n              bridge: _this4.bridge,\n              rpc: _this4.rpc,\n              qrcode: _this4.qrcode,\n              pollingInterval: _this4.pollingInterval\n            });\n          });\n        }\n      }();\n      return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this6 = this;\n      return Promise.resolve(_this6.walletConnectProvider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this8 = this;\n      return Promise.resolve(_this8.walletConnectProvider.send('eth_chainId'));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this10 = this;\n      return Promise.resolve(_this10.walletConnectProvider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop();\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect);\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n    }\n  };\n  _proto.close = function close() {\n    try {\n      var _this12$walletConnect;\n      var _this12 = this;\n      return Promise.resolve((_this12$walletConnect = _this12.walletConnectProvider) == null ? void 0 : _this12$walletConnect.close()).then(function () {});\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return WalletConnectConnector;\n}(AbstractConnector);\nexport { URI_AVAILABLE, UserRejectedRequestError, WalletConnectConnector };","map":{"version":3,"names":["URI_AVAILABLE","UserRejectedRequestError","_Error","_inheritsLoose","_this","call","name","constructor","message","_wrapNativeSuper","Error","WalletConnectConnector","_AbstractConnector","_ref","rpc","bridge","qrcode","pollingInterval","Object","keys","length","process","env","NODE_ENV","invariant","_this2","supportedChainIds","map","k","Number","handleChainChanged","bind","_assertThisInitialized","handleAccountsChanged","handleDisconnect","_proto","prototype","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","undefined","activate","_this4","enable","then","error","on","provider","wc","connected","createSession","emit","uri","_ref2","WalletConnectProvider","e","Promise","reject","getProvider","resolve","_this6","getChainId","_this8","send","getAccount","_this10","deactivate","close","_this12","_this12$walletConnect","AbstractConnector"],"sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\ninterface WalletConnectConnectorArguments {\n  rpc: { [chainId: number]: string }\n  bridge?: string\n  qrcode?: boolean\n  pollingInterval?: number\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly rpc: { [chainId: number]: string }\n  private readonly bridge?: string\n  private readonly qrcode?: boolean\n  private readonly pollingInterval?: number\n\n  public walletConnectProvider?: any\n\n  constructor({ rpc, bridge, qrcode, pollingInterval }: WalletConnectConnectorArguments) {\n    invariant(Object.keys(rpc).length === 1, '@walletconnect/web3-provider is broken with >1 chainId, please use 1')\n    super({ supportedChainIds: Object.keys(rpc).map(k => Number(k)) })\n\n    this.rpc = rpc\n    this.bridge = bridge\n    this.qrcode = qrcode\n    this.pollingInterval = pollingInterval\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const { default: WalletConnectProvider } = await import('@walletconnect/web3-provider')\n      this.walletConnectProvider = new WalletConnectProvider({\n        bridge: this.bridge,\n        rpc: this.rpc,\n        qrcode: this.qrcode,\n        pollingInterval: this.pollingInterval\n      })\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({ chainId: Number(Object.keys(this.rpc)[0]) })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}