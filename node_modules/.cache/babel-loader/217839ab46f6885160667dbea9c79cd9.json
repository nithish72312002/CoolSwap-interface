{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n  return function (source) {\n    return source.lift(new CountOperator(predicate, source));\n  };\n}\nvar CountOperator = /*@__PURE__*/function () {\n  function CountOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n  CountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  };\n  return CountOperator;\n}();\nvar CountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CountSubscriber, _super);\n  function CountSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.count = 0;\n    _this.index = 0;\n    return _this;\n  }\n  CountSubscriber.prototype._next = function (value) {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  };\n  CountSubscriber.prototype._tryPredicate = function (value) {\n    var result;\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.count++;\n    }\n  };\n  CountSubscriber.prototype._complete = function () {\n    this.destination.next(this.count);\n    this.destination.complete();\n  };\n  return CountSubscriber;\n}(Subscriber);","map":{"version":3,"names":["tslib_1","Subscriber","count","predicate","source","lift","CountOperator","prototype","call","subscriber","subscribe","CountSubscriber","_super","__extends","destination","_this","_next","value","_tryPredicate","result","index","err","error","_complete","next","complete"],"sources":["../../../src/internal/operators/count.ts"],"sourcesContent":[null],"mappings":";AAGA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA6D3B,SAAMC,UAAU,QAAS,eAAuE;OAC9F,SAAOC,KAACA,CAAAC,SAA0B;EACnC,iBAAAC,MAAA;IAAA,OAAAA,MAAA,CAAAC,IAAA,KAAAC,aAAA,CAAAH,SAAA,EAAAC,MAAA;EAAA;AAED;IACEE,aAAA,gBAAoB,YACsB;WADtBA,cAAAH,SAAuE,EAAAC,MAAA;IACvE,KAAAD,SAAA,GAAAA,SAAsB;IACzC,KAAAC,MAAA,GAAAA,MAAA;EAED;eACS,CAAAG,SAAO,CAAAC,IAAU,aAAIC,UAAgB,EAAAL,MAAU,EAAE;IACzD,OAAAA,MAAA,CAAAM,SAAA,KAAAC,eAAA,CAAAF,UAAA,OAAAN,SAAA,OAAAC,MAAA;EACH;EARA,OAQCE,aAAA;AAOD;IAAiCK,eAAA,0BAAaC,MAAA;EAI5CZ,OAAA,CAAAa,SAAA,CAAAF,eAAY,EAAAC,MACQ;WADpBD,eAGEA,CAAAG,WAAM,EAAAX,SAAY,EAAAC,MACnB;IAHmB,IAAAW,KAAA,GAAAH,MAAA,CAAAJ,IAAA,KAAuE,EAAAM,WAAA;IACvEC,KAAA,CAAAZ,SAAA,GAAAA,SAAsB;IALlCY,KAAA,CAAAX,MAAK,GAAYA,MAAC;IAClBW,KAAA,CAAAb,KAAK,GAAW,CAAC;;IAMxB,OAAAa,KAAA;EAES;iBACC,CAAAR,SAAW,CAAAS,KAAA,aAAAC,KAAA;QAClB,IAAI,CAACd,SAAA;MACN,KAAAe,aAAA,CAAAD,KAAA;WACC;MACD,KAAAf,KAAA;IACF;EAEO;iBACU,CAAAK,SAAA,CAAAW,aAAA,aAAAD,KAAA;IAEhB,IAAIE,MAAA;QACF;MACDA,MAAA,QAAAhB,SAAA,CAAAc,KAAA,OAAAG,KAAA,SAAAhB,MAAA;IAAC,E,OACAiB,GAAK;MACL,KAAAP,WAAO,CAAAQ,KAAA,CAAAD,GAAA;MACR;IAED;QACEF,MAAK;MACN,KAAAjB,KAAA;IACF;EAES;iBACH,CAAAK,SAAgB,CAACgB,SAAK,GAAO;IAClC,IAAI,CAACT,WAAW,CAACU,IAAA,KAAQ,CAAEtB,KAAC;IAC7B,KAAAY,WAAA,CAAAW,QAAA;EACH;EArCiC,OAAAd,eAqChC"},"metadata":{},"sourceType":"module"}