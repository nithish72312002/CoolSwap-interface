{"ast":null,"code":"import { isAddress } from '../../utils';\nexport function filterTokens(tokens, search) {\n  if (search.length === 0) return tokens;\n  var searchingAddress = isAddress(search);\n  if (searchingAddress) {\n    return tokens.filter(function (token) {\n      return token.address === searchingAddress;\n    });\n  }\n  var lowerSearchParts = search.toLowerCase().split(/\\s+/).filter(function (s) {\n    return s.length > 0;\n  });\n  if (lowerSearchParts.length === 0) {\n    return tokens;\n  }\n  var matchesSearch = function matchesSearch(s) {\n    var sParts = s.toLowerCase().split(/\\s+/).filter(function (s) {\n      return s.length > 0;\n    });\n    return lowerSearchParts.every(function (p) {\n      return p.length === 0 || sParts.some(function (sp) {\n        return sp.startsWith(p) || sp.endsWith(p);\n      });\n    });\n  };\n  return tokens.filter(function (token) {\n    var symbol = token.symbol,\n      name = token.name;\n    return symbol && matchesSearch(symbol) || name && matchesSearch(name);\n  });\n  // .sort((t0: Token, t1: Token) => {\n  //   if (t0.symbol && matchesSearch(t0.symbol) && t1.symbol && !matchesSearch(t1.symbol)) {\n  //     return -1\n  //   }\n  //   if (t0.symbol && !matchesSearch(t0.symbol) && t1.symbol && matchesSearch(t1.symbol)) {\n  //     return 1\n  //   }\n  //   return 0\n  // })\n}","map":{"version":3,"names":["isAddress","filterTokens","tokens","search","length","searchingAddress","filter","token","address","lowerSearchParts","toLowerCase","split","s","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","symbol","name"],"sources":["E:/testprojects/CoolSwap-interface/src/components/SearchModal/filtering.ts"],"sourcesContent":["import { isAddress } from '../../utils';\r\nimport { Token } from '@uniswap/sdk';\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens;\r\n\r\n  const searchingAddress = isAddress(search);\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress);\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0);\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens;\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0);\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)));\r\n  };\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token;\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name));\r\n  });\r\n  // .sort((t0: Token, t1: Token) => {\r\n  //   if (t0.symbol && matchesSearch(t0.symbol) && t1.symbol && !matchesSearch(t1.symbol)) {\r\n  //     return -1\r\n  //   }\r\n  //   if (t0.symbol && !matchesSearch(t0.symbol) && t1.symbol && matchesSearch(t1.symbol)) {\r\n  //     return 1\r\n  //   }\r\n  //   return 0\r\n  // })\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AAGvC,OAAO,SAASC,YAAYA,CAACC,MAAe,EAAEC,MAAc,EAAW;EACrE,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOF,MAAM;EAEtC,IAAMG,gBAAgB,GAAGL,SAAS,CAACG,MAAM,CAAC;EAE1C,IAAIE,gBAAgB,EAAE;IACpB,OAAOH,MAAM,CAACI,MAAM,CAAC,UAACC,KAAK;MAAA,OAAKA,KAAK,CAACC,OAAO,KAAKH,gBAAgB;IAAA,EAAC;EACrE;EAEA,IAAMI,gBAAgB,GAAGN,MAAM,CAC5BO,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,KAAK,CAAC,CACZL,MAAM,CAAC,UAACM,CAAC;IAAA,OAAKA,CAAC,CAACR,MAAM,GAAG,CAAC;EAAA,EAAC;EAE9B,IAAIK,gBAAgB,CAACL,MAAM,KAAK,CAAC,EAAE;IACjC,OAAOF,MAAM;EACf;EAEA,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAID,CAAS,EAAc;IAC5C,IAAME,MAAM,GAAGF,CAAC,CACbF,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,KAAK,CAAC,CACZL,MAAM,CAAC,UAACM,CAAC;MAAA,OAAKA,CAAC,CAACR,MAAM,GAAG,CAAC;IAAA,EAAC;IAE9B,OAAOK,gBAAgB,CAACM,KAAK,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACZ,MAAM,KAAK,CAAC,IAAIU,MAAM,CAACG,IAAI,CAAC,UAACC,EAAE;QAAA,OAAKA,EAAE,CAACC,UAAU,CAACH,CAAC,CAAC,IAAIE,EAAE,CAACE,QAAQ,CAACJ,CAAC,CAAC;MAAA,EAAC;IAAA,EAAC;EACjH,CAAC;EAED,OAAOd,MAAM,CAACI,MAAM,CAAC,UAACC,KAAK,EAAK;IAC9B,IAAQc,MAAM,GAAWd,KAAK,CAAtBc,MAAM;MAAEC,IAAI,GAAKf,KAAK,CAAde,IAAI;IACpB,OAAQD,MAAM,IAAIR,aAAa,CAACQ,MAAM,CAAC,IAAMC,IAAI,IAAIT,aAAa,CAACS,IAAI,CAAE;EAC3E,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module"}