{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { parse } from 'qs';\nimport { updateUserDarkMode } from '../state/user/actions';\nexport default function DarkModeQueryParamReader(_ref) {\n  var search = _ref.location.search;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!search) return;\n    if (search.length < 2) return;\n    var parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    var theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: false\n      }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: true\n      }));\n    }\n  }, [dispatch, search]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","parse","updateUserDarkMode","DarkModeQueryParamReader","_ref","search","location","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"sources":["E:/testprojects/CoolSwap-interface/src/theme/DarkModeQueryParamReader.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { parse } from 'qs';\r\nimport { AppDispatch } from '../state';\r\nimport { updateUserDarkMode } from '../state/user/actions';\r\n\r\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  useEffect(() => {\r\n    if (!search) return;\r\n    if (search.length < 2) return;\r\n\r\n    const parsed = parse(search, {\r\n      parseArrays: false,\r\n      ignoreQueryPrefix: true,\r\n    });\r\n\r\n    const theme = parsed.theme;\r\n\r\n    if (typeof theme !== 'string') return;\r\n\r\n    if (theme.toLowerCase() === 'light') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: false }));\r\n    } else if (theme.toLowerCase() === 'dark') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: true }));\r\n    }\r\n  }, [dispatch, search]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,KAAK,QAAQ,IAAI;AAE1B,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,eAAe,SAASC,wBAAwBA,CAAAC,IAAA,EAAsD;EAAA,IAAvCC,MAAM,GAAAD,IAAA,CAAlBE,QAAQ,CAAID,MAAM;EACnE,IAAME,QAAQ,GAAGP,WAAW,CAAc,CAAC;EAE3CD,SAAS,CAAC,YAAM;IACd,IAAI,CAACM,MAAM,EAAE;IACb,IAAIA,MAAM,CAACG,MAAM,GAAG,CAAC,EAAE;IAEvB,IAAMC,MAAM,GAAGR,KAAK,CAACI,MAAM,EAAE;MAC3BK,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,IAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;IAE1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAE/B,IAAIA,KAAK,CAACC,WAAW,CAAC,CAAC,KAAK,OAAO,EAAE;MACnCN,QAAQ,CAACL,kBAAkB,CAAC;QAAEY,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM,IAAIF,KAAK,CAACC,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;MACzCN,QAAQ,CAACL,kBAAkB,CAAC;QAAEY,YAAY,EAAE;MAAK,CAAC,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACP,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module"}