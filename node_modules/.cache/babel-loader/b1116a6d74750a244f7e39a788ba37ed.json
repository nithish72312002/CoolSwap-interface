{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline() {\n  var ttl = useSelector(function (state) {\n    return state.user.userDeadline;\n  });\n  var blockTimestamp = useCurrentBlockTimestamp();\n  return useMemo(function () {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n    return undefined;\n  }, [blockTimestamp, ttl]);\n}","map":{"version":3,"names":["useMemo","useSelector","useCurrentBlockTimestamp","useTransactionDeadline","ttl","state","user","userDeadline","blockTimestamp","add","undefined"],"sources":["E:/testprojects/CoolSwap-interface/src/hooks/useTransactionDeadline.ts"],"sourcesContent":["import { BigNumber } from 'ethers';\r\nimport { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../state';\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline);\r\n  const blockTimestamp = useCurrentBlockTimestamp();\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\r\n    return undefined;\r\n  }, [blockTimestamp, ttl]);\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,wBAAwB,MAAM,4BAA4B;;AAEjE;AACA,eAAe,SAASC,sBAAsBA,CAAA,EAA0B;EACtE,IAAMC,GAAG,GAAGH,WAAW,CAAmB,UAACI,KAAK;IAAA,OAAKA,KAAK,CAACC,IAAI,CAACC,YAAY;EAAA,EAAC;EAC7E,IAAMC,cAAc,GAAGN,wBAAwB,CAAC,CAAC;EACjD,OAAOF,OAAO,CAAC,YAAM;IACnB,IAAIQ,cAAc,IAAIJ,GAAG,EAAE,OAAOI,cAAc,CAACC,GAAG,CAACL,GAAG,CAAC;IACzD,OAAOM,SAAS;EAClB,CAAC,EAAE,CAACF,cAAc,EAAEJ,GAAG,CAAC,CAAC;AAC3B"},"metadata":{},"sourceType":"module"}