{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period, scheduler) {\n  if (period === void 0) {\n    period = 0;\n  }\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n  return new Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, {\n      subscriber: subscriber,\n      counter: 0,\n      period: period\n    }));\n    return subscriber;\n  });\n}\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n    counter = state.counter,\n    period = state.period;\n  subscriber.next(counter);\n  this.schedule({\n    subscriber: subscriber,\n    counter: counter + 1,\n    period: period\n  }, period);\n}","map":{"version":3,"names":["Observable","async","isNumeric","interval","period","scheduler","schedule","subscriber","add","dispatch","counter"],"sources":["../../../src/internal/observable/interval.ts"],"sourcesContent":[null],"mappings":"AAAA;AACA,SAASA,UAAO,QAAM,eAAoB;AAE1C,SAASC,KAAA,QAAW,oBAAM;AAmD1B,SAAMC,SAAU,QAAS,mBACgC;OADhC,SAAAC,SAAAC,MAAA,EAAAC,SAAU;EACV,IAAAD,MAAA;IACnBA,MAAC,IAAS;;MAEbC,SAAA;IAEGA,SAAC,GAASJ,KAAI;;MAEjB,CAAAC,SAAA,CAAAE,MAAA,KAAAA,MAAA;IAEDA,MAAO,GAAI;;MAIT,CAAAC,SAAO,WAAWA,SAAA,CAAAC,QAAA;IACjBD,SAAA,GAAAJ,KAAA;EACJ;EAED,OAAS,IAAAD,UAAmE,WAAAO,UAAA;IAClEA,UAAA,CAAAC,GAAA,CAAAH,SAAA,CAAAC,QAAY,CAAAG,QAAA,EAAAL,MAAA;MAAOG,UAAE,EAAAA,UAAA;MAAiBG,OAAA;MAAAN,MAAA,EAAAA;IAAA;IAC9C,OAAWG,UAAK;EAChB;AACF"},"metadata":{},"sourceType":"module"}