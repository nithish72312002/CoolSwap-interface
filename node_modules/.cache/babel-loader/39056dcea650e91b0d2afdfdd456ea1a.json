{"ast":null,"code":"import _defineProperty from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\testprojects\\\\CoolSwap-interface\\\\src\\\\pages\\\\Swap\\\\index.tsx\";\nimport { JSBI, Token } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button';\nimport Card, { GreyCard } from '../../components/Card';\nimport Column, { AutoColumn } from '../../components/Column';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport TradePrice from '../../components/swap/TradePrice';\nimport TokenWarningModal from '../../components/TokenWarningModal';\nimport ProgressSteps from '../../components/ProgressSteps';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\nimport { LinkStyledButton, TYPE } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { ClickableText } from '../Pool/styleds';\nimport Loader from '../../components/Loader';\nexport default function Swap() {\n  var _ref3, _ref4, _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _formattedAmounts, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n  var loadedUrlParams = useDefaultsFromURLSearch();\n\n  // token warning stuff\n  var _ref = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)],\n    loadedInputCurrency = _ref[0],\n    loadedOutputCurrency = _ref[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    dismissTokenWarning = _useState2[0],\n    setDismissTokenWarning = _useState2[1];\n  var urlLoadedTokens = useMemo(function () {\n    var _filter, _ref2;\n    return (_filter = (_ref2 = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref2 === void 0 ? void 0 : _ref2.filter(function (c) {\n      return c instanceof Token;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  var handleConfirmTokenWarning = useCallback(function () {\n    setDismissTokenWarning(true);\n  }, []);\n\n  // dismiss warning if all imported tokens are in active lists\n  var defaultTokens = useAllTokens();\n  var importTokensNotInDefault = urlLoadedTokens && urlLoadedTokens.filter(function (token) {\n    return !Boolean(token.address in defaultTokens);\n  });\n  var _useActiveWeb3React = useActiveWeb3React(),\n    account = _useActiveWeb3React.account;\n  var theme = useContext(ThemeContext);\n\n  // toggle wallet when disconnected\n  var toggleWalletModal = useWalletModalToggle();\n\n  // for expert mode\n  var toggleSettings = useToggleSettingsMenu();\n  var _useExpertModeManager = useExpertModeManager(),\n    _useExpertModeManager2 = _slicedToArray(_useExpertModeManager, 1),\n    isExpertMode = _useExpertModeManager2[0];\n\n  // get custom setting values for user\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n    _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n    allowedSlippage = _useUserSlippageToler2[0];\n\n  // swap state\n  var _useSwapState = useSwapState(),\n    independentField = _useSwapState.independentField,\n    typedValue = _useSwapState.typedValue,\n    recipient = _useSwapState.recipient;\n  var _useDerivedSwapInfo = useDerivedSwapInfo(),\n    v2Trade = _useDerivedSwapInfo.v2Trade,\n    currencyBalances = _useDerivedSwapInfo.currencyBalances,\n    parsedAmount = _useDerivedSwapInfo.parsedAmount,\n    currencies = _useDerivedSwapInfo.currencies,\n    swapInputError = _useDerivedSwapInfo.inputError;\n  var _useWrapCallback = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue),\n    wrapType = _useWrapCallback.wrapType,\n    onWrap = _useWrapCallback.execute,\n    wrapInputError = _useWrapCallback.inputError;\n  var showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  var trade = showWrap ? undefined : v2Trade;\n  var parsedAmounts = showWrap ? (_ref3 = {}, _defineProperty(_ref3, Field.INPUT, parsedAmount), _defineProperty(_ref3, Field.OUTPUT, parsedAmount), _ref3) : (_ref4 = {}, _defineProperty(_ref4, Field.INPUT, independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount), _defineProperty(_ref4, Field.OUTPUT, independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount), _ref4);\n  var _useSwapActionHandler = useSwapActionHandlers(),\n    onSwitchTokens = _useSwapActionHandler.onSwitchTokens,\n    onCurrencySelection = _useSwapActionHandler.onCurrencySelection,\n    onUserInput = _useSwapActionHandler.onUserInput,\n    onChangeRecipient = _useSwapActionHandler.onChangeRecipient;\n  var isValid = !swapInputError;\n  var dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  var handleTypeInput = useCallback(function (value) {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  var handleTypeOutput = useCallback(function (value) {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  var _useState3 = useState({\n      showConfirm: false,\n      tradeToConfirm: undefined,\n      attemptingTxn: false,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    _useState4$ = _useState4[0],\n    showConfirm = _useState4$.showConfirm,\n    tradeToConfirm = _useState4$.tradeToConfirm,\n    swapErrorMessage = _useState4$.swapErrorMessage,\n    attemptingTxn = _useState4$.attemptingTxn,\n    txHash = _useState4$.txHash,\n    setSwapState = _useState4[1];\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts);\n  var route = trade === null || trade === void 0 ? void 0 : trade.route;\n  var userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  var noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  var _useApproveCallbackFr = useApproveCallbackFromTrade(trade, allowedSlippage),\n    _useApproveCallbackFr2 = _slicedToArray(_useApproveCallbackFr, 2),\n    approval = _useApproveCallbackFr2[0],\n    approveCallback = _useApproveCallbackFr2[1];\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    approvalSubmitted = _useState6[0],\n    setApprovalSubmitted = _useState6[1];\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(function () {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  var maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  var atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput)));\n\n  // the callback to execute the swap\n  var _useSwapCallback = useSwapCallback(trade, allowedSlippage, recipient),\n    swapCallback = _useSwapCallback.callback,\n    swapCallbackError = _useSwapCallback.error;\n  var _computeTradePriceBre = computeTradePriceBreakdown(trade),\n    priceImpactWithoutFee = _computeTradePriceBre.priceImpactWithoutFee;\n  var _useUserSingleHopOnly = useUserSingleHopOnly(),\n    _useUserSingleHopOnly2 = _slicedToArray(_useUserSingleHopOnly, 1),\n    singleHopOnly = _useUserSingleHopOnly2[0];\n  var handleSwap = useCallback(function () {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm: tradeToConfirm,\n      showConfirm: showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(function (hash) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(function (error) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, showConfirm]);\n\n  // errors\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showInverted = _useState8[0],\n    setShowInverted = _useState8[1];\n\n  // warnings on slippage\n  var priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  var showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  var handleConfirmDismiss = useCallback(function () {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm: tradeToConfirm,\n      attemptingTxn: attemptingTxn,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  var handleAcceptChanges = useCallback(function () {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash,\n      attemptingTxn: attemptingTxn,\n      showConfirm: showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  var handleInputSelect = useCallback(function (inputCurrency) {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  var handleMaxInput = useCallback(function () {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  var handleOutputSelect = useCallback(function (outputCurrency) {\n    return onCurrencySelection(Field.OUTPUT, outputCurrency);\n  }, [onCurrencySelection]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TokenWarningModal, {\n    isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n    tokens: importTokensNotInDefault,\n    onConfirm: handleConfirmTokenWarning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SwapPoolTabs, {\n    active: 'swap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwapHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    id: \"swap-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmSwapModal, {\n    isOpen: showConfirm,\n    trade: trade,\n    originalTrade: tradeToConfirm,\n    onAcceptChanges: handleAcceptChanges,\n    attemptingTxn: attemptingTxn,\n    txHash: txHash,\n    recipient: recipient,\n    allowedSlippage: allowedSlippage,\n    onConfirm: handleSwap,\n    swapErrorMessage: swapErrorMessage,\n    onDismiss: handleConfirmDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    label: independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From',\n    value: formattedAmounts[Field.INPUT],\n    showMaxButton: !atMaxAmountInput,\n    currency: currencies[Field.INPUT],\n    onUserInput: handleTypeInput,\n    onMax: handleMaxInput,\n    onCurrencySelect: handleInputSelect,\n    otherCurrency: currencies[Field.OUTPUT],\n    id: \"swap-currency-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: isExpertMode ? 'space-between' : 'center',\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    onClick: function onClick() {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onSwitchTokens();\n    },\n    color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  })), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"add-recipient-button\",\n    onClick: function onClick() {\n      return onChangeRecipient('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"+ Add a send (optional)\") : null)), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.OUTPUT],\n    onUserInput: handleTypeOutput,\n    label: independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To',\n    showMaxButton: false,\n    currency: currencies[Field.OUTPUT],\n    onCurrencySelect: handleOutputSelect,\n    otherCurrency: currencies[Field.INPUT],\n    id: \"swap-currency-output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }), recipient !== null && !showWrap ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-between\",\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"remove-recipient-button\",\n    onClick: function onClick() {\n      return onChangeRecipient(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, \"- Remove send\")), /*#__PURE__*/React.createElement(AddressInputPanel, {\n    id: \"recipient\",\n    value: recipient,\n    onChange: onChangeRecipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  })) : null, showWrap ? null : /*#__PURE__*/React.createElement(Card, {\n    padding: showWrap ? '.25rem 1rem 0 1rem' : '0px',\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    style: {\n      padding: '3px 4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, Boolean(trade) && /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TradePrice, {\n    price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n    showInverted: showInverted,\n    setShowInverted: setShowInverted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, \"Slippage Tolerance\"), /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, allowedSlippage / 100, \"%\"))))), /*#__PURE__*/React.createElement(BottomGrouping, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, !account ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : showWrap ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: Boolean(wrapInputError),\n    onClick: onWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/React.createElement(GreyCard, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    mb: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, \"Insufficient liquidity for this trade.\"), singleHopOnly && /*#__PURE__*/React.createElement(TYPE.main, {\n    mb: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 35\n    }\n  }, \"Try enabling multi-hop trades.\")) : showApproveFlow ? /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    onClick: approveCallback,\n    disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n    width: \"48%\",\n    altDisabledStyle: approval === ApprovalState.PENDING // show solid button while waiting\n    ,\n    confirmed: approval === ApprovalState.APPROVED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(AutoRow, {\n    gap: \"6px\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, \"Approving \", /*#__PURE__*/React.createElement(Loader, {\n    stroke: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 33\n    }\n  })) : approvalSubmitted && approval === ApprovalState.APPROVED ? 'Approved' : 'Approve ' + ((_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol)), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: function onClick() {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    width: \"48%\",\n    id: \"swap-button\",\n    disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n    error: isValid && priceImpactSeverity > 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, priceImpactSeverity > 3 && !isExpertMode ? \"Price Impact High\" : \"Swap\".concat(priceImpactSeverity > 2 ? ' Anyway' : '')))) : /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: function onClick() {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    id: \"swap-button\",\n    disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n    error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, swapInputError ? swapInputError : priceImpactSeverity > 3 && !isExpertMode ? \"Price Impact Too High\" : \"Swap\".concat(priceImpactSeverity > 2 ? ' Anyway' : ''))), showApproveFlow && /*#__PURE__*/React.createElement(Column, {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ProgressSteps, {\n    steps: [approval === ApprovalState.APPROVED],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }\n  })), isExpertMode && swapErrorMessage ? /*#__PURE__*/React.createElement(SwapCallbackError, {\n    error: swapErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 49\n    }\n  }) : null)), trade && /*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown, {\n    trade: trade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  })));\n}","map":{"version":3,"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonPrimary","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","SwapHeader","AdvancedSwapDetailsDropdown","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Loader","Swap","_ref3","_ref4","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_formattedAmounts","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","loadedUrlParams","_ref","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","_useState","_useState2","_slicedToArray","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","_filter","_ref2","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","_useActiveWeb3React","account","theme","toggleWalletModal","toggleSettings","_useExpertModeManager","_useExpertModeManager2","isExpertMode","_useUserSlippageToler","_useUserSlippageToler2","allowedSlippage","_useSwapState","independentField","typedValue","recipient","_useDerivedSwapInfo","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","_useWrapCallback","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","_defineProperty","inputAmount","outputAmount","_useSwapActionHandler","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","_useState3","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","_useState4","_useState4$","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","_useApproveCallbackFr","_useApproveCallbackFr2","approval","approveCallback","_useState5","_useState6","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","_useSwapCallback","swapCallback","callback","swapCallbackError","error","_computeTradePriceBre","priceImpactWithoutFee","_useUserSingleHopOnly","_useUserSingleHopOnly2","singleHopOnly","handleSwap","then","hash","catch","message","_useState7","_useState8","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","createElement","Fragment","isOpen","length","tokens","onConfirm","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","active","id","originalTrade","onAcceptChanges","onDismiss","gap","label","showMaxButton","currency","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","onChange","borderRadius","align","fontWeight","fontSize","price","executionPrice","disabled","WRAP","UNWRAP","textAlign","main","mb","width","altDisabledStyle","confirmed","stroke","symbol","concat","marginTop","steps"],"sources":["E:/testprojects/CoolSwap-interface/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { ArrowDown } from 'react-feather';\r\nimport { Text } from 'rebass';\r\nimport { ThemeContext } from 'styled-components';\r\nimport AddressInputPanel from '../../components/AddressInputPanel';\r\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button';\r\nimport Card, { GreyCard } from '../../components/Card';\r\nimport Column, { AutoColumn } from '../../components/Column';\r\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\r\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\r\nimport { AutoRow, RowBetween } from '../../components/Row';\r\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\r\nimport TradePrice from '../../components/swap/TradePrice';\r\nimport TokenWarningModal from '../../components/TokenWarningModal';\r\nimport ProgressSteps from '../../components/ProgressSteps';\r\nimport SwapHeader from '../../components/swap/SwapHeader';\r\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\r\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\r\nimport { Field } from '../../state/swap/actions';\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks';\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\r\nimport { LinkStyledButton, TYPE } from '../../theme';\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\r\nimport AppBody from '../AppBody';\r\nimport { ClickableText } from '../Pool/styleds';\r\nimport Loader from '../../components/Loader';\r\n\r\nexport default function Swap() {\r\n  const loadedUrlParams = useDefaultsFromURLSearch();\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ];\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false);\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  );\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true);\r\n  }, []);\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens();\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !Boolean(token.address in defaultTokens);\r\n    });\r\n\r\n  const { account } = useActiveWeb3React();\r\n  const theme = useContext(ThemeContext);\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  // for expert mode\r\n  const toggleSettings = useToggleSettingsMenu();\r\n  const [isExpertMode] = useExpertModeManager();\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance();\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState();\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo();\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\r\n\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\r\n  const trade = showWrap ? undefined : v2Trade;\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      };\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers();\r\n  const isValid = !swapInputError;\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value);\r\n    },\r\n    [onUserInput]\r\n  );\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value);\r\n    },\r\n    [onUserInput]\r\n  );\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean;\r\n    tradeToConfirm: Trade | undefined;\r\n    attemptingTxn: boolean;\r\n    swapErrorMessage: string | undefined;\r\n    txHash: string | undefined;\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  });\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  };\r\n\r\n  const route = trade?.route;\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  );\r\n  const noRoute = !route;\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true);\r\n    }\r\n  }, [approval, approvalSubmitted]);\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT]);\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput));\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient);\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly();\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return;\r\n    }\r\n    if (!swapCallback) {\r\n      return;\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined });\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash });\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          showConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        });\r\n      });\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, showConfirm]);\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false);\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode);\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash });\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '');\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm });\r\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency);\r\n    },\r\n    [onCurrencySelection]\r\n  );\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\r\n  }, [maxAmountInput, onUserInput]);\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\r\n    [onCurrencySelection]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TokenWarningModal\r\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\r\n        tokens={importTokensNotInDefault}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <SwapPoolTabs active={'swap'} />\r\n      <AppBody>\r\n        <SwapHeader />\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n\r\n          <AutoColumn gap={'md'}>\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDown\r\n                    size=\"16\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\r\n                      onSwitchTokens();\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    + Add a send (optional)\r\n                  </LinkStyledButton>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDown size=\"16\" color={theme.text2} />\r\n                  </ArrowWrapper>\r\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    - Remove send\r\n                  </LinkStyledButton>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <Card padding={showWrap ? '.25rem 1rem 0 1rem' : '0px'} borderRadius={'20px'}>\r\n                <AutoColumn gap=\"8px\" style={{ padding: '3px 4px' }}>\r\n                  {Boolean(trade) && (\r\n                    <RowBetween align=\"center\">\r\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\r\n                        Price\r\n                      </Text>\r\n                      <TradePrice\r\n                        price={trade?.executionPrice}\r\n                        showInverted={showInverted}\r\n                        setShowInverted={setShowInverted}\r\n                      />\r\n                    </RowBetween>\r\n                  )}\r\n                  <RowBetween align=\"center\">\r\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\r\n                      Slippage Tolerance\r\n                    </ClickableText>\r\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\r\n                      {allowedSlippage / 100}%\r\n                    </ClickableText>\r\n                  </RowBetween>\r\n                </AutoColumn>\r\n              </Card>\r\n            )}\r\n          </AutoColumn>\r\n\r\n          <BottomGrouping>\r\n            {!account ? (\r\n              <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\r\n            ) : showWrap ? (\r\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </ButtonPrimary>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\r\n                {singleHopOnly && <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <ButtonConfirmed\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\r\n                  confirmed={approval === ApprovalState.APPROVED}\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      Approving <Loader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    'Approved'\r\n                  ) : (\r\n                    'Approve ' + currencies[Field.INPUT]?.symbol\r\n                  )}\r\n                </ButtonConfirmed>\r\n                <ButtonError\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap();\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined,\r\n                      });\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                  error={isValid && priceImpactSeverity > 2}\r\n                >\r\n                  <Text fontSize={16} fontWeight={500}>\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Text>\r\n                </ButtonError>\r\n              </RowBetween>\r\n            ) : (\r\n              <ButtonError\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap();\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      showConfirm: true,\r\n                      txHash: undefined,\r\n                    });\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\r\n              >\r\n                <Text fontSize={20} fontWeight={500}>\r\n                  {swapInputError\r\n                    ? swapInputError\r\n                    : priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                </Text>\r\n              </ButtonError>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </BottomGrouping>\r\n        </Wrapper>\r\n\r\n        {trade && <AdvancedSwapDetailsDropdown trade={trade} />}\r\n      </AppBody>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}