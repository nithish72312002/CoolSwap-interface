{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { addPopup, ApplicationModal, removePopup, setOpenModal } from './actions';\nexport function useBlockNumber() {\n  var _useActiveWeb3React = useActiveWeb3React(),\n    chainId = _useActiveWeb3React.chainId;\n  return useSelector(function (state) {\n    return state.application.blockNumber[chainId !== null && chainId !== void 0 ? chainId : -1];\n  });\n}\nexport function useModalOpen(modal) {\n  var openModal = useSelector(function (state) {\n    return state.application.openModal;\n  });\n  return openModal === modal;\n}\nexport function useToggleModal(modal) {\n  var open = useModalOpen(modal);\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(setOpenModal(open ? null : modal));\n  }, [dispatch, modal, open]);\n}\nexport function useOpenModal(modal) {\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(setOpenModal(modal));\n  }, [dispatch, modal]);\n}\nexport function useCloseModals() {\n  var dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(setOpenModal(null));\n  }, [dispatch]);\n}\nexport function useWalletModalToggle() {\n  return useToggleModal(ApplicationModal.WALLET);\n}\nexport function useToggleSettingsMenu() {\n  return useToggleModal(ApplicationModal.SETTINGS);\n}\nexport function useShowClaimPopup() {\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\n}\nexport function useToggleShowClaimPopup() {\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\n}\nexport function useToggleSelfClaimModal() {\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\n}\nexport function useToggleDelegateModal() {\n  return useToggleModal(ApplicationModal.DELEGATE);\n}\nexport function useToggleVoteModal() {\n  return useToggleModal(ApplicationModal.VOTE);\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup() {\n  var dispatch = useDispatch();\n  return useCallback(function (content, key) {\n    dispatch(addPopup({\n      content: content,\n      key: key\n    }));\n  }, [dispatch]);\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup() {\n  var dispatch = useDispatch();\n  return useCallback(function (key) {\n    dispatch(removePopup({\n      key: key\n    }));\n  }, [dispatch]);\n}\n\n// get the list of active popups\nexport function useActivePopups() {\n  var list = useSelector(function (state) {\n    return state.application.popupList;\n  });\n  return useMemo(function () {\n    return list.filter(function (item) {\n      return item.show;\n    });\n  }, [list]);\n}","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useActiveWeb3React","addPopup","ApplicationModal","removePopup","setOpenModal","useBlockNumber","_useActiveWeb3React","chainId","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useOpenModal","useCloseModals","useWalletModalToggle","WALLET","useToggleSettingsMenu","SETTINGS","useShowClaimPopup","CLAIM_POPUP","useToggleShowClaimPopup","useToggleSelfClaimModal","SELF_CLAIM","useToggleDelegateModal","DELEGATE","useToggleVoteModal","VOTE","useAddPopup","content","key","useRemovePopup","useActivePopups","list","popupList","filter","item","show"],"sources":["E:/testprojects/CoolSwap-interface/src/state/application/hooks.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal);\r\n  return openModal === modal;\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS);\r\n}\r\n\r\nexport function useShowClaimPopup(): boolean {\r\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleShowClaimPopup(): () => void {\r\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleSelfClaimModal(): () => void {\r\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\r\n}\r\n\r\nexport function useToggleDelegateModal(): () => void {\r\n  return useToggleModal(ApplicationModal.DELEGATE);\r\n}\r\n\r\nexport function useToggleVoteModal(): () => void {\r\n  return useToggleModal(ApplicationModal.VOTE);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }));\r\n    },\r\n    [dispatch]\r\n  );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }));\r\n    },\r\n    [dispatch]\r\n  );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList);\r\n  return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}