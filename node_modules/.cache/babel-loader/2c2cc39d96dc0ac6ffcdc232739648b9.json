{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateObject = exports.createHmacDrbg = exports.bitMask = exports.bitSet = exports.bitGet = exports.bitLen = exports.utf8ToBytes = exports.equalBytes = exports.concatBytes = exports.ensureBytes = exports.numberToVarBytesBE = exports.numberToBytesLE = exports.numberToBytesBE = exports.bytesToNumberLE = exports.bytesToNumberBE = exports.hexToBytes = exports.hexToNumber = exports.numberToHexUnpadded = exports.bytesToHex = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nvar _0n = BigInt(0);\nvar _1n = BigInt(1);\nvar _2n = BigInt(2);\nvar u8a = function u8a(a) {\n  return a instanceof Uint8Array;\n};\nvar hexes = Array.from({\n  length: 256\n}, function (v, i) {\n  return i.toString(16).padStart(2, '0');\n});\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  var hex = '';\n  for (var i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\nexports.bytesToHex = bytesToHex;\nfunction numberToHexUnpadded(num) {\n  var hex = num.toString(16);\n  return hex.length & 1 ? \"0\".concat(hex) : hex;\n}\nexports.numberToHexUnpadded = numberToHexUnpadded;\nfunction hexToNumber(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : \"0x\".concat(hex));\n}\nexports.hexToNumber = hexToNumber;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  var len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  var array = new Uint8Array(len / 2);\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    var hexByte = hex.slice(j, j + 2);\n    var byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\nexports.hexToBytes = hexToBytes;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n  return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction bytesToNumberLE(bytes) {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexports.bytesToNumberLE = bytesToNumberLE;\nfunction numberToBytesBE(n, len) {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\nfunction numberToBytesLE(n, len) {\n  return numberToBytesBE(n, len).reverse();\n}\nexports.numberToBytesLE = numberToBytesLE;\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n  return hexToBytes(numberToHexUnpadded(n));\n}\nexports.numberToVarBytesBE = numberToVarBytesBE;\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n  var res;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(\"\".concat(title, \" must be valid hex string, got \\\"\").concat(hex, \"\\\". Cause: \").concat(e));\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(\"\".concat(title, \" must be hex string or Uint8Array\"));\n  }\n  var len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength) throw new Error(\"\".concat(title, \" expected \").concat(expectedLength, \" bytes, got \").concat(len));\n  return res;\n}\nexports.ensureBytes = ensureBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  var r = new Uint8Array(arrays.reduce(function (sum, a) {\n    return sum + a.length;\n  }, 0));\n  var pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach(function (a) {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\nexports.concatBytes = concatBytes;\nfunction equalBytes(b1, b2) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (var i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\nexports.equalBytes = equalBytes;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error(\"utf8ToBytes expected string, got \".concat(typeof str));\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexports.utf8ToBytes = utf8ToBytes;\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n  var len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\nexports.bitLen = bitLen;\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n  return n >> BigInt(pos) & _1n;\n}\nexports.bitGet = bitGet;\n/**\n * Sets single bit at position.\n */\nvar bitSet = function bitSet(n, pos, value) {\n  return n | (value ? _1n : _0n) << BigInt(pos);\n};\nexports.bitSet = bitSet;\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nvar bitMask = function bitMask(n) {\n  return (_2n << BigInt(n - 1)) - _1n;\n};\nexports.bitMask = bitMask;\n// DRBG\nvar u8n = function u8n(data) {\n  return new Uint8Array(data);\n}; // creates Uint8Array\nvar u8fr = function u8fr(arr) {\n  return Uint8Array.from(arr);\n}; // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  var v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  var k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  var i = 0; // Iterations counter, will throw when over 1000\n  var reset = function reset() {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  var h = function h() {\n    for (var _len2 = arguments.length, b = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      b[_key2] = arguments[_key2];\n    }\n    return hmacFn.apply(void 0, [k, v].concat(b));\n  }; // hmac(k)(v, ...values)\n  var reseed = function reseed() {\n    var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : u8n();\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n\n  var gen = function gen() {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    var len = 0;\n    var out = [];\n    while (len < qByteLen) {\n      v = h();\n      var sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes.apply(void 0, out);\n  };\n  var genUntil = function genUntil(seed, pred) {\n    reset();\n    reseed(seed); // Steps D-G\n    var res = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\nexports.createHmacDrbg = createHmacDrbg;\n// Validating curves and fields\nvar validatorFns = {\n  bigint: function bigint(val) {\n    return typeof val === 'bigint';\n  },\n  function: function _function(val) {\n    return typeof val === 'function';\n  },\n  boolean: function boolean(val) {\n    return typeof val === 'boolean';\n  },\n  string: function string(val) {\n    return typeof val === 'string';\n  },\n  isSafeInteger: function isSafeInteger(val) {\n    return Number.isSafeInteger(val);\n  },\n  array: function array(val) {\n    return Array.isArray(val);\n  },\n  field: function field(val, object) {\n    return object.Fp.isValid(val);\n  },\n  hash: function hash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n  }\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators) {\n  var optValidators = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var checkField = function checkField(fieldName, type, isOptional) {\n    var checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error(\"Invalid validator \\\"\".concat(type, \"\\\", expected function\"));\n    var val = object[fieldName];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\"Invalid param \".concat(String(fieldName), \"=\").concat(val, \" (\").concat(typeof val, \"), expected \").concat(type));\n    }\n  };\n  for (var _i = 0, _Object$entries = Object.entries(validators); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      fieldName = _Object$entries$_i[0],\n      type = _Object$entries$_i[1];\n    checkField(fieldName, type, false);\n  }\n  for (var _i2 = 0, _Object$entries2 = Object.entries(optValidators); _i2 < _Object$entries2.length; _i2++) {\n    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n      _fieldName = _Object$entries2$_i[0],\n      _type = _Object$entries2$_i[1];\n    checkField(_fieldName, _type, true);\n  }\n  return object;\n}\nexports.validateObject = validateObject;\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });","map":{"version":3,"names":["_0n","BigInt","_1n","_2n","u8a","a","Uint8Array","hexes","Array","from","length","v","i","toString","padStart","bytesToHex","bytes","Error","hex","exports","numberToHexUnpadded","num","concat","hexToNumber","hexToBytes","len","array","j","hexByte","slice","byte","Number","parseInt","isNaN","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","n","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","res","e","concatBytes","_len","arguments","arrays","_key","r","reduce","sum","pad","forEach","set","equalBytes","b1","b2","utf8ToBytes","str","TextEncoder","encode","bitLen","bitGet","pos","bitSet","value","bitMask","u8n","data","u8fr","arr","createHmacDrbg","hashLen","qByteLen","hmacFn","k","reset","fill","h","_len2","b","_key2","apply","reseed","seed","undefined","gen","out","sl","push","genUntil","pred","validatorFns","bigint","val","function","_function","boolean","string","isSafeInteger","isArray","field","object","Fp","isValid","hash","outputLen","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","_i2","_Object$entries2","_Object$entries2$_i"],"sources":["../src/abstract/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}