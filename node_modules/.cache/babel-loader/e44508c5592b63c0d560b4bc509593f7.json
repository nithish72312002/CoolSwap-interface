{"ast":null,"code":"import _classCallCheck from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { id } from \"./id\";\nvar padding = new Uint8Array(32);\npadding.fill(0);\nvar NegativeOne = BigNumber.from(-1);\nvar Zero = BigNumber.from(0);\nvar One = BigNumber.from(1);\nvar MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n  var bytes = arrayify(value);\n  var padOffset = bytes.length % 32;\n  if (padOffset) {\n    return hexConcat([bytes, padding.slice(padOffset)]);\n  }\n  return hexlify(bytes);\n}\nvar hexTrue = hexZeroPad(One.toHexString(), 32);\nvar hexFalse = hexZeroPad(Zero.toHexString(), 32);\nvar domainFieldTypes = {\n  name: \"string\",\n  version: \"string\",\n  chainId: \"uint256\",\n  verifyingContract: \"address\",\n  salt: \"bytes32\"\n};\nvar domainFieldNames = [\"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"];\nfunction checkString(key) {\n  return function (value) {\n    if (typeof value !== \"string\") {\n      logger.throwArgumentError(\"invalid domain value for \".concat(JSON.stringify(key)), \"domain.\".concat(key), value);\n    }\n    return value;\n  };\n}\nvar domainChecks = {\n  name: checkString(\"name\"),\n  version: checkString(\"version\"),\n  chainId: function chainId(value) {\n    try {\n      return BigNumber.from(value).toString();\n    } catch (error) {}\n    return logger.throwArgumentError(\"invalid domain value for \\\"chainId\\\"\", \"domain.chainId\", value);\n  },\n  verifyingContract: function verifyingContract(value) {\n    try {\n      return getAddress(value).toLowerCase();\n    } catch (error) {}\n    return logger.throwArgumentError(\"invalid domain value \\\"verifyingContract\\\"\", \"domain.verifyingContract\", value);\n  },\n  salt: function salt(value) {\n    try {\n      var bytes = arrayify(value);\n      if (bytes.length !== 32) {\n        throw new Error(\"bad length\");\n      }\n      return hexlify(bytes);\n    } catch (error) {}\n    return logger.throwArgumentError(\"invalid domain value \\\"salt\\\"\", \"domain.salt\", value);\n  }\n};\nfunction getBaseEncoder(type) {\n  // intXX and uintXX\n  {\n    var match = type.match(/^(u?)int(\\d*)$/);\n    if (match) {\n      var signed = match[1] === \"\";\n      var width = parseInt(match[2] || \"256\");\n      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n        logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n      }\n      var boundsUpper = MaxUint256.mask(signed ? width - 1 : width);\n      var boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n      return function (value) {\n        var v = BigNumber.from(value);\n        if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n          logger.throwArgumentError(\"value out-of-bounds for \".concat(type), \"value\", value);\n        }\n        return hexZeroPad(v.toTwos(256).toHexString(), 32);\n      };\n    }\n  }\n  // bytesXX\n  {\n    var _match = type.match(/^bytes(\\d+)$/);\n    if (_match) {\n      var _width = parseInt(_match[1]);\n      if (_width === 0 || _width > 32 || _match[1] !== String(_width)) {\n        logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n      }\n      return function (value) {\n        var bytes = arrayify(value);\n        if (bytes.length !== _width) {\n          logger.throwArgumentError(\"invalid length for \".concat(type), \"value\", value);\n        }\n        return hexPadRight(value);\n      };\n    }\n  }\n  switch (type) {\n    case \"address\":\n      return function (value) {\n        return hexZeroPad(getAddress(value), 32);\n      };\n    case \"bool\":\n      return function (value) {\n        return !value ? hexFalse : hexTrue;\n      };\n    case \"bytes\":\n      return function (value) {\n        return keccak256(value);\n      };\n    case \"string\":\n      return function (value) {\n        return id(value);\n      };\n  }\n  return null;\n}\nfunction encodeType(name, fields) {\n  return \"\".concat(name, \"(\").concat(fields.map(function (_ref) {\n    var name = _ref.name,\n      type = _ref.type;\n    return type + \" \" + name;\n  }).join(\",\"), \")\");\n}\nexport var TypedDataEncoder = /*#__PURE__*/function () {\n  function TypedDataEncoder(types) {\n    _classCallCheck(this, TypedDataEncoder);\n    defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n    defineReadOnly(this, \"_encoderCache\", {});\n    defineReadOnly(this, \"_types\", {});\n    // Link struct types to their direct child structs\n    var links = {};\n    // Link structs to structs which contain them as a child\n    var parents = {};\n    // Link all subtypes within a given struct\n    var subtypes = {};\n    Object.keys(types).forEach(function (type) {\n      links[type] = {};\n      parents[type] = [];\n      subtypes[type] = {};\n    });\n    var _loop = function _loop(name) {\n      var uniqueNames = {};\n      types[name].forEach(function (field) {\n        // Check each field has a unique name\n        if (uniqueNames[field.name]) {\n          logger.throwArgumentError(\"duplicate variable name \".concat(JSON.stringify(field.name), \" in \").concat(JSON.stringify(name)), \"types\", types);\n        }\n        uniqueNames[field.name] = true;\n        // Get the base type (drop any array specifiers)\n        var baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n        if (baseType === name) {\n          logger.throwArgumentError(\"circular type reference to \".concat(JSON.stringify(baseType)), \"types\", types);\n        }\n        // Is this a base encoding type?\n        var encoder = getBaseEncoder(baseType);\n        if (encoder) {\n          return;\n        }\n        if (!parents[baseType]) {\n          logger.throwArgumentError(\"unknown type \".concat(JSON.stringify(baseType)), \"types\", types);\n        }\n        // Add linkage\n        parents[baseType].push(name);\n        links[name][baseType] = true;\n      });\n    };\n    for (var name in types) {\n      _loop(name);\n    }\n    // Deduce the primary type\n    var primaryTypes = Object.keys(parents).filter(function (n) {\n      return parents[n].length === 0;\n    });\n    if (primaryTypes.length === 0) {\n      logger.throwArgumentError(\"missing primary type\", \"types\", types);\n    } else if (primaryTypes.length > 1) {\n      logger.throwArgumentError(\"ambiguous primary types or unused types: \".concat(primaryTypes.map(function (t) {\n        return JSON.stringify(t);\n      }).join(\", \")), \"types\", types);\n    }\n    defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n    // Check for circular type references\n    function checkCircular(type, found) {\n      if (found[type]) {\n        logger.throwArgumentError(\"circular type reference to \".concat(JSON.stringify(type)), \"types\", types);\n      }\n      found[type] = true;\n      Object.keys(links[type]).forEach(function (child) {\n        if (!parents[child]) {\n          return;\n        }\n        // Recursively check children\n        checkCircular(child, found);\n        // Mark all ancestors as having this decendant\n        Object.keys(found).forEach(function (subtype) {\n          subtypes[subtype][child] = true;\n        });\n      });\n      delete found[type];\n    }\n    checkCircular(this.primaryType, {});\n    // Compute each fully describe type\n    for (var _name in subtypes) {\n      var st = Object.keys(subtypes[_name]);\n      st.sort();\n      this._types[_name] = encodeType(_name, types[_name]) + st.map(function (t) {\n        return encodeType(t, types[t]);\n      }).join(\"\");\n    }\n  }\n  _createClass(TypedDataEncoder, [{\n    key: \"getEncoder\",\n    value: function getEncoder(type) {\n      var encoder = this._encoderCache[type];\n      if (!encoder) {\n        encoder = this._encoderCache[type] = this._getEncoder(type);\n      }\n      return encoder;\n    }\n  }, {\n    key: \"_getEncoder\",\n    value: function _getEncoder(type) {\n      var _this = this;\n      // Basic encoder type (address, bool, uint256, etc)\n      {\n        var encoder = getBaseEncoder(type);\n        if (encoder) {\n          return encoder;\n        }\n      }\n      // Array\n      var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n      if (match) {\n        var subtype = match[1];\n        var subEncoder = this.getEncoder(subtype);\n        var length = parseInt(match[3]);\n        return function (value) {\n          if (length >= 0 && value.length !== length) {\n            logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n          }\n          var result = value.map(subEncoder);\n          if (_this._types[subtype]) {\n            result = result.map(keccak256);\n          }\n          return keccak256(hexConcat(result));\n        };\n      }\n      // Struct\n      var fields = this.types[type];\n      if (fields) {\n        var encodedType = id(this._types[type]);\n        return function (value) {\n          var values = fields.map(function (_ref2) {\n            var name = _ref2.name,\n              type = _ref2.type;\n            var result = _this.getEncoder(type)(value[name]);\n            if (_this._types[type]) {\n              return keccak256(result);\n            }\n            return result;\n          });\n          values.unshift(encodedType);\n          return hexConcat(values);\n        };\n      }\n      return logger.throwArgumentError(\"unknown type: \".concat(type), \"type\", type);\n    }\n  }, {\n    key: \"encodeType\",\n    value: function encodeType(name) {\n      var result = this._types[name];\n      if (!result) {\n        logger.throwArgumentError(\"unknown type: \".concat(JSON.stringify(name)), \"name\", name);\n      }\n      return result;\n    }\n  }, {\n    key: \"encodeData\",\n    value: function encodeData(type, value) {\n      return this.getEncoder(type)(value);\n    }\n  }, {\n    key: \"hashStruct\",\n    value: function hashStruct(name, value) {\n      return keccak256(this.encodeData(name, value));\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      return this.encodeData(this.primaryType, value);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash(value) {\n      return this.hashStruct(this.primaryType, value);\n    }\n  }, {\n    key: \"_visit\",\n    value: function _visit(type, value, callback) {\n      var _this2 = this;\n      // Basic encoder type (address, bool, uint256, etc)\n      {\n        var encoder = getBaseEncoder(type);\n        if (encoder) {\n          return callback(type, value);\n        }\n      }\n      // Array\n      var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n      if (match) {\n        var subtype = match[1];\n        var length = parseInt(match[3]);\n        if (length >= 0 && value.length !== length) {\n          logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n        }\n        return value.map(function (v) {\n          return _this2._visit(subtype, v, callback);\n        });\n      }\n      // Struct\n      var fields = this.types[type];\n      if (fields) {\n        return fields.reduce(function (accum, _ref3) {\n          var name = _ref3.name,\n            type = _ref3.type;\n          accum[name] = _this2._visit(type, value[name], callback);\n          return accum;\n        }, {});\n      }\n      return logger.throwArgumentError(\"unknown type: \".concat(type), \"type\", type);\n    }\n  }, {\n    key: \"visit\",\n    value: function visit(value, callback) {\n      return this._visit(this.primaryType, value, callback);\n    }\n  }], [{\n    key: \"from\",\n    value: function from(types) {\n      return new TypedDataEncoder(types);\n    }\n  }, {\n    key: \"getPrimaryType\",\n    value: function getPrimaryType(types) {\n      return TypedDataEncoder.from(types).primaryType;\n    }\n  }, {\n    key: \"hashStruct\",\n    value: function hashStruct(name, types, value) {\n      return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n  }, {\n    key: \"hashDomain\",\n    value: function hashDomain(domain) {\n      var domainFields = [];\n      for (var name in domain) {\n        var type = domainFieldTypes[name];\n        if (!type) {\n          logger.throwArgumentError(\"invalid typed-data domain key: \".concat(JSON.stringify(name)), \"domain\", domain);\n        }\n        domainFields.push({\n          name: name,\n          type: type\n        });\n      }\n      domainFields.sort(function (a, b) {\n        return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n      });\n      return TypedDataEncoder.hashStruct(\"EIP712Domain\", {\n        EIP712Domain: domainFields\n      }, domain);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(domain, types, value) {\n      return hexConcat([\"0x1901\", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash(domain, types, value) {\n      return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n  }, {\n    key: \"resolveNames\",\n    value: function resolveNames(domain, types, value, resolveName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var ensCache, encoder, name;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // Make a copy to isolate it from the object passed in\n              domain = shallowCopy(domain);\n              // Look up all ENS names\n              ensCache = {}; // Do we need to look up the domain's verifyingContract?\n              if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n              }\n              // We are going to use the encoder to visit all the base values\n              encoder = TypedDataEncoder.from(types); // Get a list of all the addresses\n              encoder.visit(value, function (type, value) {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                  ensCache[value] = \"0x\";\n                }\n                return value;\n              });\n              // Lookup each name\n              _context.t0 = _regeneratorRuntime().keys(ensCache);\n            case 6:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 13;\n                break;\n              }\n              name = _context.t1.value;\n              _context.next = 10;\n              return resolveName(name);\n            case 10:\n              ensCache[name] = _context.sent;\n              _context.next = 6;\n              break;\n            case 13:\n              // Replace the domain verifyingContract if needed\n              if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n              }\n              // Replace all ENS names with their address\n              value = encoder.visit(value, function (type, value) {\n                if (type === \"address\" && ensCache[value]) {\n                  return ensCache[value];\n                }\n                return value;\n              });\n              return _context.abrupt(\"return\", {\n                domain: domain,\n                value: value\n              });\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload(domain, types, value) {\n      // Validate the domain fields\n      TypedDataEncoder.hashDomain(domain);\n      // Derive the EIP712Domain Struct reference type\n      var domainValues = {};\n      var domainTypes = [];\n      domainFieldNames.forEach(function (name) {\n        var value = domain[name];\n        if (value == null) {\n          return;\n        }\n        domainValues[name] = domainChecks[name](value);\n        domainTypes.push({\n          name: name,\n          type: domainFieldTypes[name]\n        });\n      });\n      var encoder = TypedDataEncoder.from(types);\n      var typesWithDomain = shallowCopy(types);\n      if (typesWithDomain.EIP712Domain) {\n        logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n      } else {\n        typesWithDomain.EIP712Domain = domainTypes;\n      }\n      // Validate the data structures and types\n      encoder.encode(value);\n      return {\n        types: typesWithDomain,\n        domain: domainValues,\n        primaryType: encoder.primaryType,\n        message: encoder.visit(value, function (type, value) {\n          // bytes\n          if (type.match(/^bytes(\\d*)/)) {\n            return hexlify(arrayify(value));\n          }\n          // uint or int\n          if (type.match(/^u?int/)) {\n            return BigNumber.from(value).toString();\n          }\n          switch (type) {\n            case \"address\":\n              return value.toLowerCase();\n            case \"bool\":\n              return !!value;\n            case \"string\":\n              if (typeof value !== \"string\") {\n                logger.throwArgumentError(\"invalid string\", \"value\", value);\n              }\n              return value;\n          }\n          return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n        })\n      };\n    }\n  }]);\n  return TypedDataEncoder;\n}();","map":{"version":3,"names":["getAddress","BigNumber","arrayify","hexConcat","hexlify","hexZeroPad","isHexString","keccak256","deepCopy","defineReadOnly","shallowCopy","Logger","version","logger","id","padding","Uint8Array","fill","NegativeOne","from","Zero","One","MaxUint256","hexPadRight","value","bytes","padOffset","length","slice","hexTrue","toHexString","hexFalse","domainFieldTypes","name","chainId","verifyingContract","salt","domainFieldNames","checkString","key","throwArgumentError","concat","JSON","stringify","domainChecks","toString","error","toLowerCase","Error","getBaseEncoder","type","match","signed","width","parseInt","String","boundsUpper","mask","boundsLower","add","mul","v","lt","gt","toTwos","encodeType","fields","map","_ref","join","TypedDataEncoder","types","_classCallCheck","Object","freeze","links","parents","subtypes","keys","forEach","_loop","uniqueNames","field","baseType","encoder","push","primaryTypes","filter","n","t","checkCircular","found","child","subtype","primaryType","st","sort","_types","_createClass","getEncoder","_encoderCache","_getEncoder","_this","subEncoder","result","encodedType","values","_ref2","unshift","encodeData","hashStruct","encode","hash","_visit","callback","_this2","reduce","accum","_ref3","visit","getPrimaryType","hashDomain","domain","domainFields","a","b","indexOf","EIP712Domain","resolveNames","resolveName","ensCache","_context","t0","_regeneratorRuntime","t1","done","next","sent","abrupt","stop","_callee","getPayload","domainValues","domainTypes","typesWithDomain","message"],"sources":["../src.ts/typed-data.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}