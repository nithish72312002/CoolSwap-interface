{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkProvider = void 0;\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nvar WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nvar init_1 = require(\"../init\");\nvar Session_1 = require(\"../relay/Session\");\nvar WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nvar util_1 = require(\"../util\");\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\nvar JSONRPC_1 = require(\"./JSONRPC\");\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nvar HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nvar HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nvar WalletLinkProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(WalletLinkProvider, _safe_event_emitter_);\n  var _super = _createSuper(WalletLinkProvider);\n  function WalletLinkProvider(options) {\n    var _this;\n    _classCallCheck(this, WalletLinkProvider);\n    var _a;\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    var chainId = _this.getChainId();\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n    var cachedAddresses = _this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n      if (event.data.type !== \"walletLinkMessage\") return;\n      if (event.data.data.action === \"defaultChainChanged\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n    return _this;\n  }\n  _createClass(WalletLinkProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"isChainOverridden\",\n    get: function get() {\n      return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    },\n    set: function set(value) {\n      this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      var hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n      if (hasChainSwitched && fromRelay) return;\n      if (fromRelay) {\n        this.isChainOverridden = true;\n      }\n      this.jsonRpcUrl = jsonRpcUrl;\n      // emit chainChanged event if necessary\n      var originalChainId = this.getChainId();\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context.sent;\n              _context.next = 5;\n              return relay.watchAsset(type, address, symbol, decimals, image).promise;\n            case 5:\n              result = _context.sent;\n              return _context.abrupt(\"return\", !!result.result);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function watchAsset(_x, _x2, _x3, _x4, _x5) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              _context2.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context2.sent;\n              _context2.next = 7;\n              return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n            case 7:\n              res = _context2.sent;\n              if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                this.updateProviderInfo(rpcUrls[0], chainId, false);\n              }\n              return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function addEthereumChain(_x6, _x7, _x8, _x9, _x10, _x11) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              _context3.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context3.sent;\n              _context3.next = 7;\n              return relay.switchEthereumChain(chainId.toString(10)).promise;\n            case 7:\n              res = _context3.sent;\n              if (!res.errorCode) {\n                _context3.next = 10;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n              });\n            case 10:\n              switchResponse = res.result;\n              if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n              }\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function switchEthereumChain(_x12) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::enable\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n              });\n              if (!(this._addresses.length > 0)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n            case 3:\n              _context4.next = 5;\n              return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n            case 5:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      void this.initializeRelay().then(function (relay) {\n        return relay.resetAndReload();\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      }\n      // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      }\n      // send(JSONRPCRequest[]): JSONRPCResponse[]\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      }\n      // send(JSONRPCRequest): JSONRPCResponse\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      }\n      // send(JSONRPCRequest[], callback): void\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n        return;\n      }\n      // send(JSONRPCRequest, callback): void\n      var cb = callback;\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                _context5.next = 2;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n              });\n            case 2:\n              method = args.method, params = args.params;\n              if (!(typeof method !== \"string\" || method.length === 0)) {\n                _context5.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n              });\n            case 5:\n              if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                _context5.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n              });\n            case 7:\n              newParams = params === undefined ? [] : params; // WalletLink Requests\n              id = this._relayEventManager.makeRequestId();\n              _context5.next = 11;\n              return this._sendRequestAsync({\n                method: method,\n                params: newParams,\n                jsonrpc: \"2.0\",\n                id: id\n              });\n            case 11:\n              result = _context5.sent;\n              return _context5.abrupt(\"return\", result.result);\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function request(_x13) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(match) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context6.sent;\n              _context6.next = 5;\n              return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n            case 5:\n              res = _context6.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context6.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context6.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function scanQRCode(_x14) {\n        return _scanQRCode.apply(this, arguments);\n      }\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(data, action) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context7.sent;\n              _context7.next = 5;\n              return relay.genericRequest(data, action).promise;\n            case 5:\n              res = _context7.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context7.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context7.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function genericRequest(_x15, _x16) {\n        return _genericRequest.apply(this, arguments);\n      }\n      return genericRequest;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n      if (response.result === undefined) {\n        throw new Error(\"WalletLink does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n      this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n      window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n        detail: this._addresses\n      }));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              method = request.method;\n              params = request.params || [];\n              _context8.t0 = method;\n              _context8.next = _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context8.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context8.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context8.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context8.t0 === JSONRPC_1.JSONRPCMethod.walletlink_arbitrary ? 17 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context8.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n              break;\n            case 5:\n              return _context8.abrupt(\"return\", this._eth_requestAccounts());\n            case 6:\n              return _context8.abrupt(\"return\", this._eth_sign(params));\n            case 7:\n              return _context8.abrupt(\"return\", this._eth_ecRecover(params));\n            case 8:\n              return _context8.abrupt(\"return\", this._personal_sign(params));\n            case 9:\n              return _context8.abrupt(\"return\", this._personal_ecRecover(params));\n            case 10:\n              return _context8.abrupt(\"return\", this._eth_signTransaction(params));\n            case 11:\n              return _context8.abrupt(\"return\", this._eth_sendRawTransaction(params));\n            case 12:\n              return _context8.abrupt(\"return\", this._eth_sendTransaction(params));\n            case 13:\n              return _context8.abrupt(\"return\", this._eth_signTypedData_v1(params));\n            case 14:\n              return _context8.abrupt(\"return\", this._throwUnsupportedMethodError());\n            case 15:\n              return _context8.abrupt(\"return\", this._eth_signTypedData_v3(params));\n            case 16:\n              return _context8.abrupt(\"return\", this._eth_signTypedData_v4(params));\n            case 17:\n              return _context8.abrupt(\"return\", this._walletlink_arbitrary(params));\n            case 18:\n              return _context8.abrupt(\"return\", this._wallet_addEthereumChain(params));\n            case 19:\n              return _context8.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n            case 20:\n              return _context8.abrupt(\"return\", this._wallet_watchAsset(params));\n            case 21:\n              _context8.next = 23;\n              return this.initializeRelay();\n            case 23:\n              relay = _context8.sent;\n              return _context8.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n            case 25:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function _handleAsynchronousMethods(_x17) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = (0, util_1.ensureAddressString)(addressString);\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        return lowercaseAddresses.includes(address);\n      } catch (_a) {}\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      if (!this._isKnownAddress(addressString)) {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n      this._ensureKnownAddress(fromAddress);\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (this._addresses.length === 0) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              this._ensureKnownAddress(address);\n              _context9.prev = 1;\n              _context9.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context9.sent;\n              _context9.next = 7;\n              return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            case 7:\n              res = _context9.sent;\n              return _context9.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 11:\n              _context9.prev = 11;\n              _context9.t0 = _context9[\"catch\"](1);\n              if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                _context9.next = 15;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            case 15:\n              throw _context9.t0;\n            case 16:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[1, 11]]);\n      }));\n      function _signEthereumMessage(_x18, _x19, _x20, _x21) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context10.sent;\n              _context10.next = 5;\n              return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n            case 5:\n              res = _context10.sent;\n              return _context10.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function _ethereumAddressFromSignedMessage(_x22, _x23, _x24) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var res, relay;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::_eth_requestAccounts\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n              });\n              if (!(this._addresses.length > 0)) {\n                _context11.next = 3;\n                break;\n              }\n              return _context11.abrupt(\"return\", Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              }));\n            case 3:\n              _context11.prev = 3;\n              _context11.next = 6;\n              return this.initializeRelay();\n            case 6:\n              relay = _context11.sent;\n              _context11.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              res = _context11.sent;\n              _context11.next = 17;\n              break;\n            case 12:\n              _context11.prev = 12;\n              _context11.t0 = _context11[\"catch\"](3);\n              if (!(typeof _context11.t0.message === \"string\" && _context11.t0.message.match(/(denied|rejected)/i))) {\n                _context11.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            case 16:\n              throw _context11.t0;\n            case 17:\n              if (res.result) {\n                _context11.next = 19;\n                break;\n              }\n              throw new Error(\"accounts received is empty\");\n            case 19:\n              this._setAddresses(res.result);\n              return _context11.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              });\n            case 21:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this, [[3, 12]]);\n      }));\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context12.prev = 2;\n              _context12.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context12.sent;\n              _context12.next = 8;\n              return relay.signEthereumTransaction(tx).promise;\n            case 8:\n              res = _context12.sent;\n              return _context12.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context12.prev = 12;\n              _context12.t0 = _context12[\"catch\"](2);\n              if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                _context12.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context12.t0;\n            case 17:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[2, 12]]);\n      }));\n      function _eth_signTransaction(_x25) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n              _context13.next = 3;\n              return this.initializeRelay();\n            case 3:\n              relay = _context13.sent;\n              _context13.next = 6;\n              return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n            case 6:\n              res = _context13.sent;\n              return _context13.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 8:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _eth_sendRawTransaction(_x26) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context14.prev = 2;\n              _context14.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context14.sent;\n              _context14.next = 8;\n              return relay.signAndSubmitEthereumTransaction(tx).promise;\n            case 8:\n              res = _context14.sent;\n              return _context14.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context14.prev = 12;\n              _context14.t0 = _context14[\"catch\"](2);\n              if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                _context14.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context14.t0;\n            case 17:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this, [[2, 12]]);\n      }));\n      function _eth_sendTransaction(_x27) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              this._requireAuthorization();\n              typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n              address = (0, util_1.ensureAddressString)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context15.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function _eth_signTypedData_v1(_x28) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context16.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function _eth_signTypedData_v3(_x29) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context17.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function _eth_signTypedData_v4(_x30) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n      return _eth_signTypedData_v4;\n    }()\n  }, {\n    key: \"_walletlink_arbitrary\",\n    value: function () {\n      var _walletlink_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              action = params[0];\n              data = params[1];\n              if (!(typeof data !== \"string\")) {\n                _context18.next = 4;\n                break;\n              }\n              throw new Error(\"parameter must be a string\");\n            case 4:\n              if (!(typeof action !== \"object\" || action === null)) {\n                _context18.next = 6;\n                break;\n              }\n              throw new Error(\"parameter must be an object\");\n            case 6:\n              _context18.next = 8;\n              return this.genericRequest(action, data);\n            case 8:\n              result = _context18.sent;\n              return _context18.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: result\n              });\n            case 10:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _walletlink_arbitrary(_x31) {\n        return _walletlink_arbitrary2.apply(this, arguments);\n      }\n      return _walletlink_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              request = params[0];\n              if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                _context19.next = 3;\n                break;\n              }\n              return _context19.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"please pass in at least 1 rpcUrl\"\n                }\n              });\n            case 3:\n              if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                _context19.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n              });\n            case 5:\n              if (request.nativeCurrency) {\n                _context19.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n              });\n            case 7:\n              chainIdNumber = parseInt(request.chainId, 16);\n              _context19.next = 10;\n              return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n            case 10:\n              success = _context19.sent;\n              if (!success) {\n                _context19.next = 15;\n                break;\n              }\n              return _context19.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 15:\n              return _context19.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"unable to add ethereum chain\"\n                }\n              });\n            case 16:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function _wallet_addEthereumChain(_x32) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              request = params[0];\n              _context20.next = 3;\n              return this.switchEthereumChain(parseInt(request.chainId, 16));\n            case 3:\n              return _context20.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 4:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function _wallet_switchEthereumChain(_x33) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var _a, request, _request$options, address, symbol, image, decimals, res;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              request = Array.isArray(params) ? params[0] : params;\n              if (!(((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                _context21.next = 3;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"type is a required field\"\n              });\n            case 3:\n              if (!(request.type !== \"ERC20\")) {\n                _context21.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Asset of type '\".concat(request.type, \"' not supported\")\n              });\n            case 5:\n              if (request === null || request === void 0 ? void 0 : request.options) {\n                _context21.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"options is a required field\"\n              });\n            case 7:\n              if (request.options.address) {\n                _context21.next = 9;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"option address is a required option\"\n              });\n            case 9:\n              _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n              _context21.next = 12;\n              return this.watchAsset(request.type, address, symbol, decimals, image);\n            case 12:\n              res = _context21.sent;\n              return _context21.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res\n              });\n            case 14:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function _wallet_watchAsset(_x34) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              param = params[0];\n              _context22.next = 3;\n              return this._filterPolyfill.newFilter(param);\n            case 3:\n              filterId = _context22.sent;\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 5:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function _eth_newFilter(_x35) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.next = 2;\n              return this._filterPolyfill.newBlockFilter();\n            case 2:\n              filterId = _context23.sent;\n              return _context23.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this._filterPolyfill.newPendingTransactionFilter();\n            case 2:\n              filterId = _context24.sent;\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts) {\n          return _this5._setAddresses(accounts);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n  return WalletLinkProvider;\n}(safe_event_emitter_1.default);\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"names":["_toConsumableArray","require","_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","__importDefault","mod","__esModule","exports","WalletLinkProvider","safe_event_emitter_1","bn_js_1","eth_rpc_errors_1","WalletLinkAnalytics_1","init_1","Session_1","WalletLinkRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","_safe_event_emitter_","_super","options","_this","_a","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","isCoinbaseWallet","overrideIsCoinbaseWallet","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","data","params","initializeRelay","window","addEventListener","event","action","_chainId","Number","key","get","undefined","isConnected","set","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","_watchAsset","_callee","symbol","decimals","image","relay","result","_callee$","_context","watchAsset","promise","_x","_x2","_x3","_x4","_x5","apply","arguments","_addEthereumChain","_callee2","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","_b","res","_callee2$","_context2","addEthereumChain","isApproved","_x6","_x7","_x8","_x9","_x10","_x11","_switchEthereumChain","_callee3","switchResponse","_callee3$","_context3","switchEthereumChain","errorCode","ethErrors","provider","custom","code","rpcUrl","_x12","appName","appLogoUrl","_enable","_callee4","_callee4$","_context4","sendEvent","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","_this2","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","_sendRequest","req","arrayCb","_sendMultipleRequestsAsync","responses","err","cb","response","_request2","_callee5","args","newParams","_callee5$","_context5","rpc","invalidRequest","message","makeRequestId","_x13","_scanQRCode","_callee6","match","_callee6$","_context6","ensureRegExpString","_x14","_genericRequest","_callee7","_callee7$","_context7","_x15","_x16","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","concat","newAddresses","JSON","stringify","join","dispatchEvent","CustomEvent","detail","_this3","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","_this4","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_handleAsynchronousMethods2","_callee8","_callee8$","_context8","t0","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","walletlink_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_walletlink_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","_x17","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","selectedAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage2","_callee9","addPrefix","typedDataJson","_callee9$","_context9","signEthereumMessage","userRejectedRequest","_signEthereumMessage","_x18","_x19","_x20","_x21","_ethereumAddressFromSignedMessage2","_callee10","signature","_callee10$","_context10","ethereumAddressFromSignedMessage","_ethereumAddressFromSignedMessage","_x22","_x23","_x24","hexStringFromIntNumber","parseInt","_eth_requestAccounts2","_callee11","_callee11$","_context11","requestEthereumAccounts","_eth_signTransaction2","_callee12","_callee12$","_context12","signEthereumTransaction","_x25","_eth_sendRawTransaction2","_callee13","signedTransaction","_callee13$","_context13","submitEthereumTransaction","_x26","_eth_sendTransaction2","_callee14","_callee14$","_context14","signAndSubmitEthereumTransaction","_x27","_eth_signTypedData_v","_callee15","typedData","typedDataJSON","_callee15$","_context15","ensureParsedJSONObject","hashForSignTypedDataLegacy","_x28","_eth_signTypedData_v2","_callee16","_callee16$","_context16","hashForSignTypedData_v3","_x29","_eth_signTypedData_v5","_callee17","_callee17$","_context17","hashForSignTypedData_v4","_x30","_walletlink_arbitrary2","_callee18","_callee18$","_context18","_x31","_wallet_addEthereumChain2","_callee19","_c","_d","chainIdNumber","success","_callee19$","_context19","error","trim","_x32","_wallet_switchEthereumChain2","_callee20","_callee20$","_context20","_x33","_wallet_watchAsset2","_callee21","_request$options","_callee21$","_context21","invalidParams","_x34","filterId","ensureHexString","uninstallFilter","_eth_newFilter2","_callee22","param","_callee22$","_context22","newFilter","_x35","_eth_newBlockFilter2","_callee23","_callee23$","_context23","newBlockFilter","_eth_newPendingTransactionFilter2","_callee24","_callee24$","_context24","newPendingTransactionFilter","getFilterChanges","getFilterLogs","_this5","setAccountsCallback","accounts","setChainCallback"],"sources":["E:/testprojects/CoolSwap-interface/node_modules/walletlink/dist/provider/WalletLinkProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst init_1 = require(\"../init\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            if (event.data.type !== \"walletLinkMessage\")\n                return;\n            if (event.data.data.action === \"defaultChainChanged\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        void this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // WalletLink Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n        window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", { detail: this._addresses }));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _walletlink_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` }\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` }\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        var _a;\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"type is a required field\"\n            });\n        }\n        if (request.type !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' not supported`\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"options is a required field\"\n            });\n        }\n        if (!request.options.address) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"option address is a required option\"\n            });\n        }\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}