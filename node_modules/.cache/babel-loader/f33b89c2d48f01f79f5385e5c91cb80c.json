{"ast":null,"code":"var n = .2126,\n  r = .7152,\n  t = .0722,\n  e = 1 / 12.92;\nfunction u(n) {\n  return Math.pow((n + .055) / 1.055, 2.4);\n}\nfunction a(a) {\n  var i = a[0] / 255,\n    c = a[1] / 255,\n    o = a[2] / 255,\n    s = i <= .03928 ? i * e : u(i),\n    f = c <= .03928 ? c * e : u(c),\n    l = o <= .03928 ? o * e : u(o);\n  return s * n + f * r + l * t;\n}\nfunction i(n) {\n  var r = 255;\n  8 === (n = n.replace(/^#/, \"\")).length && (r = parseInt(n.slice(6, 8), 16), n = n.substring(0, 6)), 4 === n.length && (r = parseInt(n.slice(3, 4).repeat(2), 16), n = n.substring(0, 3)), 3 === n.length && (n = n[0] + n[0] + n[1] + n[1] + n[2] + n[2]);\n  var t = parseInt(n, 16);\n  return [t >> 16, t >> 8 & 255, 255 & t, r];\n}\nfunction c(n, r) {\n  return (Math.max(n, r) + .05) / (Math.min(n, r) + .05);\n}\nfunction o(n, r) {\n  return c(a(n), a(r));\n}\nfunction s(n, r) {\n  return o(i(n), i(r));\n}\nfunction f(n) {\n  return n >= 7 ? \"AAA\" : n >= 4.5 ? \"AA\" : n >= 3 ? \"AA Large\" : \"Fail\";\n}\nexport { c as luminance, o as rgb, s as hex, f as score };","map":{"version":3,"names":["n","r","t","e","u","Math","pow","a","i","c","o","s","f","l","replace","length","parseInt","slice","substring","repeat","max","min","luminance","rgb","hex","score"],"sources":["../node_modules/relative-luminance/dist/index.m.js","../index.js"],"sourcesContent":["var r=.2126,t=.7152,n=.0722,u=1/12.92;function a(r){return Math.pow((r+.055)/1.055,2.4)}export default function(e){var o=e[0]/255,f=e[1]/255,c=e[2]/255,i=o<=.03928?o*u:a(o),p=f<=.03928?f*u:a(f),v=c<=.03928?c*u:a(c);return i*r+p*t+v*n};\n//# sourceMappingURL=index.m.js.map\n","import relativeLuminance from \"relative-luminance\";\n\nconst hexChars = \"a-f\\\\d\";\nconst match3or4Hex = `#?[${hexChars}]{3}[${hexChars}]?`;\nconst match6or8Hex = `#?[${hexChars}]{6}([${hexChars}]{2})?`;\n\nfunction hexRgb(hex) {\n  hex = hex.replace(/^#/, \"\");\n  let alpha = 255;\n\n  if (hex.length === 8) {\n    alpha = parseInt(hex.slice(6, 8), 16);\n    hex = hex.substring(0, 6);\n  }\n\n  if (hex.length === 4) {\n    alpha = parseInt(hex.slice(3, 4).repeat(2), 16);\n    hex = hex.substring(0, 3);\n  }\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n\n  const num = parseInt(hex, 16);\n  const red = num >> 16;\n  const green = (num >> 8) & 255;\n  const blue = num & 255;\n\n  return [red, green, blue, alpha];\n}\n\n// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\n/**\n * Get the contrast ratio between two relative luminance values\n * @param {number} a luminance value\n * @param {number} b luminance value\n * @returns {number} contrast ratio\n * @example\n * luminance(1, 1); // = 1\n */\nexport function luminance(a, b) {\n  const l1 = Math.max(a, b);\n  const l2 = Math.min(a, b);\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n\n/**\n * Get a score for the contrast between two colors as rgb triplets\n * @param {array} a\n * @param {array} b\n * @returns {number} contrast ratio\n * @example\n * rgb([0, 0, 0], [255, 255, 255]); // = 21\n */\nexport function rgb(a, b) {\n  return luminance(relativeLuminance(a), relativeLuminance(b));\n}\n\n/**\n * Get a score for the contrast between two colors as hex strings\n * @param {string} a hex value\n * @param {string} b hex value\n * @returns {number} contrast ratio\n * @example\n * hex('#000', '#fff'); // = 21\n */\nexport function hex(a, b) {\n  return rgb(hexRgb(a, { format: \"array\" }), hexRgb(b, { format: \"array\" }));\n}\n\n/**\n * Get a textual score from a numeric contrast value\n * @param {number} contrast\n * @returns {string} score\n * @example\n * score(10); // = 'AAA'\n */\nexport function score(contrast) {\n  if (contrast  >= 7) {\n    return 'AAA';\n  }\n  \n  if (contrast >= 4.5) {\n    return 'AA';\n  }\n  \n  if (contrast >= 3) {\n    return 'AA Large';\n  }\n  \n  return 'Fail';\n}\n"],"mappings":"AAAA,IAAIA,CAAA,GAAE;EAAMC,CAAA,GAAE;EAAMC,CAAA,GAAE;EAAMC,CAAA,GAAE,IAAE;AAAM,SAASC,EAAEJ,CAAA;EAAG,OAAOK,IAAA,CAAKC,GAAA,EAAKN,CAAA,GAAE,QAAM,OAAM;AAAA;AAAoB,SAAAO,EAASA,CAAA;EAAG,IAAIC,CAAA,GAAED,CAAA,CAAE,KAAG;IAAIE,CAAA,GAAEF,CAAA,CAAE,KAAG;IAAIG,CAAA,GAAEH,CAAA,CAAE,KAAG;IAAII,CAAA,GAAEH,CAAA,IAAG,SAAOA,CAAA,GAAEL,CAAA,GAAEC,CAAA,CAAEI,CAAA;IAAGI,CAAA,GAAEH,CAAA,IAAG,SAAOA,CAAA,GAAEN,CAAA,GAAEC,CAAA,CAAEK,CAAA;IAAGI,CAAA,GAAEH,CAAA,IAAG,SAAOA,CAAA,GAAEP,CAAA,GAAEC,CAAA,CAAEM,CAAA;EAAG,OAAOC,CAAA,GAAEX,CAAA,GAAEY,CAAA,GAAEX,CAAA,GAAEY,CAAA,GAAEX,CAAA;AAAA;ACMxO,SAASM,EAAOR,CAAA;EAAA,IAEVC,CAAA,GAAQ;EAEO,OAHnBD,CAAA,GAAMA,CAAA,CAAIc,OAAA,CAAQ,MAAM,KAGhBC,MAAA,KACNd,CAAA,GAAQe,QAAA,CAAShB,CAAA,CAAIiB,KAAA,CAAM,GAAG,IAAI,KAClCjB,CAAA,GAAMA,CAAA,CAAIkB,SAAA,CAAU,GAAG,KAGN,MAAflB,CAAA,CAAIe,MAAA,KACNd,CAAA,GAAQe,QAAA,CAAShB,CAAA,CAAIiB,KAAA,CAAM,GAAG,GAAGE,MAAA,CAAO,IAAI,KAC5CnB,CAAA,GAAMA,CAAA,CAAIkB,SAAA,CAAU,GAAG,KAGN,MAAflB,CAAA,CAAIe,MAAA,KACNf,CAAA,GAAMA,CAAA,CAAI,KAAKA,CAAA,CAAI,KAAKA,CAAA,CAAI,KAAKA,CAAA,CAAI,KAAKA,CAAA,CAAI,KAAKA,CAAA,CAAI;EAAA,IAGnDE,CAAA,GAAMc,QAAA,CAAShB,CAAA,EAAK;EAAA,OAKnB,CAJKE,CAAA,IAAO,IACJA,CAAA,IAAO,IAAK,KACR,MAANA,CAAA,EAEaD,CAAA;AAAA;AAarB,SAASQ,EAAUT,CAAA,EAAGC,CAAA;EAAA,QAChBI,IAAA,CAAKe,GAAA,CAAIpB,CAAA,EAAGC,CAAA,IAEV,QADFI,IAAA,CAAKgB,GAAA,CAAIrB,CAAA,EAAGC,CAAA,IACI;AAAA;AAWtB,SAASS,EAAIV,CAAA,EAAGC,CAAA;EAAA,OACdQ,CAAA,CAAUF,CAAA,CAAkBP,CAAA,GAAIO,CAAA,CAAkBN,CAAA;AAAA;AAWpD,SAASU,EAAIX,CAAA,EAAGC,CAAA;EAAA,OACdS,CAAA,CAAIF,CAAA,CAAOR,CAAA,GAAyBQ,CAAA,CAAOP,CAAA;AAAA;AAU7C,SAASW,EAAMZ,CAAA;EAAA,OAChBA,CAAA,IAAa,IACR,QAGLA,CAAA,IAAY,MACP,OAGLA,CAAA,IAAY,IACP,aAGF;AAAA;AAAA,SAAAS,CAAA,IAAAa,SAAA,EAAAZ,CAAA,IAAAa,GAAA,EAAAZ,CAAA,IAAAa,GAAA,EAAAZ,CAAA,IAAAa,KAAA"},"metadata":{},"sourceType":"module"}