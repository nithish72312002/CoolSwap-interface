{"ast":null,"code":"import _objectSpread from \"E:\\\\testprojects\\\\CoolSwap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Field, resetMintState, typeInput } from './actions';\nvar initialState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: ''\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(resetMintState, function () {\n    return initialState;\n  }).addCase(typeInput, function (state, _ref) {\n    var _ref$payload = _ref.payload,\n      field = _ref$payload.field,\n      typedValue = _ref$payload.typedValue,\n      noLiquidity = _ref$payload.noLiquidity;\n    if (noLiquidity) {\n      // they're typing into the field they've last typed in\n      if (field === state.independentField) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          independentField: field,\n          typedValue: typedValue\n        });\n      }\n      // they're typing into a new field, store the other value\n      else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          independentField: field,\n          typedValue: typedValue,\n          otherTypedValue: state.typedValue\n        });\n      }\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        independentField: field,\n        typedValue: typedValue,\n        otherTypedValue: ''\n      });\n    }\n  });\n});","map":{"version":3,"names":["createReducer","Field","resetMintState","typeInput","initialState","independentField","CURRENCY_A","typedValue","otherTypedValue","builder","addCase","state","_ref","_ref$payload","payload","field","noLiquidity","_objectSpread"],"sources":["E:/testprojects/CoolSwap-interface/src/state/mint/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { Field, resetMintState, typeInput } from './actions';\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field;\r\n  readonly typedValue: string;\r\n  readonly otherTypedValue: string; // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n};\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          };\r\n        }\r\n        // they're typing into a new field, store the other value\r\n        else {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n            otherTypedValue: state.typedValue,\r\n          };\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: '',\r\n        };\r\n      }\r\n    })\r\n);\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,KAAK,EAAEC,cAAc,EAAEC,SAAS,QAAQ,WAAW;AAQ5D,IAAMC,YAAuB,GAAG;EAC9BC,gBAAgB,EAAEJ,KAAK,CAACK,UAAU;EAClCC,UAAU,EAAE,EAAE;EACdC,eAAe,EAAE;AACnB,CAAC;AAED,eAAeR,aAAa,CAAYI,YAAY,EAAE,UAACK,OAAO;EAAA,OAC5DA,OAAO,CACJC,OAAO,CAACR,cAAc,EAAE;IAAA,OAAME,YAAY;EAAA,EAAC,CAC3CM,OAAO,CAACP,SAAS,EAAE,UAACQ,KAAK,EAAAC,IAAA,EAAsD;IAAA,IAAAC,YAAA,GAAAD,IAAA,CAAlDE,OAAO;MAAIC,KAAK,GAAAF,YAAA,CAALE,KAAK;MAAER,UAAU,GAAAM,YAAA,CAAVN,UAAU;MAAES,WAAW,GAAAH,YAAA,CAAXG,WAAW;IACrE,IAAIA,WAAW,EAAE;MACf;MACA,IAAID,KAAK,KAAKJ,KAAK,CAACN,gBAAgB,EAAE;QACpC,OAAAY,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRN,gBAAgB,EAAEU,KAAK;UACvBR,UAAU,EAAVA;QAAU;MAEd;MACA;MAAA,KACK;QACH,OAAAU,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRN,gBAAgB,EAAEU,KAAK;UACvBR,UAAU,EAAVA,UAAU;UACVC,eAAe,EAAEG,KAAK,CAACJ;QAAU;MAErC;IACF,CAAC,MAAM;MACL,OAAAU,aAAA,CAAAA,aAAA,KACKN,KAAK;QACRN,gBAAgB,EAAEU,KAAK;QACvBR,UAAU,EAAVA,UAAU;QACVC,eAAe,EAAE;MAAE;IAEvB;EACF,CAAC,CAAC;AAAA,CACN,CAAC"},"metadata":{},"sourceType":"module"}